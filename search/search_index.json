{"config":{"lang":["es"],"separator":"[\\s\\-:]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Curso de Vue 3 - Desarrollo de Aplicaciones Web","text":"<p>Bienvenidos al curso de Vue 3 - El framework progresivo de JavaScript para construir interfaces de usuario modernas y reactivas.</p>"},{"location":"#objetivos-del-curso","title":"Objetivos del Curso","text":"<ul> <li>Conceptos fundamentales de Vue 3 y su ecosistema</li> <li>Desarrollo de componentes reutilizables y mantenibles</li> <li>Gesti\u00f3n de estado con Pinia (el est\u00e1ndar para Vue 3)</li> <li>Enrutamiento con Vue Router para SPAs</li> <li>Consumo de APIs REST/GraphQL</li> <li>Buenas pr\u00e1cticas y patrones de desarrollo profesional</li> </ul>"},{"location":"#nivel-del-curso","title":"Nivel del Curso","text":"<p>Este material est\u00e1 dise\u00f1ado para estudiantes de Desarrollo de Aplicaciones Web con conocimientos previos en:</p> <ul> <li>HTML5 y CSS3</li> <li>JavaScript (ES6+)</li> <li>Conceptos b\u00e1sicos de programaci\u00f3n orientada a objetos</li> <li>Experiencia previa con alg\u00fan framework JS es \u00fatil pero no requerida</li> </ul>"},{"location":"#estructura-del-curso","title":"Estructura del Curso","text":""},{"location":"#1-fundamentos-de-vue-3","title":"1. Fundamentos de Vue 3","text":"<ul> <li>Reactividad y el sistema de instancias</li> <li>Sintaxis de plantillas y directivas b\u00e1sicas</li> <li>Propiedades computadas y watchers</li> <li>Clases y estilos din\u00e1micos</li> </ul>"},{"location":"#2-componentes-y-composicion","title":"2. Componentes y Composici\u00f3n","text":"<ul> <li>Creaci\u00f3n y comunicaci\u00f3n entre componentes</li> <li>Props y eventos personalizados</li> <li>Slots y componentes din\u00e1micos</li> <li>Composition API avanzada</li> </ul>"},{"location":"#3-estado-y-gestion-de-datos","title":"3. Estado y Gesti\u00f3n de Datos","text":"<ul> <li>Gesti\u00f3n de estado con Pinia</li> <li>Patrones de gesti\u00f3n de estado</li> <li>Consumo de APIs REST/GraphQL</li> <li>Manejo de errores y carga de datos</li> </ul>"},{"location":"#4-proyecto-final","title":"4. Proyecto Final","text":"<ul> <li>Estructura de una aplicaci\u00f3n Vue 3</li> <li>Enrutamiento avanzado</li> <li>Autenticaci\u00f3n y autorizaci\u00f3n</li> <li>Despliegue y optimizaci\u00f3n</li> </ul>"},{"location":"#requisitos-tecnicos","title":"Requisitos T\u00e9cnicos","text":"<p>Para seguir este curso necesitar\u00e1s:</p> <ul> <li>Node.js 16+ y npm/yarn</li> <li>Un editor de c\u00f3digo (VS Code recomendado)</li> <li>Vue DevTools (extensi\u00f3n del navegador)</li> <li>Conocimientos b\u00e1sicos de l\u00ednea de comandos</li> </ul>"},{"location":"#como-empezar","title":"C\u00f3mo Empezar","text":"<ol> <li>Instala Node.js (incluye npm)</li> <li>Verifica la instalaci\u00f3n:    <pre><code>node --version\nnpm --version\n</code></pre></li> <li>Crea un proyecto Vue 3 con Vite:    <pre><code>npm create vue@latest mi-proyecto-vue\ncd mi-proyecto-vue\nnpm install\nnpm run dev\n</code></pre></li> </ol>"},{"location":"#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n Oficial de Vue 3</li> <li>Vue Mastery (cursos en video)</li> <li>Vue.js en GitHub</li> <li>Comunidad Vue en Discord</li> <li>Awesome Vue (recursos)</li> </ul>"},{"location":"#sobre-el-curso","title":"Sobre el Curso","text":"<p>Este material ha sido desarrollado para el m\u00f3dulo de Desarrollo de Aplicaciones Web con el objetivo de proporcionar una gu\u00eda completa y pr\u00e1ctica para el desarrollo de aplicaciones modernas con Vue 3.</p>"},{"location":"#metodologia","title":"Metodolog\u00eda","text":"<ul> <li>Aprendizaje basado en proyectos</li> <li>Ejemplos pr\u00e1cticos y c\u00f3digo real</li> <li>Ejercicios progresivos</li> <li>Buenas pr\u00e1cticas de la industria</li> </ul>"},{"location":"#evaluacion","title":"Evaluaci\u00f3n","text":"<ul> <li>Ejercicios pr\u00e1cticos semanales</li> <li>Proyecto final integrador</li> <li>Participaci\u00f3n en foros y actividades</li> </ul> Comenzar Curso Ver Ejercicios"},{"location":"PeticionesHttp/","title":"PeticionesHttp","text":""},{"location":"PeticionesHttp/#llamadas-asincronas-con-axios","title":"Llamadas as\u00edncronas con Axios","text":"<p>Axios es una biblioteca basada en Promesas dise\u00f1ada para facilitar las solicitudes HTTP desde el navegador o Node.js. Se utiliza ampliamente en aplicaciones web para interactuar con APIs, gestionar datos externos y manejar procesos como autenticaci\u00f3n, carga de archivos y m\u00e1s.</p>"},{"location":"PeticionesHttp/#principales-caracteristicas-de-axios","title":"Principales caracter\u00edsticas de Axios","text":"<ol> <li> <p>Basado en Promesas:</p> <ul> <li>Utiliza el est\u00e1ndar de Promesas, lo que permite usar <code>async/await</code> para una sintaxis m\u00e1s limpia y comprensible.</li> <li> <p>Compatible con navegadores y Node.js:</p> </li> <li> <p>Funciona tanto en el cliente como en el servidor, permitiendo un uso vers\u00e1til.</p> </li> <li> <p>Transformaci\u00f3n autom\u00e1tica de datos:</p> </li> <li> <p>Convierte los datos enviados y recibidos en formato JSON autom\u00e1ticamente.</p> </li> <li> <p>Interceptores de solicitudes y respuestas:</p> </li> <li> <p>Permite interceptar solicitudes o respuestas para a\u00f1adir l\u00f3gica personalizada (e.g., manejo de errores global o configuraci\u00f3n de tokens).</p> </li> <li> <p>Soporte para operaciones avanzadas:</p> </li> <li> <p>Cancelaci\u00f3n de solicitudes.</p> </li> <li>Env\u00edo de datos con m\u00faltiples partes (form-data).</li> <li>Manejo de redirecciones, tiempos de espera y reintentos.</li> <li> <p>Configuraci\u00f3n predeterminada personalizable:</p> </li> <li> <p>Puedes establecer configuraciones globales (como la URL base o cabeceras) para evitar repeticiones.</p> </li> </ul> </li> </ol>"},{"location":"PeticionesHttp/#instalacion-de-axios","title":"Instalaci\u00f3n de Axios","text":"<p>Si no tienes Axios instalado, puedes a\u00f1adirlo a tu proyecto con npm o yarn:</p> <pre><code>    npm install axios\n</code></pre> <p>o con yarn <pre><code>    yarn add axios\n</code></pre></p>"},{"location":"PeticionesHttp/#uso-basico","title":"Uso b\u00e1sico","text":"<pre><code>    import axios from 'axios';\n\n    // Realizar una solicitud GET\n    axios.get('https://jsonplaceholder.typicode.com/posts')\n      .then(response =&gt; {\n        console.log(response.data); // Datos de la API\n      })\n      .catch(error =&gt; {\n        console.error(error.message); // Manejo de errores\n      });\n</code></pre>"},{"location":"ciclo-vida/hooks/","title":"Hooks","text":"<p>En Vue 3, el ciclo de vida de una instancia es el conjunto de etapas por las que pasa un componente desde su creaci\u00f3n hasta su destrucci\u00f3n. Durante este ciclo, Vue ejecuta ciertas funciones en momentos espec\u00edficos para permitir que el desarrollador ejecute c\u00f3digo en diferentes fases del ciclo de vida del componente.</p> <p>El ciclo de vida de un componente en Vue 3 se basa en hooks (ganchos o funciones) que puedes sobrescribir para ejecutar l\u00f3gica personalizada. A continuaci\u00f3n te explico las principales etapas y hooks del ciclo de vida de una instancia en Vue 3:</p>"},{"location":"ciclo-vida/hooks/#1-creacion-del-componente","title":"1. Creaci\u00f3n del Componente","text":"<p>Cuando se crea una instancia de Vue, el componente pasa por varias fases de inicializaci\u00f3n.</p> <ul> <li><code>beforeCreate</code>      Este hook se ejecuta antes de que se inicialicen los datos de la instancia y antes de que se configure el <code>reactive</code> (reactividad). Aqu\u00ed no puedes acceder a <code>data</code>, <code>computed</code>, o a los m\u00e9todos.</li> </ul> <pre><code>      beforeCreate() {\n            console.log('beforeCreate');\n          }\n</code></pre> <ul> <li><code>created</code>      Este hook se ejecuta despu\u00e9s de que los datos y eventos hayan sido inicializados, pero antes de que el DOM haya sido renderizado. En este momento, puedes acceder a los datos, m\u00e9todos, y propiedades computadas de la instancia.</li> </ul> <pre><code>     created() {\n       console.log('created');\n     }\n</code></pre>"},{"location":"ciclo-vida/hooks/#2-montaje-del-componente","title":"2. Montaje del Componente","text":"<p>Es cuando la instancia se monta en el DOM. Aqu\u00ed es donde la interfaz de usuario se empieza a renderizar.</p> <ul> <li><code>beforeMount</code>      Este hook se ejecuta justo antes de que el componente sea montado en el DOM. En este punto, el DOM a\u00fan no est\u00e1 actualizado, pero el template est\u00e1 preparado.</li> </ul> <pre><code>     beforeMount() {\n       console.log('beforeMount');\n     }\n</code></pre> <ul> <li><code>mounted</code>      Este hook se ejecuta despu\u00e9s de que el componente ha sido montado y el DOM ha sido actualizado. Aqu\u00ed ya puedes interactuar con el DOM, hacer peticiones a servidores, etc.</li> </ul> <pre><code>     mounted() {\n       console.log('mounted');\n     }\n</code></pre>"},{"location":"ciclo-vida/hooks/#3-actualizacion-del-componente","title":"3. Actualizaci\u00f3n del Componente","text":"<p>Durante el ciclo de vida de un componente, cuando cambian sus datos reactivos, Vue actualiza el DOM para reflejar esos cambios. Durante este proceso, se activan los siguientes hooks:</p> <ul> <li><code>beforeUpdate</code>      Este hook se ejecuta antes de que el DOM sea actualizado debido a un cambio reactivo. Te permite hacer algo antes de que los cambios se reflejen en el DOM.</li> </ul> <pre><code>      beforeUpdate() {\n        console.log('beforeUpdate');\n      }\n</code></pre> <ul> <li><code>updated</code>      Este hook se ejecuta despu\u00e9s de que el DOM ha sido actualizado con los cambios reactivos. Aqu\u00ed puedes hacer alguna l\u00f3gica que dependa de los cambios en el DOM.</li> </ul> <pre><code>     updated() {\n       console.log('updated');\n     }\n</code></pre>"},{"location":"ciclo-vida/hooks/#4-destruccion-del-componente","title":"4. Destrucci\u00f3n del Componente","text":"<p>Cuando una instancia de Vue es destruida, ya sea porque se ha desasociado de la vista o se ha eliminado del DOM, se ejecutan los siguientes hooks.</p> <ul> <li><code>beforeUnmount</code>      Este hook se ejecuta antes de que el componente sea destruido. Es \u00fatil para limpiar recursos, cancelar suscripciones o eventos antes de que el componente deje de existir.</li> </ul> <pre><code>     beforeUnmount() {\n       console.log('beforeUnmount');\n     }\n</code></pre> <ul> <li><code>unmounted</code>      Este hook se ejecuta despu\u00e9s de que el componente ha sido destruido y el DOM ha sido limpiado. Aqu\u00ed puedes realizar la limpieza final, como desuscribirte de eventos o detener procesos as\u00edncronos.</li> </ul> <pre><code>     unmounted() {\n       console.log('unmounted');\n     }\n</code></pre>"},{"location":"ciclo-vida/hooks/#ciclo-de-vida-completo-en-vue-3-resumen","title":"Ciclo de Vida Completo en Vue 3 (Resumen)","text":"<ol> <li><code>beforeCreate</code> \u2192 Se ejecuta primero.</li> <li><code>created</code> \u2192 La instancia est\u00e1 lista, pero a\u00fan no hay DOM.</li> <li><code>beforeMount</code> \u2192 Justo antes de que se inserte en el DOM.</li> <li><code>mounted</code> \u2192 El componente ha sido montado en el DOM.</li> <li><code>beforeUpdate</code> \u2192 Antes de una actualizaci\u00f3n reactiva.</li> <li><code>updated</code> \u2192 Despu\u00e9s de la actualizaci\u00f3n reactiva.</li> <li><code>beforeUnmount</code> \u2192 Antes de que el componente se destruya.</li> <li><code>unmounted</code> \u2192 Despu\u00e9s de que el componente se destruya.</li> </ol>"},{"location":"ciclo-vida/hooks/#5-otros-hooks","title":"5. Otros Hooks:","text":"<ul> <li><code>errorCaptured</code>: Este hook se ejecuta cuando ocurre un error en cualquier componente hijo. Puedes manejar errores de manera global y evitar que se propaguen.</li> <li><code>activated</code> y <code>deactivated</code>: Estos hooks son utilizados en componentes dentro de un <code>&lt;keep-alive&gt;</code>. Se activan cuando el componente es activado o desactivado (no destruido, solo puesto en segundo plano).</li> </ul>"},{"location":"ciclo-vida/hooks/#ejemplo-completo-de-un-componente-vue-3","title":"Ejemplo Completo de un Componente Vue 3:","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ message }}&lt;/h1&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      message: 'Hola, Vue 3!'\n    };\n  },\n  beforeCreate() {\n    console.log('beforeCreate');\n  },\n  created() {\n    console.log('created');\n  },\n  beforeMount() {\n    console.log('beforeMount');\n  },\n  mounted() {\n    console.log('mounted');\n  },\n  beforeUpdate() {\n    console.log('beforeUpdate');\n  },\n  updated() {\n    console.log('updated');\n  },\n  beforeUnmount() {\n    console.log('beforeUnmount');\n  },\n  unmounted() {\n    console.log('unmounted');\n  }\n};\n&lt;/script&gt;\n</code></pre> <p>Este componente te mostrar\u00eda los mensajes de consola correspondientes a cada uno de los hooks en el ciclo de vida.</p>"},{"location":"componentes/comunicacion/","title":"3.2 Comunicaci\u00f3n entre Componentes","text":"<p>En aplicaciones Vue, los componentes necesitan comunicarse entre s\u00ed. Aqu\u00ed veremos los diferentes patrones de comunicaci\u00f3n.</p>"},{"location":"componentes/comunicacion/#1-props-padre-hijo","title":"1. Props (Padre \u2192 Hijo)","text":"<p>Los props permiten pasar datos de un componente padre a un componente hijo.</p> <p>Componente Padre (ParentComponent.vue): <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Lista de Tareas&lt;/h1&gt;\n    &lt;task-list :tareas=\"tareas\" @tarea-completada=\"marcarComoCompletada\" /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref } from 'vue';\nimport TaskList from './TaskList.vue';\n\nexport default {\n  components: { TaskList },\n  setup() {\n    const tareas = ref([\n      { id: 1, texto: 'Aprender Vue', completada: false },\n      { id: 2, texto: 'Hacer la compra', completada: true },\n      { id: 3, texto: 'Hacer ejercicio', completada: false }\n    ]);\n\n    function marcarComoCompletada(id) {\n      const tarea = tareas.value.find(t =&gt; t.id === id);\n      if (tarea) {\n        tarea.completada = !tarea.completada;\n      }\n    }\n\n    return { tareas, marcarComoCompletada };\n  }\n};\n&lt;/script&gt;\n</code></pre></p> <p>Componente Hijo (TaskList.vue): <pre><code>&lt;template&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"tarea in tareas\" :key=\"tarea.id\" \n        :class=\"{ 'completada': tarea.completada }\"\n        @click=\"toggleTarea(tarea.id)\"&gt;\n      {{ tarea.texto }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  props: {\n    tareas: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['tarea-completada'],\n  setup(props, { emit }) {\n    function toggleTarea(id) {\n      emit('tarea-completada', id);\n    }\n\n    return { toggleTarea };\n  }\n};\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.completada {\n  text-decoration: line-through;\n  opacity: 0.7;\n}\n&lt;/style&gt;\n</code></pre></p>"},{"location":"componentes/comunicacion/#2-eventos-personalizados-hijo-padre","title":"2. Eventos Personalizados (Hijo \u2192 Padre)","text":"<p>Los eventos personalizados permiten que los componentes hijos se comuniquen con sus padres.</p>"},{"location":"componentes/comunicacion/#3-provideinject-comunicacion-profunda","title":"3. Provide/Inject (Comunicaci\u00f3n Profunda)","text":"<p>\u00datil para pasar datos a componentes profundamente anidados sin usar props en cada nivel.</p> <p>Componente Ancestro (App.vue): <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Aplicaci\u00f3n de Tareas&lt;/h1&gt;\n    &lt;task-manager /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { provide, ref } from 'vue';\nimport TaskManager from './TaskManager.vue';\n\nexport default {\n  components: { TaskManager },\n  setup() {\n    const tareas = ref([]);\n\n    function agregarTarea(texto) {\n      tareas.value.push({\n        id: Date.now(),\n        texto,\n        completada: false\n      });\n    }\n\n    // Proveer datos a componentes descendientes\n    provide('tareas', tareas);\n    provide('agregarTarea', agregarTarea);\n\n    return { tareas };\n  }\n};\n&lt;/script&gt;\n</code></pre></p> <p>Componente Descendiente (TaskList.vue): <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;ul&gt;\n      &lt;task-item \n        v-for=\"tarea in tareas\" \n        :key=\"tarea.id\" \n        :tarea=\"tarea\"\n      /&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { inject } from 'vue';\nimport TaskItem from './TaskItem.vue';\n\nexport default {\n  components: { TaskItem },\n  setup() {\n    const tareas = inject('tareas');\n    return { tareas };\n  }\n};\n&lt;/script&gt;\n</code></pre></p>"},{"location":"componentes/comunicacion/#4-comunicacion-entre-componentes-hermanos","title":"4. Comunicaci\u00f3n entre Componentes Hermanos","text":""},{"location":"componentes/comunicacion/#usando-un-event-bus-patron-de-diseno","title":"Usando un Event Bus (Patr\u00f3n de dise\u00f1o)","text":"<pre><code>// eventBus.js\nimport { createApp } from 'vue';\nexport const eventBus = createApp({});\n</code></pre> <p>Componente Emisor: <pre><code>&lt;template&gt;\n  &lt;button @click=\"enviarMensaje\"&gt;Enviar Mensaje&lt;/button&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { eventBus } from '../eventBus';\n\nexport default {\n  setup() {\n    function enviarMensaje() {\n      eventBus.config.globalProperties.$emit('mensaje', '\u00a1Hola desde el componente emisor!');\n    }\n\n    return { enviarMensaje };\n  }\n};\n&lt;/script&gt;\n</code></pre></p> <p>Componente Receptor: <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;Mensaje recibido: {{ mensaje }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref, onMounted, onUnmounted } from 'vue';\nimport { eventBus } from '../eventBus';\n\nexport default {\n  setup() {\n    const mensaje = ref('');\n\n    function actualizarMensaje(msg) {\n      mensaje.value = msg;\n    }\n\n    onMounted(() =&gt; {\n      eventBus.config.globalProperties.$on('mensaje', actualizarMensaje);\n    });\n\n    onUnmounted(() =&gt; {\n      eventBus.config.globalProperties.$off('mensaje', actualizarMensaje);\n    });\n\n    return { mensaje };\n  }\n};\n&lt;/script&gt;\n\n## Ejercicio Pr\u00e1ctico: Aplicaci\u00f3n de Tareas con Comunicaci\u00f3n entre Componentes\n\nCrea una aplicaci\u00f3n de tareas con los siguientes componentes, utilizando solo props y eventos personalizados para la comunicaci\u00f3n:\n\n### Estructura de Componentes:\n</code></pre> TodoApp (padre) \u251c\u2500\u2500 AddTodo (hijo) \u251c\u2500\u2500 TodoFilter (hijo) \u2514\u2500\u2500 TodoList (hijo)     \u2514\u2500\u2500 TodoItem (nieto) <pre><code>### TodoApp.vue (Componente Principal)\n\n```vue\n&lt;template&gt;\n  &lt;div class=\"todo-app\"&gt;\n    &lt;h1&gt;Lista de Tareas&lt;/h1&gt;\n    &lt;add-todo @add-todo=\"addTodo\" /&gt;\n    &lt;todo-filter :filter=\"currentFilter\" @update:filter=\"setFilter\" /&gt;\n    &lt;todo-list \n      :todos=\"filteredTodos\" \n      @toggle-todo=\"toggleTodo\" \n      @delete-todo=\"deleteTodo\" \n    /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref, computed } from 'vue';\nimport AddTodo from './AddTodo.vue';\nimport TodoList from './TodoList.vue';\nimport TodoFilter from './TodoFilter.vue';\n\nexport default {\n  components: { AddTodo, TodoList, TodoFilter },\n  setup() {\n    const todos = ref([\n      { id: 1, text: 'Aprender Vue', completed: false },\n      { id: 2, text: 'Hacer la compra', completed: true },\n      { id: 3, text: 'Hacer ejercicio', completed: false }\n    ]);\n\n    const currentFilter = ref('all');\n\n    const filteredTodos = computed(() =&gt; {\n      switch (currentFilter.value) {\n        case 'active':\n          return todos.value.filter(todo =&gt; !todo.completed);\n        case 'completed':\n          return todos.value.filter(todo =&gt; todo.completed);\n        default:\n          return todos.value;\n      }\n    });\n\n    function addTodo(text) {\n      todos.value.push({\n        id: Date.now(),\n        text,\n        completed: false\n      });\n    }\n\n    function toggleTodo(id) {\n      const todo = todos.value.find(t =&gt; t.id === id);\n      if (todo) {\n        todo.completed = !todo.completed;\n      }\n    }\n\n    function deleteTodo(id) {\n      todos.value = todos.value.filter(todo =&gt; todo.id !== id);\n    }\n\n    function setFilter(filter) {\n      currentFilter.value = filter;\n    }\n\n    return {\n      filteredTodos,\n      currentFilter,\n      addTodo,\n      toggleTodo,\n      deleteTodo,\n      setFilter\n    };\n  }\n};\n&lt;/script&gt;\n</code></pre></p>"},{"location":"componentes/comunicacion/#addtodovue","title":"AddTodo.vue","text":"<pre><code>&lt;template&gt;\n  &lt;form @submit.prevent=\"handleSubmit\" class=\"add-todo\"&gt;\n    &lt;input \n      type=\"text\" \n      v-model=\"newTodo\" \n      placeholder=\"Nueva tarea...\"\n      required\n    &gt;\n    &lt;button type=\"submit\"&gt;Agregar&lt;/button&gt;\n  &lt;/form&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  emits: ['add-todo'],\n  setup(props, { emit }) {\n    const newTodo = ref('');\n\n    function handleSubmit() {\n      emit('add-todo', newTodo.value);\n      newTodo.value = '';\n    }\n\n    return {\n      newTodo,\n      handleSubmit\n    };\n  }\n};\n&lt;/script&gt;\n</code></pre>"},{"location":"componentes/comunicacion/#todolistvue","title":"TodoList.vue","text":"<pre><code>&lt;template&gt;\n  &lt;ul class=\"todo-list\"&gt;\n    &lt;todo-item\n      v-for=\"todo in todos\"\n      :key=\"todo.id\"\n      :todo=\"todo\"\n      @toggle=\"$emit('toggle-todo', todo.id)\"\n      @delete=\"$emit('delete-todo', todo.id)\"\n    /&gt;\n  &lt;/ul&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport TodoItem from './TodoItem.vue';\n\nexport default {\n  components: { TodoItem },\n  props: {\n    todos: {\n      type: Array,\n      required: true\n    }\n  },\n  emits: ['toggle-todo', 'delete-todo']\n};\n&lt;/script&gt;\n</code></pre>"},{"location":"componentes/comunicacion/#todoitemvue","title":"TodoItem.vue","text":"<pre><code>&lt;template&gt;\n  &lt;li class=\"todo-item\"&gt;\n    &lt;input \n      type=\"checkbox\" \n      :checked=\"todo.completed\"\n      @change=\"$emit('toggle')\"\n    &gt;\n    &lt;span :class=\"{ 'completed': todo.completed }\"&gt;\n      {{ todo.text }}\n    &lt;/span&gt;\n    &lt;button @click=\"$emit('delete')\" class=\"delete-btn\"&gt;\u00d7&lt;/button&gt;\n  &lt;/li&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  props: {\n    todo: {\n      type: Object,\n      required: true\n    }\n  },\n  emits: ['toggle', 'delete']\n};\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.completed {\n  text-decoration: line-through;\n  opacity: 0.7;\n}\n\n.todo-item {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  padding: 8px 0;\n}\n\n.delete-btn {\n  margin-left: auto;\n  background: #ff6b6b;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  width: 24px;\n  height: 24px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  padding: 0;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/comunicacion/#todofiltervue","title":"TodoFilter.vue","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"todo-filter\"&gt;\n    &lt;button \n      v-for=\"option in options\" \n      :key=\"option.value\"\n      @click=\"$emit('update:filter', option.value)\"\n      :class=\"{ active: option.value === modelValue }\"\n    &gt;\n      {{ option.label }}\n    &lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  props: {\n    modelValue: {\n      type: String,\n      required: true\n    }\n  },\n  emits: ['update:filter'],\n  setup() {\n    const options = [\n      { value: 'all', label: 'Todas' },\n      { value: 'active', label: 'Pendientes' },\n      { value: 'completed', label: 'Completadas' }\n    ];\n\n    return { options };\n  }\n};\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.todo-filter {\n  margin: 20px 0;\n  display: flex;\n  gap: 10px;\n}\n\nbutton {\n  padding: 5px 10px;\n  border: 1px solid #ddd;\n  background: white;\n  cursor: pointer;\n  border-radius: 4px;\n}\n\nbutton.active {\n  background: #42b983;\n  color: white;\n  border-color: #42b983;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/comunicacion/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfC\u00f3mo se pasan los datos de un componente padre a un componente hijo?</li> <li>\u00bfC\u00f3mo puede un componente hijo comunicarse con su componente padre?</li> <li>\u00bfQu\u00e9 es el \"prop drilling\" y c\u00f3mo podr\u00edas evitarlo en una aplicaci\u00f3n m\u00e1s grande?</li> <li>\u00bfCu\u00e1ndo ser\u00eda apropiado usar provide/inject en lugar de pasar props?</li> </ol>"},{"location":"componentes/comunicacion/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido los diferentes m\u00e9todos de comunicaci\u00f3n entre componentes en Vue, es momento de explorar c\u00f3mo implementar la navegaci\u00f3n entre diferentes vistas en tu aplicaci\u00f3n.</p> <p>\u2192 Siguiente: Enrutamiento en Vue</p>"},{"location":"componentes/creacion/","title":"3.1 Creaci\u00f3n de Componentes en Vue 3","text":"<p>Los componentes son los bloques de construcci\u00f3n fundamentales de las aplicaciones Vue. Permiten dividir la interfaz de usuario en piezas independientes y reutilizables.</p>"},{"location":"componentes/creacion/#opciones-de-la-api","title":"Opciones de la API","text":""},{"location":"componentes/creacion/#componente-con-options-api","title":"Componente con Options API","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ title }}&lt;/h1&gt;\n    &lt;p&gt;{{ message }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Contador: {{ count }}&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  // Datos reactivos\n  data() {\n    return {\n      count: 0,\n      title: 'Mi Componente',\n      message: '\u00a1Hola desde Vue 3!'\n    }\n  },\n  // M\u00e9todos\n  methods: {\n    increment() {\n      this.count++\n    }\n  },\n  // Propiedades computadas\n  computed: {\n    doubleCount() {\n      return this.count * 2\n    }\n  },\n  // Hooks del ciclo de vida\n  mounted() {\n    console.log('Componente montado')\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n/* Estilos con alcance al componente */\nbutton {\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/creacion/#componente-con-composition-api","title":"Componente con Composition API","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ title }}&lt;/h1&gt;\n    &lt;p&gt;{{ message }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Contador: {{ count }}&lt;/button&gt;\n    &lt;p&gt;Doble: {{ doubleCount }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed, onMounted } from 'vue'\n\n// Estado reactivo\nconst count = ref(0)\nconst title = ref('Mi Componente con Composition API')\nconst message = '\u00a1Hola desde Vue 3 Composition API!'\n\n// Propiedad computada\nconst doubleCount = computed(() =&gt; count.value * 2)\n\n// M\u00e9todo\nfunction increment() {\n  count.value++\n}\n\n// Hook del ciclo de vida\nonMounted(() =&gt; {\n  console.log('Componente montado')\n})\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n/* Estilos con alcance al componente */\nbutton {\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n  margin-top: 10px;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"componentes/creacion/#componentes-de-un-solo-archivo-sfc","title":"Componentes de un Solo Archivo (SFC)","text":"<p>Los archivos <code>.vue</code> permiten encapsular la plantilla, l\u00f3gica y estilos de un componente en un solo archivo:</p> <pre><code>mi-componente/\n\u251c\u2500\u2500 MiComponente.vue    // Componente principal\n\u2514\u2500\u2500 components/\n    \u2514\u2500\u2500 BotonPersonalizado.vue  // Componente hijo\n</code></pre>"},{"location":"componentes/creacion/#registro-de-componentes","title":"Registro de Componentes","text":""},{"location":"componentes/creacion/#registro-global","title":"Registro Global","text":"<pre><code>import { createApp } from 'vue'\nimport MiComponente from './components/MiComponente.vue'\n\nconst app = createApp({})\napp.component('mi-componente', MiComponente)\n</code></pre>"},{"location":"componentes/creacion/#registro-local","title":"Registro Local","text":"<pre><code>&lt;script&gt;\nimport BotonPersonalizado from './BotonPersonalizado.vue'\n\nexport default {\n  components: {\n    BotonPersonalizado\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"componentes/creacion/#componentes-dinamicos-intercambio-entre-componentes","title":"Componentes Din\u00e1micos (Intercambio entre componentes)","text":"<p>A veces necesitamos cambiar entre diferentes componentes en la misma ubicaci\u00f3n de la pantalla. Vue nos permite hacer esto f\u00e1cilmente con el componente especial <code>&lt;component&gt;</code> y la directiva <code>:is</code>.</p>"},{"location":"componentes/creacion/#ejemplo-basico","title":"Ejemplo B\u00e1sico:","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;!-- Botones para cambiar el componente mostrado --&gt;\n    &lt;button @click=\"mostrar = 'Inicio'\"&gt;Inicio&lt;/button&gt;\n    &lt;button @click=\"mostrar = 'Perfil'\"&gt;Perfil&lt;/button&gt;\n\n    &lt;!-- El componente que se muestra depende del valor de 'mostrar' --&gt;\n    &lt;component :is=\"mostrar\"&gt;&lt;/component&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport Inicio from './Inicio.vue'\nimport Perfil from './Perfil.vue'\nimport { ref } from 'vue'\n\nconst mostrar = ref('Inicio')\n&lt;/script&gt;\n</code></pre>"},{"location":"componentes/creacion/#carga-diferida-de-componentes-lazy-loading","title":"Carga Diferida de Componentes (Lazy Loading)","text":"<p>Para mejorar el rendimiento, podemos cargar componentes solo cuando sean necesarios. Esto es especialmente \u00fatil para componentes grandes que no se necesitan de inmediato.</p>"},{"location":"componentes/creacion/#carga-diferida-basica","title":"Carga Diferida B\u00e1sica:","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;button @click=\"mostrar = true\"&gt;Mostrar Galer\u00eda&lt;/button&gt;\n    &lt;GaleriaDeFotos v-if=\"mostrar\" /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, defineAsyncComponent } from 'vue'\n\nconst mostrar = ref(false)\n\n// El componente GaleriaDeFotos solo se cargar\u00e1 cuando sea necesario\nconst GaleriaDeFotos = defineAsyncComponent(() =&gt; \n  import('./GaleriaDeFotos.vue')\n)\n&lt;/script&gt;\n</code></pre>"},{"location":"componentes/creacion/#beneficios-de-la-carga-diferida","title":"Beneficios de la Carga Diferida:","text":"<ul> <li>Mejora el tiempo de carga inicial de la aplicaci\u00f3n</li> <li>Reduce el tama\u00f1o del paquete inicial</li> <li>Carga los componentes solo cuando el usuario los necesita</li> </ul>"},{"location":"componentes/creacion/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido a crear componentes en Vue 3, es importante entender c\u00f3mo estos componentes pueden comunicarse entre s\u00ed. En la siguiente secci\u00f3n exploraremos los diferentes m\u00e9todos de comunicaci\u00f3n entre componentes.</p> <p>\u2192 Siguiente: Comunicaci\u00f3n entre Componentes</p>"},{"location":"composicion/ciclo-vida/","title":"\ud83d\udd04 Ciclo de Vida en Vue 3","text":"<p>El ciclo de vida de un componente Vue 3 describe todos los eventos que ocurren desde su creaci\u00f3n hasta su destrucci\u00f3n. Comprender estos eventos es crucial para ejecutar c\u00f3digo en el momento adecuado, como realizar peticiones a una API, limpiar suscripciones o manipular el DOM.</p>"},{"location":"composicion/ciclo-vida/#tabla-de-hooks-del-ciclo-de-vida","title":"Tabla de Hooks del Ciclo de Vida","text":"Hook de la Composition API Hook de Options API Descripci\u00f3n <code>onBeforeMount</code> <code>beforeMount</code> Se ejecuta antes de que el componente se monte en el DOM <code>onMounted</code> <code>mounted</code> Se ejecuta despu\u00e9s de que el componente se ha montado <code>onBeforeUpdate</code> <code>beforeUpdate</code> Se ejecuta cuando los datos cambian, antes de que el componente se actualice <code>onUpdated</code> <code>updated</code> Se ejecuta despu\u00e9s de que el componente se ha actualizado <code>onBeforeUnmount</code> <code>beforeUnmount</code> Se ejecuta antes de que el componente se desmonte <code>onUnmounted</code> <code>unmounted</code> Se ejecuta despu\u00e9s de que el componente se ha desmontado <code>onErrorCaptured</code> <code>errorCaptured</code> Se ejecuta cuando se captura un error en cualquier componente hijo <code>onActivated</code> <code>activated</code> Se ejecuta cuando un componente dentro de <code>&lt;keep-alive&gt;</code> se activa <code>onDeactivated</code> <code>deactivated</code> Se ejecuta cuando un componente dentro de <code>&lt;keep-alive&gt;</code> se desactiva <code>onRenderTracked</code> - Se ejecuta cuando una dependencia reactiva es rastreada <code>onRenderTriggered</code> - Se ejecuta cuando una dependencia reactiva desencadena una nueva renderizaci\u00f3n <code>onServerPrefetch</code> <code>serverPrefetch</code> Espec\u00edfico para SSR, se ejecuta durante la renderizaci\u00f3n del lado del servidor"},{"location":"composicion/ciclo-vida/#uso-basico-con-composition-api","title":"Uso B\u00e1sico con Composition API","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"lifecycle-demo\"&gt;\n    &lt;h2&gt;Demo del Ciclo de Vida&lt;/h2&gt;\n    &lt;p&gt;Contador: {{ count }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Incrementar&lt;/button&gt;\n    &lt;div ref=\"messageEl\" class=\"message\"&gt;Mensaje inicial&lt;/div&gt;\n\n    &lt;div v-if=\"showChild\"&gt;\n      &lt;ChildComponent :count=\"count\" /&gt;\n    &lt;/div&gt;\n    &lt;button @click=\"toggleChild\"&gt;\n      {{ showChild ? 'Ocultar' : 'Mostrar' }} componente hijo\n    &lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { \n  ref, \n  onBeforeMount, \n  onMounted,\n  onBeforeUpdate,\n  onUpdated,\n  onBeforeUnmount,\n  onUnmounted,\n  onErrorCaptured,\n  onRenderTracked,\n  onRenderTriggered\n} from 'vue'\nimport ChildComponent from './ChildComponent.vue'\n\n// Estado reactivo\nconst count = ref(0)\nconst messageEl = ref(null)\nconst showChild = ref(true)\nconst error = ref(null)\n\n// M\u00e9todos\nfunction increment() {\n  count.value++\n\n  // Simular un error cuando el contador llega a 5\n  if (count.value === 5) {\n    try {\n      // Esto lanzar\u00e1 un error que ser\u00e1 capturado por errorCaptured\n      nonExistentFunction()\n    } catch (e) {\n      error.value = e.message\n    }\n  }\n}\n\nfunction toggleChild() {\n  showChild.value = !showChild.value\n}\n\n// Hooks del ciclo de vida\nonBeforeMount(() =&gt; {\n  console.log('1. onBeforeMount')\n  // El componente est\u00e1 a punto de montarse\n  // El DOM a\u00fan no est\u00e1 disponible\n  console.log('Elemento del mensaje:', messageEl.value) // null\n})\n\nonMounted(() =&gt; {\n  console.log('2. onMounted')\n  // El componente est\u00e1 montado\n  // El DOM est\u00e1 disponible\n  console.log('Elemento del mensaje:', messageEl.value) // &lt;div&gt;Mensaje inicial&lt;/div&gt;\n\n  // Ejemplo: Configurar un temporizador\n  const timer = setInterval(() =&gt; {\n    console.log('Temporizador activo')\n  }, 1000)\n\n  // Limpieza en onUnmounted\n  onUnmounted(() =&gt; {\n    console.log('Limpieza del temporizador')\n    clearInterval(timer)\n  })\n})\n\nonBeforeUpdate(() =&gt; {\n  console.log('3. onBeforeUpdate')\n  // Se ejecuta cuando los datos reactivos cambian,\n  // antes de que el componente se vuelva a renderizar\n  console.log('Contador a punto de actualizarse a:', count.value)\n})\n\nonUpdated(() =&gt; {\n  console.log('4. onUpdated')\n  // Se ejecuta despu\u00e9s de que el componente se ha actualizado\n  // y el DOM se ha vuelto a renderizar\n  console.log('Contador actualizado a:', count.value)\n\n  // Puedes acceder al DOM actualizado aqu\u00ed\n  if (messageEl.value) {\n    messageEl.value.textContent = `El contador es ${count.value}`\n  }\n})\n\nonBeforeUnmount(() =&gt; {\n  console.log('5. onBeforeUnmount')\n  // El componente est\u00e1 a punto de desmontarse\n  // A\u00fan est\u00e1 completamente funcional\n})\n\nonUnmounted(() =&gt; {\n  console.log('6. onUnmounted')\n  // El componente se ha desmontado\n  // Todas las directivas est\u00e1n desvinculadas\n  // Los listeners de eventos son eliminados\n  // Las instancias de componentes hijos tambi\u00e9n est\u00e1n desmontadas\n})\n\nonErrorCaptured((err, instance, info) =&gt; {\n  console.error('Error capturado:', err)\n  console.log('Instancia del componente:', instance)\n  console.log('Informaci\u00f3n del error:', info)\n\n  // Podemos mostrar un mensaje de error en la interfaz\n  error.value = `Error: ${err.message}`\n\n  // Si retornamos false, el error no se propagar\u00e1\n  return true\n})\n\n// Hooks de depuraci\u00f3n (solo en desarrollo)\nif (process.env.NODE_ENV === 'development') {\n  onRenderTracked((event) =&gt; {\n    console.log('Dependencia rastreada:', event)\n  })\n\n  onRenderTriggered((event) =&gt; {\n    console.log('Dependencia que desencaden\u00f3 la actualizaci\u00f3n:', event)\n  })\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.lifecycle-demo {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  border: 1px solid #e0e0e0;\n  border-radius: 8px;\n  box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #2c3e50;\n  margin-top: 0;\n  padding-bottom: 10px;\n  border-bottom: 1px solid #eee;\n}\n\nbutton {\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  margin: 5px;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n\n.message {\n  margin: 15px 0;\n  padding: 10px;\n  background-color: #f5f5f5;\n  border-left: 4px solid #42b983;\n  font-family: monospace;\n}\n\n.error {\n  color: #e74c3c;\n  background-color: #fde8e7;\n  padding: 10px;\n  border-radius: 4px;\n  margin: 10px 0;\n  border-left: 4px solid #e74c3c;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"composicion/ciclo-vida/#explicacion-de-los-hooks-principales","title":"Explicaci\u00f3n de los Hooks Principales","text":""},{"location":"composicion/ciclo-vida/#1-onbeforemount-y-onmounted","title":"1. <code>onBeforeMount</code> y <code>onMounted</code>","text":"<ul> <li> <p><code>onBeforeMount</code>: Se ejecuta despu\u00e9s de que el componente ha sido inicializado pero antes de que se monte en el DOM. Es \u00fatil para realizar configuraciones iniciales que no requieran acceso al DOM.</p> </li> <li> <p><code>onMounted</code>: Se ejecuta despu\u00e9s de que el componente se ha montado en el DOM. Es el lugar ideal para realizar peticiones a APIs, configurar suscripciones o interactuar con el DOM.</p> </li> </ul>"},{"location":"composicion/ciclo-vida/#2-onbeforeupdate-y-onupdated","title":"2. <code>onBeforeUpdate</code> y <code>onUpdated</code>","text":"<ul> <li> <p><code>onBeforeUpdate</code>: Se ejecuta cuando los datos reactivos cambian, pero antes de que el componente se vuelva a renderizar. \u00datil para acceder al estado anterior del DOM.</p> </li> <li> <p><code>onUpdated</code>: Se ejecuta despu\u00e9s de que el componente se ha actualizado y el DOM se ha vuelto a renderizar. Ten cuidado con las modificaciones al estado aqu\u00ed para evitar bucles infinitos.</p> </li> </ul>"},{"location":"composicion/ciclo-vida/#3-onbeforeunmount-y-onunmounted","title":"3. <code>onBeforeUnmount</code> y <code>onUnmounted</code>","text":"<ul> <li> <p><code>onBeforeUnmount</code>: Se ejecuta justo antes de que el componente se desmonte. El componente sigue estando completamente funcional.</p> </li> <li> <p><code>onUnmounted</code>: Se ejecuta despu\u00e9s de que el componente se ha desmontado. Es el lugar ideal para limpiar temporizadores, cancelar peticiones o eliminar listeners de eventos globales.</p> </li> </ul>"},{"location":"composicion/ciclo-vida/#4-onerrorcaptured","title":"4. <code>onErrorCaptured</code>","text":"<p>Captura errores de cualquier componente hijo. Puedes usarlo para mostrar una interfaz de error o registrar el error en un servicio de monitoreo.</p>"},{"location":"composicion/ciclo-vida/#ejemplo-con-componente-hijo","title":"Ejemplo con Componente Hijo","text":"<pre><code>&lt;!-- ChildComponent.vue --&gt;\n&lt;template&gt;\n  &lt;div class=\"child-component\"&gt;\n    &lt;h3&gt;Componente Hijo&lt;/h3&gt;\n    &lt;p&gt;Contador del padre: {{ props.count }}&lt;/p&gt;\n    &lt;p&gt;Contador local: {{ localCount }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Incrementar Local&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, onMounted, onUnmounted } from 'vue'\n\nconst props = defineProps({\n  count: {\n    type: Number,\n    required: true\n  }\n})\n\n\nconst localCount = ref(0)\n\n\nfunction increment() {\n  localCount.value++\n}\n\nonMounted(() =&gt; {\n  console.log('Componente Hijo: Montado')\n\n  // Ejemplo de suscripci\u00f3n a un evento global\n  window.addEventListener('resize', handleResize)\n})\n\nonUnmounted(() =&gt; {\n  console.log('Componente Hijo: Desmontado')\n  // Importante: Limpiar el event listener\n  window.removeEventListener('resize', handleResize)\n})\n\nfunction handleResize() {\n  console.log('Ventana redimensionada')\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.child-component {\n  margin: 20px 0;\n  padding: 15px;\n  border: 1px solid #e0e0e0;\n  border-radius: 4px;\n  background-color: #f9f9f9;\n}\n\nh3 {\n  margin-top: 0;\n  color: #42b983;\n}\n\nbutton {\n  background-color: #3498db;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  border-radius: 3px;\n  cursor: pointer;\n  font-size: 12px;\n}\n\nbutton:hover {\n  background-color: #2980b9;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"composicion/ciclo-vida/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":"<ol> <li> <p>Limpieza de recursos: Siempre limpia los temporizadores, suscripciones y event listeners en <code>onUnmounted</code>.</p> </li> <li> <p>Evita efectos secundarios en el renderizado: No realices operaciones costosas o con efectos secundarios durante el renderizado. Usa <code>onMounted</code> o <code>onUpdated</code> en su lugar.</p> </li> <li> <p>Manejo de errores: Usa <code>onErrorCaptured</code> para manejar errores de manera elegante.</p> </li> <li> <p>Evita actualizaciones en <code>onUpdated</code>: Ten cuidado al modificar el estado en <code>onUpdated</code> para evitar bucles infinitos.</p> </li> <li> <p>Uso de <code>nextTick</code>: Si necesitas esperar al siguiente ciclo de actualizaci\u00f3n del DOM, usa <code>nextTick</code>.</p> </li> </ol>"},{"location":"composicion/ciclo-vida/#conclusion","title":"Conclusi\u00f3n","text":"<p>El ciclo de vida de los componentes es fundamental para entender cu\u00e1ndo y c\u00f3mo interactuar con el DOM, realizar peticiones as\u00edncronas y limpiar recursos. La Composition API de Vue 3 proporciona una forma m\u00e1s modular y organizada de trabajar con estos hooks en comparaci\u00f3n con la Options API.</p> <p>Recuerda que un uso correcto de estos hooks puede mejorar significativamente el rendimiento y la estabilidad de tu aplicaci\u00f3n.</p>"},{"location":"composicion/computed-watch/","title":"\ud83d\udd0d Propiedades Computadas y Observadores en Vue 3","text":"<p>En la Composition API de Vue 3, las propiedades computadas y los observadores son herramientas poderosas para manejar la l\u00f3gica reactiva de manera eficiente.</p>"},{"location":"composicion/computed-watch/#propiedades-computadas-computed","title":"Propiedades Computadas (<code>computed</code>)","text":"<p>Las propiedades computadas son valores que se calculan autom\u00e1ticamente en funci\u00f3n de otros datos reactivos. Se almacenan en cach\u00e9 y solo se vuelven a calcular cuando sus dependencias cambian.</p>"},{"location":"composicion/computed-watch/#uso-basico","title":"Uso B\u00e1sico","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;input v-model=\"firstName\" placeholder=\"Nombre\"&gt;\n    &lt;input v-model=\"lastName\" placeholder=\"Apellido\"&gt;\n    &lt;p&gt;Nombre completo: {{ fullName }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed } from 'vue'\n\nconst firstName = ref('')\nconst lastName = ref('')\n\n// Propiedad computada\nconst fullName = computed(() =&gt; {\n  return `${firstName.value} ${lastName.value}`.trim()\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/computed-watch/#propiedades-computadas-con-setter","title":"Propiedades Computadas con Setter","text":"<p>Las propiedades computadas pueden tener un setter para permitir la modificaci\u00f3n:</p> <pre><code>const fullName = computed({\n  // Getter\n  get() {\n    return `${firstName.value} ${lastName.value}`.trim()\n  },\n  // Setter\n  set(newValue) {\n    const names = newValue.split(' ')\n    firstName.value = names[0] || ''\n    lastName.value = names[1] || ''\n  }\n})\n\n// Ahora puedes hacer:\n// fullName.value = 'Ana Garc\u00eda'\n</code></pre>"},{"location":"composicion/computed-watch/#watchers-watch-y-watcheffect","title":"Watchers (<code>watch</code> y <code>watchEffect</code>)","text":""},{"location":"composicion/computed-watch/#watch","title":"<code>watch</code>","text":"<p>Observa fuentes de datos espec\u00edficas y ejecuta una funci\u00f3n cuando cambian.</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;input v-model=\"searchQuery\" placeholder=\"Buscar...\"&gt;\n    &lt;p&gt;Resultados de b\u00fasqueda: {{ searchResults.length }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, watch } from 'vue'\n\nconst searchQuery = ref('')\nconst searchResults = ref([])\n\n// Observar cambios en searchQuery\nwatch(searchQuery, async (newQuery, oldQuery) =&gt; {\n  if (newQuery === '') {\n    searchResults.value = []\n    return\n  }\n\n  try {\n    // Simular una llamada a una API\n    const response = await fetch(`/api/search?q=${encodeURIComponent(newQuery)}`)\n    const data = await response.json()\n    searchResults.value = data.results\n  } catch (error) {\n    console.error('Error en la b\u00fasqueda:', error)\n    searchResults.value = []\n  }\n}, { immediate: true }) // Ejecutar inmediatamente al montar\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/computed-watch/#watcheffect","title":"<code>watchEffect</code>","text":"<p>Ejecuta una funci\u00f3n que rastrea autom\u00e1ticamente sus dependencias reactivas.</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;Posici\u00f3n del rat\u00f3n: ({{ x }}, {{ y }})&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, watchEffect, onMounted, onUnmounted } from 'vue'\n\nconst x = ref(0)\nconst y = ref(0)\n\nfunction updateMousePosition(event) {\n  x.value = event.pageX\n  y.value = event.pageY\n}\n\n// watchEffect se ejecuta inmediatamente y rastrea sus dependencias\nconst stopWatch = watchEffect(() =&gt; {\n  console.log(`Posici\u00f3n actual: (${x.value}, ${y.value})`)\n\n  // Limpieza: se ejecutar\u00e1 antes de la pr\u00f3xima ejecuci\u00f3n o cuando se detenga\n  return () =&gt; {\n    console.log('Limpieza del efecto')\n  }\n})\n\n// Agregar y limpiar el event listener\nonMounted(() =&gt; {\n  window.addEventListener('mousemove', updateMousePosition)\n})\n\nonUnmounted(() =&gt; {\n  window.removeEventListener('mousemove', updateMousePosition)\n  stopWatch() // Detener el watcher cuando el componente se desmonte\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/computed-watch/#comparacion-watch-vs-watcheffect","title":"Comparaci\u00f3n: <code>watch</code> vs <code>watchEffect</code>","text":"Caracter\u00edstica <code>watch</code> <code>watchEffect</code> Ejecuci\u00f3n inicial Solo con <code>{ immediate: true }</code> Siempre se ejecuta inmediatamente Dependencias Especificadas expl\u00edcitamente Detectadas autom\u00e1ticamente Acceso al valor anterior S\u00ed No Rendimiento Mejor para observar fuentes espec\u00edficas Mejor para efectos con m\u00faltiples dependencias Uso t\u00edpico Cuando necesitas reaccionar a cambios espec\u00edficos Para efectos secundarios que dependen de m\u00faltiples fuentes"},{"location":"composicion/computed-watch/#ejemplo-avanzado-busqueda-con-debounce","title":"Ejemplo Avanzado: B\u00fasqueda con Debounce","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"search-container\"&gt;\n    &lt;h2&gt;Buscador de Usuarios&lt;/h2&gt;\n    &lt;input \n      v-model=\"searchQuery\" \n      placeholder=\"Buscar usuarios...\"\n      class=\"search-input\"\n    &gt;\n\n    &lt;div v-if=\"isLoading\" class=\"loading\"&gt;Buscando...&lt;/div&gt;\n\n    &lt;div v-else-if=\"error\" class=\"error\"&gt;\n      Error: {{ error }}\n    &lt;/div&gt;\n\n    &lt;div v-else-if=\"users.length === 0\" class=\"no-results\"&gt;\n      No se encontraron resultados para \"{{ lastQuery }}\"\n    &lt;/div&gt;\n\n    &lt;ul v-else class=\"user-list\"&gt;\n      &lt;li v-for=\"user in users\" :key=\"user.id\" class=\"user-item\"&gt;\n        &lt;img :src=\"user.avatar\" :alt=\"user.name\" class=\"avatar\"&gt;\n        &lt;div class=\"user-info\"&gt;\n          &lt;h3&gt;{{ user.name }}&lt;/h3&gt;\n          &lt;p&gt;@{{ user.username }}&lt;/p&gt;\n          &lt;p&gt;{{ user.email }}&lt;/p&gt;\n        &lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;div v-if=\"users.length &gt; 0\" class=\"stats\"&gt;\n      Mostrando {{ users.length }} de {{ totalUsers }} resultados\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, watch, computed } from 'vue'\n\n// Estado reactivo\nconst searchQuery = ref('')\nconst users = ref([])\nconst isLoading = ref(false)\nconst error = ref(null)\nconst lastQuery = ref('')\nconst totalUsers = ref(0)\n\n// Computed para determinar si mostrar el mensaje de b\u00fasqueda vac\u00eda\nconst showEmptySearch = computed(() =&gt; {\n  return !isLoading.value &amp;&amp; !error.value &amp;&amp; lastQuery.value === ''\n})\n\n// Funci\u00f3n para buscar usuarios (simulando una API)\nasync function fetchUsers(query) {\n  if (!query.trim()) {\n    users.value = []\n    totalUsers.value = 0\n    return\n  }\n\n  isLoading.value = true\n  error.value = null\n  lastQuery.value = query\n\n  try {\n    // En un caso real, esto ser\u00eda una llamada a tu API\n    const response = await fetch(`https://jsonplaceholder.typicode.com/users?q=${encodeURIComponent(query)}`)\n\n    if (!response.ok) {\n      throw new Error('Error al buscar usuarios')\n    }\n\n    const data = await response.json()\n\n    // Simular un retraso de red\n    await new Promise(resolve =&gt; setTimeout(resolve, 500))\n\n    // Formatear los datos\n    users.value = data.map(user =&gt; ({\n      id: user.id,\n      name: user.name,\n      username: user.username,\n      email: user.email,\n      // Usar una imagen de marcador de posici\u00f3n\n      avatar: `https://i.pravatar.cc/50?u=${user.email}`\n    }))\n\n    totalUsers.value = users.value.length\n  } catch (err) {\n    console.error('Error al buscar usuarios:', err)\n    error.value = 'No se pudo cargar la b\u00fasqueda. Int\u00e9ntalo de nuevo.'\n    users.value = []\n  } finally {\n    isLoading.value = false\n  }\n}\n\n// Debounce para evitar m\u00faltiples llamadas a la API\nlet timeoutId = null\n\nwatch(searchQuery, (newQuery) =&gt; {\n  // Cancelar el timeout anterior\n  if (timeoutId) {\n    clearTimeout(timeoutId)\n  }\n\n  // Establecer un nuevo timeout\n  timeoutId = setTimeout(() =&gt; {\n    fetchUsers(newQuery)\n  }, 300) // Esperar 300ms despu\u00e9s de que el usuario deje de escribir\n})\n\n// Limpiar el timeout cuando el componente se desmonte\nonUnmounted(() =&gt; {\n  if (timeoutId) {\n    clearTimeout(timeoutId)\n  }\n})\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.search-container {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh2 {\n  color: #2c3e50;\n  margin-bottom: 20px;\n  text-align: center;\n}\n\n.search-input {\n  width: 100%;\n  padding: 12px 15px;\n  font-size: 16px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  margin-bottom: 20px;\n  box-sizing: border-box;\n}\n\n.search-input:focus {\n  outline: none;\n  border-color: #42b983;\n  box-shadow: 0 0 0 2px rgba(66, 185, 131, 0.2);\n}\n\n.loading, .no-results, .error {\n  text-align: center;\n  padding: 20px;\n  color: #666;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n  margin-bottom: 20px;\n}\n\n.error {\n  color: #e74c3c;\n  background-color: #fde8e7;\n  border: 1px solid #f5c6cb;\n}\n\n.user-list {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));\n  gap: 20px;\n}\n\n.user-item {\n  display: flex;\n  align-items: center;\n  padding: 15px;\n  background-color: white;\n  border: 1px solid #eee;\n  border-radius: 8px;\n  transition: transform 0.2s, box-shadow 0.2s;\n}\n\n.user-item:hover {\n  transform: translateY(-2px);\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);\n}\n\n.avatar {\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  margin-right: 15px;\n  object-fit: cover;\n}\n\n.user-info h3 {\n  margin: 0 0 5px 0;\n  color: #2c3e50;\n}\n\n.user-info p {\n  margin: 2px 0;\n  font-size: 0.9em;\n  color: #666;\n}\n\n.user-info p:last-child {\n  color: #42b983;\n  font-weight: 500;\n}\n\n.stats {\n  text-align: center;\n  margin-top: 20px;\n  color: #666;\n  font-size: 0.9em;\n}\n\n/* Efecto de carga */\n@keyframes pulse {\n  0% { opacity: 0.6; }\n  50% { opacity: 1; }\n  100% { opacity: 0.6; }\n}\n\n.loading {\n  animation: pulse 1.5s infinite;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"composicion/computed-watch/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":"<ol> <li> <p>Usa <code>computed</code> para valores derivados: Mant\u00e9n tu template limpio moviendo la l\u00f3gica de transformaci\u00f3n a propiedades computadas.</p> </li> <li> <p>Elige <code>watch</code> cuando necesites:</p> </li> <li>Acceder al valor anterior</li> <li>Observar m\u00faltiples fuentes</li> <li> <p>Controlar cu\u00e1ndo se ejecuta el efecto</p> </li> <li> <p>Elige <code>watchEffect</code> cuando:</p> </li> <li>Necesitas rastrear autom\u00e1ticamente las dependencias</li> <li>El efecto depende de m\u00faltiples fuentes</li> <li> <p>No necesitas el valor anterior</p> </li> <li> <p>Limpia los efectos secundarios: Siempre limpia los efectos secundarios (como event listeners o timeouts) en la funci\u00f3n de limpieza de <code>watchEffect</code> o <code>onUnmounted</code>.</p> </li> <li> <p>Usa debouncing para operaciones costosas: Como se muestra en el ejemplo de b\u00fasqueda, usa debouncing para limitar la frecuencia de las operaciones costosas.</p> </li> </ol>"},{"location":"composicion/computed-watch/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<p>Ahora que has aprendido sobre propiedades computadas y observadores en la Composition API, est\u00e1s listo para explorar c\u00f3mo compartir estado entre componentes con <code>provide</code> e <code>inject</code>.</p> <p>\ud83d\udc49 Siguiente: Provide e Inject</p>"},{"location":"composicion/provide-inject/","title":"Provide inject","text":""},{"location":"composicion/provide-inject/#cuando-usar-provideinject-vs-otras-soluciones","title":"Cu\u00e1ndo Usar <code>provide</code>/<code>inject</code> vs. Otras Soluciones","text":"Soluci\u00f3n Cu\u00e1ndo Usar Props/Emits Para comunicaci\u00f3n padre-hijo directa o pocos niveles <code>provide</code>/<code>inject</code> Para comunicaci\u00f3n a trav\u00e9s de m\u00faltiples niveles de componentes Pinia/Vuex Para estado global compartido en toda la aplicaci\u00f3n Event Bus Para comunicaci\u00f3n entre componentes sin relaci\u00f3n directa (usar con moderaci\u00f3n)"},{"location":"composicion/provide-inject/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":"<ol> <li> <p>Usa claves de s\u00edmbolo para evitar conflictos de nombres en aplicaciones grandes.</p> </li> <li> <p>Documenta las propiedades inyectadas para que otros desarrolladores sepan qu\u00e9 esperar.</p> </li> <li> <p>Proporciona valores por defecto para hacer que tus componentes sean m\u00e1s reutilizables.</p> </li> <li> <p>Evita el abuso - si encuentras que est\u00e1s inyectando demasiadas cosas, considera usar un gestor de estado como Pinia.</p> </li> <li> <p>Mant\u00e9n la inmutabilidad - proporciona m\u00e9todos para modificar el estado en lugar de exponer el estado directamente.</p> </li> </ol>"},{"location":"composicion/provide-inject/#ejemplo-con-typescript","title":"Ejemplo con TypeScript","text":"<p>Para mejorar la seguridad de tipos, puedes usar TypeScript con <code>provide</code> e <code>inject</code>:</p> <pre><code>// En un archivo de tipos (ej: types/task.ts)\nexport interface Task {\n  id: number\n  text: string\n  completed: boolean\n}\n\nexport interface TaskContext {\n  tasks: Ref&lt;Task[]&gt;\n  addTask: (text: string) =&gt; void\n  removeTask: (id: number) =&gt; void\n  toggleTaskStatus: (id: number) =&gt; void\n}\n\n// En tu componente proveedor\nconst tasks = ref&lt;Task[]&gt;([])\n\n// Proporcionar con tipo\nexport const TaskKey: InjectionKey&lt;TaskContext&gt; = Symbol('tasks')\n\nprovide(TaskKey, {\n  tasks,\n  addTask,\n  removeTask,\n  toggleTaskStatus\n})\n\n// En el componente consumidor\nconst { tasks, addTask } = inject(TaskKey)!\n</code></pre>"},{"location":"composicion/provide-inject/#conclusion","title":"Conclusi\u00f3n","text":"<p><code>provide</code> e <code>inject</code> son herramientas poderosas para la comunicaci\u00f3n entre componentes en aplicaciones Vue 3 de tama\u00f1o mediano a grande. Cuando se usan correctamente, pueden simplificar significativamente la estructura de tu aplicaci\u00f3n al reducir la necesidad de \"prop drilling\".</p> <p>Recuerda que, aunque son \u00fatiles, no son un reemplazo completo para un gestor de estado como Pinia en aplicaciones muy grandes o complejas. \u00dasalos sabiamente seg\u00fan las necesidades de tu proyecto.</p>"},{"location":"composicion/provide-inject/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n oficial de provide/inject</li> <li>Gu\u00eda de la Composition API</li> <li>Patrones avanzados con provide/inject</li> </ul> <p>Ahora que has aprendido sobre <code>provide</code> e <code>inject</code>, est\u00e1s listo para crear componentes m\u00e1s desacoplados y reutilizables en tus aplicaciones Vue 3.</p>"},{"location":"composicion/ref-reactive/","title":"\ud83d\udd04 <code>ref</code> y <code>reactive</code> en Vue 3","text":"<p>En Vue 3, <code>ref</code> y <code>reactive</code> son las dos funciones principales para crear datos reactivos. Ambas permiten rastrear cambios en los datos y actualizar la interfaz de usuario de manera reactiva, pero tienen diferencias clave en su uso y comportamiento.</p>"},{"location":"composicion/ref-reactive/#ref-referencia-reactiva","title":"<code>ref</code> - Referencia Reactiva","text":"<p><code>ref</code> crea una referencia reactiva a un valor. Es \u00fatil para valores primitivos (n\u00fameros, strings, booleanos) u objetos.</p>"},{"location":"composicion/ref-reactive/#uso-basico","title":"Uso B\u00e1sico","text":"<pre><code>import { ref } from 'vue'\n\n// Crear una referencia reactiva\nconst count = ref(0)\nconst name = ref('Juan')\n\n// Acceder al valor\nconsole.log(count.value) // 0\nconsole.log(name.value)  // 'Juan'\n\n// Modificar el valor\ncount.value++\nname.value = 'Carlos'\n</code></pre>"},{"location":"composicion/ref-reactive/#en-plantillas","title":"En Plantillas","text":"<p>En las plantillas, Vue desempaqueta autom\u00e1ticamente las referencias, por lo que no necesitas usar <code>.value</code>:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;Contador: {{ count }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Incrementar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue'\n\nconst count = ref(0)\n\nfunction increment() {\n  count.value++\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/ref-reactive/#reactive-objeto-reactivo","title":"<code>reactive</code> - Objeto Reactivo","text":"<p><code>reactive</code> crea un objeto reactivo. A diferencia de <code>ref</code>, no es necesario usar <code>.value</code> para acceder a sus propiedades.</p>"},{"location":"composicion/ref-reactive/#uso-basico_1","title":"Uso B\u00e1sico","text":"<pre><code>import { reactive } from 'vue'\n\n// Crear un objeto reactivo\nconst state = reactive({\n  count: 0,\n  name: 'Juan',\n  todos: []\n})\n\n// Acceder a las propiedades\nconsole.log(state.count) // 0\nconsole.log(state.name)  // 'Juan'\n\n\n// Modificar las propiedades\nstate.count++\nstate.name = 'Carlos'\nstate.todos.push({ id: 1, text: 'Aprender Vue 3' })\n</code></pre>"},{"location":"composicion/ref-reactive/#en-plantillas_1","title":"En Plantillas","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;Contador: {{ state.count }}&lt;/p&gt;\n    &lt;p&gt;Nombre: {{ state.name }}&lt;/p&gt;\n    &lt;ul&gt;\n      &lt;li v-for=\"todo in state.todos\" :key=\"todo.id\"&gt;\n        {{ todo.text }}\n      &lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;button @click=\"increment\"&gt;Incrementar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { reactive } from 'vue'\n\nconst state = reactive({\n  count: 0,\n  name: 'Juan',\n  todos: []\n})\n\nfunction increment() {\n  state.count++\n  state.todos.push({ id: Date.now(), text: `Tarea ${state.count}` })\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/ref-reactive/#ref-vs-reactive-cuando-usar-cada-uno","title":"<code>ref</code> vs <code>reactive</code> - \u00bfCu\u00e1ndo usar cada uno?","text":""},{"location":"composicion/ref-reactive/#usa-ref-cuando","title":"Usa <code>ref</code> cuando:","text":"<ul> <li>Necesitas una variable reactiva simple (n\u00fameros, strings, booleanos)</li> <li>Necesitas reasignar valores completamente (como reemplazar un objeto entero)</li> <li>Est\u00e1s trabajando con valores primitivos</li> <li>Necesitas pasar la referencia a trav\u00e9s de la composici\u00f3n de funciones</li> </ul>"},{"location":"composicion/ref-reactive/#usa-reactive-cuando","title":"Usa <code>reactive</code> cuando:","text":"<ul> <li>Tienes un grupo l\u00f3gico de propiedades que siempre se usan juntas</li> <li>Est\u00e1s trabajando con un objeto que no cambiar\u00e1 su referencia</li> <li>Prefieres la sintaxis sin <code>.value</code></li> </ul>"},{"location":"composicion/ref-reactive/#convertir-entre-ref-y-reactive","title":"Convertir entre <code>ref</code> y <code>reactive</code>","text":""},{"location":"composicion/ref-reactive/#reactive-a-ref","title":"<code>reactive</code> a <code>ref</code>","text":"<pre><code>import { reactive, toRefs } from 'vue'\n\nconst state = reactive({\n  count: 0,\n  name: 'Juan'\n})\n\n// Convertir propiedades reactivas a refs individuales\nconst { count, name } = toRefs(state)\n\n// Ahora count y name son refs que est\u00e1n sincronizados con state\n</code></pre>"},{"location":"composicion/ref-reactive/#ref-a-reactive","title":"<code>ref</code> a <code>reactive</code>","text":"<pre><code>import { ref, reactive } from 'vue'\n\nconst count = ref(0)\nconst name = ref('Juan')\n\n// Crear un objeto reactivo a partir de refs\nconst state = reactive({\n  count,\n  name\n})\n\n// Los cambios en state.count actualizar\u00e1n count.value y viceversa\n</code></pre>"},{"location":"composicion/ref-reactive/#desestructuracion-reactiva","title":"Desestructuraci\u00f3n Reactiva","text":"<p>Cuando desestructuras un objeto reactivo, pierdes la reactividad. Para mantenerla, usa <code>toRefs</code> o <code>toRef</code>:</p> <pre><code>import { reactive, toRefs } from 'vue'\n\nconst state = reactive({\n  count: 0,\n  name: 'Juan'\n})\n\n// \u274c Mal - pierde reactividad\nconst { count, name } = state\n\n// \u2705 Bien - mantiene la reactividad\nconst { count, name } = toRefs(state)\n\n\n// O para una sola propiedad\nconst count = toRef(state, 'count')\n</code></pre>"},{"location":"composicion/ref-reactive/#ejemplo-practico-lista-de-tareas","title":"Ejemplo Pr\u00e1ctico: Lista de Tareas","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"todo-app\"&gt;\n    &lt;h1&gt;Lista de Tareas&lt;/h1&gt;\n\n    &lt;!-- Formulario para a\u00f1adir tareas --&gt;\n    &lt;div class=\"add-todo\"&gt;\n      &lt;input \n        v-model=\"newTodoText\" \n        @keyup.enter=\"addTodo\" \n        placeholder=\"Nueva tarea...\"\n      &gt;\n      &lt;button @click=\"addTodo\"&gt;A\u00f1adir&lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Filtros --&gt;\n    &lt;div class=\"filters\"&gt;\n      &lt;button \n        v-for=\"filter in filters\" \n        :key=\"filter\"\n        :class=\"{ active: currentFilter === filter }\"\n        @click=\"currentFilter = filter\"\n      &gt;\n        {{ filter }}\n      &lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Lista de tareas --&gt;\n    &lt;ul class=\"todo-list\"&gt;\n      &lt;li \n        v-for=\"todo in filteredTodos\" \n        :key=\"todo.id\"\n        :class=\"{ completed: todo.completed }\"\n      &gt;\n        &lt;input \n          type=\"checkbox\" \n          v-model=\"todo.completed\"\n        &gt;\n        &lt;span class=\"todo-text\"&gt;{{ todo.text }}&lt;/span&gt;\n        &lt;button \n          class=\"delete-btn\" \n          @click=\"removeTodo(todo.id)\"\n        &gt;\n          Eliminar\n        &lt;/button&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;!-- Contador de tareas --&gt;\n    &lt;div class=\"todo-stats\"&gt;\n      &lt;span&gt;{{ activeTodosCount }} tareas pendientes&lt;/span&gt;\n      &lt;button \n        v-if=\"hasCompletedTodos\" \n        @click=\"clearCompleted\"\n        class=\"clear-btn\"\n      &gt;\n        Limpiar completadas\n      &lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, reactive, computed, onMounted } from 'vue'\n\n// Estado reactivo con reactive (objeto)\nconst todoState = reactive({\n  todos: [],\n  filters: ['Todas', 'Activas', 'Completadas'],\n  currentFilter: 'Todas'\n})\n\n// Ref para el input de nueva tarea\nconst newTodoText = ref('')\n\n\n// Propiedades computadas\nconst filteredTodos = computed(() =&gt; {\n  switch (todoState.currentFilter) {\n    case 'Activas':\n      return todoState.todos.filter(todo =&gt; !todo.completed)\n    case 'Completadas':\n      return todoState.todos.filter(todo =&gt; todo.completed)\n    default:\n      return todoState.todos\n  }\n})\n\nconst activeTodosCount = computed(() =&gt; \n  todoState.todos.filter(todo =&gt; !todo.completed).length\n)\n\nconst hasCompletedTodos = computed(() =&gt; \n  todoState.todos.some(todo =&gt; todo.completed)\n)\n\n// M\u00e9todos\nfunction addTodo() {\n  if (newTodoText.value.trim()) {\n    todoState.todos.push({\n      id: Date.now(),\n      text: newTodoText.value.trim(),\n      completed: false,\n      createdAt: new Date()\n    })\n    newTodoText.value = ''\n  }\n}\n\nfunction removeTodo(id) {\n  const index = todoState.todos.findIndex(todo =&gt; todo.id === id)\n  if (index !== -1) {\n    todoState.todos.splice(index, 1)\n  }\n}\n\nfunction clearCompleted() {\n  todoState.todos = todoState.todos.filter(todo =&gt; !todo.completed)\n}\n\n// Cargar tareas guardadas al montar el componente\nonMounted(() =&gt; {\n  const savedTodos = localStorage.getItem('todos')\n  if (savedTodos) {\n    todoState.todos = JSON.parse(savedTodos)\n  }\n})\n\n// Guardar tareas cuando cambian\nwatch(() =&gt; [...todoState.todos], (newTodos) =&gt; {\n  localStorage.setItem('todos', JSON.stringify(newTodos))\n}, { deep: true })\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.todo-app {\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n}\n\nh1 {\n  color: #2c3e50;\n  text-align: center;\n  margin-bottom: 20px;\n}\n\n.add-todo {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n}\n\ninput[type=\"text\"] {\n  flex: 1;\n  padding: 10px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n}\n\nbutton {\n  padding: 10px 15px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 14px;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #3aa876;\n}\n\n.filters {\n  display: flex;\n  gap: 10px;\n  margin-bottom: 20px;\n  justify-content: center;\n}\n\n.filters button {\n  background-color: #f0f0f0;\n  color: #333;\n}\n\n.filters button.active {\n  background-color: #42b983;\n  color: white;\n}\n\n.todo-list {\n  list-style: none;\n  padding: 0;\n  margin: 0 0 20px 0;\n}\n\n.todo-list li {\n  display: flex;\n  align-items: center;\n  padding: 12px;\n  background-color: white;\n  border: 1px solid #eee;\n  margin-bottom: 8px;\n  border-radius: 4px;\n  transition: all 0.2s;\n}\n\n.todo-list li:hover {\n  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);\n}\n\n.todo-list li.completed .todo-text {\n  text-decoration: line-through;\n  color: #888;\n}\n\n.todo-text {\n  flex: 1;\n  margin: 0 10px;\n}\n\n.delete-btn {\n  background-color: #ff6b6b;\n  color: white;\n  padding: 5px 10px;\n  font-size: 12px;\n}\n\n.delete-btn:hover {\n  background-color: #ff5252;\n}\n\n.todo-stats {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  color: #666;\n  font-size: 14px;\n}\n\n.clear-btn {\n  background-color: #f0f0f0;\n  color: #666;\n  padding: 5px 10px;\n  font-size: 12px;\n}\n\n.clear-btn:hover {\n  background-color: #e0e0e0;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"composicion/ref-reactive/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<p>Ahora que has aprendido sobre <code>ref</code> y <code>reactive</code>, est\u00e1s listo para explorar las propiedades computadas y los observadores en Vue 3.</p> <p>\ud83d\udc49 Siguiente: Computed y Watch</p>"},{"location":"composicion/setup/","title":"\ud83d\udee0\ufe0f La funci\u00f3n <code>setup()</code> en Vue 3","text":"<p>La funci\u00f3n <code>setup()</code> es el punto de entrada para la Composition API en Vue 3. Es donde declaras las propiedades reactivas, m\u00e9todos computados, observadores y hooks del ciclo de vida de tu componente.</p>"},{"location":"composicion/setup/#conceptos-basicos","title":"Conceptos B\u00e1sicos","text":""},{"location":"composicion/setup/#estructura-basica","title":"Estructura B\u00e1sica","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ title }}&lt;/h1&gt;\n    &lt;p&gt;Contador: {{ count }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Incrementar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref } from 'vue'\n\nexport default {\n  // La funci\u00f3n setup() se ejecuta antes de que el componente sea creado\n  // No tienes acceso a `this` aqu\u00ed\n  setup() {\n    // Estado reactivo\n    const count = ref(0)\n    const title = ref('Mi Componente')\n\n    // M\u00e9todos\n    function increment() {\n      count.value++\n    }\n\n\n    // Todo lo que devuelvas estar\u00e1 disponible en la plantilla\n    return {\n      title,\n      count,\n      increment\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/setup/#acceso-a-props-y-context","title":"Acceso a <code>props</code> y <code>context</code>","text":"<p>La funci\u00f3n <code>setup</code> recibe dos argumentos:</p> <ol> <li><code>props</code>: Las propiedades del componente (reactivas)</li> <li><code>context</code>: Contiene attrs, slots y emit</li> </ol> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ greeting }}, {{ user.name }}!&lt;/h1&gt;\n    &lt;slot&gt;&lt;/slot&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref, toRefs } from 'vue'\n\nexport default {\n  props: {\n    user: {\n      type: Object,\n      required: true\n    }\n  },\n\n  setup(props, context) {\n    // Usar toRefs para mantener la reactividad al desestructurar props\n    const { user } = toRefs(props)\n\n    // Acceder a slots\n    const slots = context.slots\n\n    // Acceder a atributos no declarados\n    const attrs = context.attrs\n\n    // M\u00e9todo para emitir eventos\n    const emit = context.emit\n\n    const greeting = ref('Hola')\n\n    // Expuesto al template\n    return {\n      greeting,\n      user\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/setup/#script-setup-sintaxis-mas-concisa","title":"<code>&lt;script setup&gt;</code> - Sintaxis m\u00e1s concisa","text":"<p>Vue 3.2+ introduce la sintaxis <code>&lt;script setup&gt;</code>, que es az\u00facar sint\u00e1ctico para usar la Composition API de manera m\u00e1s concisa:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ title }}&lt;/h1&gt;\n    &lt;p&gt;Contador: {{ count }}&lt;/p&gt;\n    &lt;button @click=\"increment\"&gt;Incrementar&lt;/button&gt;\n    &lt;p&gt;Doble: {{ doubleCount }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed, onMounted } from 'vue'\n\n// Estado reactivo\nconst count = ref(0)\nconst title = ref('Mi Componente con &lt;script setup&gt;')\n\n// Propiedad computada\nconst doubleCount = computed(() =&gt; count.value * 2)\n\n\n// M\u00e9todo\nfunction increment() {\n  count.value++\n}\n\n// Hook del ciclo de vida\nonMounted(() =&gt; {\n  console.log('Componente montado')\n})\n\n// Todo lo declarado en el \u00e1mbito superior est\u00e1 disponible en la plantilla\n// No es necesario usar return\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/setup/#definicion-de-props-y-emits","title":"Definici\u00f3n de props y emits","text":"<p>Con <code>&lt;script setup&gt;</code>, usa <code>defineProps</code> y <code>defineEmits</code>:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ title }}&lt;/h1&gt;\n    &lt;p&gt;{{ message }}&lt;/p&gt;\n    &lt;button @click=\"notify\"&gt;Notificar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\n// Definir props\nconst props = defineProps({\n  title: {\n    type: String,\n    default: 'T\u00edtulo predeterminado'\n  },\n  message: {\n    type: String,\n    required: true\n  }\n})\n\n// Definir eventos que el componente puede emitir\nconst emit = defineEmits(['notify', 'update'])\n\n\nfunction notify() {\n  // Emitir evento con datos\n  emit('notify', { message: '\u00a1Notificaci\u00f3n!' })\n\n  // Tambi\u00e9n puedes emitir sin datos\n  emit('update')\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/setup/#acceso-a-la-instancia-del-componente","title":"Acceso a la instancia del componente","text":"<p>En algunos casos raros, podr\u00edas necesitar acceder a la instancia del componente. Puedes hacerlo con <code>getCurrentInstance</code>:</p> <pre><code>&lt;script setup&gt;\nimport { getCurrentInstance, onMounted } from 'vue'\n\n// Obtener la instancia del componente actual\nconst instance = getCurrentInstance()\n\nonMounted(() =&gt; {\n  // Acceder al contexto\n  console.log(instance.proxy.$el) // Elemento ra\u00edz del componente\n  console.log(instance.ctx) // Contexto de renderizado\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"composicion/setup/#ejemplo-practico-formulario-de-tareas","title":"Ejemplo Pr\u00e1ctico: Formulario de Tareas","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"task-form\"&gt;\n    &lt;h2&gt;A\u00f1adir Nueva Tarea&lt;/h2&gt;\n    &lt;form @submit.prevent=\"addTask\"&gt;\n      &lt;div class=\"form-group\"&gt;\n        &lt;label for=\"task-title\"&gt;T\u00edtulo:&lt;/label&gt;\n        &lt;input \n          id=\"task-title\" \n          v-model=\"newTask.title\" \n          required\n          placeholder=\"T\u00edtulo de la tarea\"\n        &gt;\n      &lt;/div&gt;\n\n      &lt;div class=\"form-group\"&gt;\n        &lt;label for=\"task-description\"&gt;Descripci\u00f3n:&lt;/label&gt;\n        &lt;textarea \n          id=\"task-description\" \n          v-model=\"newTask.description\"\n          placeholder=\"Descripci\u00f3n detallada...\"\n        &gt;&lt;/textarea&gt;\n      &lt;/div&gt;\n\n      &lt;div class=\"form-group\"&gt;\n        &lt;label&gt;\n          &lt;input type=\"checkbox\" v-model=\"newTask.completed\"&gt;\n          Completada\n        &lt;/label&gt;\n      &lt;/div&gt;\n\n      &lt;div class=\"form-actions\"&gt;\n        &lt;button type=\"submit\" :disabled=\"isSubmitting\"&gt;\n          {{ isSubmitting ? 'Guardando...' : 'Guardar Tarea' }}\n        &lt;/button&gt;\n        &lt;button type=\"button\" @click=\"resetForm\" class=\"secondary\"&gt;\n          Limpiar\n        &lt;/button&gt;\n      &lt;/div&gt;\n    &lt;/form&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, reactive, computed } from 'vue'\n\n// Estado del formulario\nconst newTask = reactive({\n  title: '',\n  description: '',\n  completed: false,\n  priority: 'medium'\n})\n\n// Estado de env\u00edo\nconst isSubmitting = ref(false)\n\n\n// Propiedad computada para validaci\u00f3n\nconst isFormValid = computed(() =&gt; {\n  return newTask.title.trim().length &gt; 0\n})\n\n// M\u00e9todo para limpiar el formulario\nfunction resetForm() {\n  newTask.title = ''\n  newTask.description = ''\n  newTask.completed = false\n  newTask.priority = 'medium'\n}\n\n// M\u00e9todo para enviar el formulario\nfunction addTask() {\n  if (!isFormValid.value) return\n\n  isSubmitting.value = true\n\n  // Simular una llamada a una API\n  setTimeout(() =&gt; {\n    // Emitir evento con la nueva tarea\n    emit('task-added', { ...newTask, id: Date.now() })\n\n    // Resetear el formulario\n    resetForm()\n    isSubmitting.value = false\n\n    // Mostrar notificaci\u00f3n\n    alert('\u00a1Tarea agregada correctamente!')\n  }, 1000)\n}\n\n// Definir eventos que emite el componente\nconst emit = defineEmits(['task-added'])\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.task-form {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  background-color: #f9f9f9;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\nh2 {\n  color: #2c3e50;\n  margin-top: 0;\n  padding-bottom: 10px;\n  border-bottom: 2px solid #eee;\n}\n\n.form-group {\n  margin-bottom: 15px;\n}\n\nlabel {\n  display: block;\n  margin-bottom: 5px;\n  font-weight: bold;\n  color: #2c3e50;\n}\n\ninput[type=\"text\"],\ninput[type=\"email\"],\ntextarea {\n  width: 100%;\n  padding: 8px 12px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 16px;\n  box-sizing: border-box;\n}\n\ntextarea {\n  min-height: 100px;\n  resize: vertical;\n}\n\n.form-actions {\n  display: flex;\n  gap: 10px;\n  margin-top: 20px;\n}\n\nbutton {\n  padding: 10px 20px;\n  border: none;\n  border-radius: 4px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\nbutton[type=\"submit\"] {\n  background-color: #42b983;\n  color: white;\n}\n\nbutton[type=\"submit\"]:hover {\n  background-color: #3aa876;\n}\n\nbutton[type=\"submit\"]:disabled {\n  background-color: #a0a0a0;\n  cursor: not-allowed;\n}\n\nbutton.secondary {\n  background-color: #f0f0f0;\n  color: #333;\n}\n\nbutton.secondary:hover {\n  background-color: #e0e0e0;\n}\n\n/* Estilos para la prioridad */\n.priority-selector {\n  display: flex;\n  gap: 10px;\n  margin: 10px 0;\n}\n\n.priority-option {\n  flex: 1;\n  text-align: center;\n  padding: 8px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.priority-option:hover {\n  background-color: #f5f5f5;\n}\n\n.priority-option input[type=\"radio\"] {\n  display: none;\n}\n\n.priority-option input[type=\"radio\"]:checked + span {\n  font-weight: bold;\n  color: #42b983;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"composicion/setup/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<p>Ahora que has aprendido sobre la funci\u00f3n <code>setup()</code> y la sintaxis <code>&lt;script setup&gt;</code>, est\u00e1s listo para profundizar en los detalles de la reactividad en Vue 3 con <code>ref</code> y <code>reactive</code>.</p> <p>\ud83d\udc49 Siguiente: Ref y Reactive</p>"},{"location":"conceptos-basicos/introduccion/","title":"1.1 Introducci\u00f3n a Vue.js","text":""},{"location":"conceptos-basicos/introduccion/#que-es-vuejs","title":"\u00bfQu\u00e9 es Vue.js?","text":"<p>Vue (pronunciado /vju\u02d0/, como view) es un framework progresivo para construir interfaces de usuario. A diferencia de otros frameworks monol\u00edticos, Vue est\u00e1 dise\u00f1ado desde cero para ser adoptable de forma incremental.</p>"},{"location":"conceptos-basicos/introduccion/#caracteristicas-principales","title":"Caracter\u00edsticas principales","text":"<ul> <li>Reactivo: Actualiza autom\u00e1ticamente la vista cuando cambian los datos</li> <li>Componentes: Permite crear elementos HTML personalizados y reutilizables</li> <li>F\u00e1cil de aprender: Sintaxis sencilla basada en HTML y JavaScript</li> <li>Flexible: Se puede integrar progresivamente en proyectos existentes</li> </ul>"},{"location":"conceptos-basicos/introduccion/#ejemplo-basico","title":"Ejemplo b\u00e1sico","text":""},{"location":"conceptos-basicos/introduccion/#opcion-1-como-archivo-html-estandar","title":"Opci\u00f3n 1: Como archivo HTML est\u00e1ndar","text":"<pre><code>&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n  &lt;title&gt;Mi Primera App Vue&lt;/title&gt;\n  &lt;!-- Importar Vue 3 desde CDN --&gt;\n  &lt;script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n  &lt;div id=\"app\"&gt;\n    &lt;h1&gt;{{ mensaje }}&lt;/h1&gt;\n    &lt;button @click=\"cambiarMensaje\"&gt;Cambiar mensaje&lt;/button&gt;\n  &lt;/div&gt;\n\n  &lt;script&gt;\n  const { createApp, ref } = Vue\n\n  createApp({\n    setup() {\n      const mensaje = ref('\u00a1Hola Vue 3!')\n\n      function cambiarMensaje() {\n        mensaje.value = '\u00a1Mensaje cambiado!'\n      }\n\n      return {\n        mensaje,\n        cambiarMensaje\n      }\n    }\n  }).mount('#app')\n  &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"conceptos-basicos/introduccion/#opcion-2-como-componente-de-un-solo-archivo-sfc-de-vue","title":"Opci\u00f3n 2: Como Componente de un Solo Archivo (SFC) de Vue","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ mensaje }}&lt;/h1&gt;\n    &lt;button @click=\"cambiarMensaje\"&gt;Cambiar mensaje&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref } from 'vue'\n\nexport default {\n  setup() {\n    const mensaje = ref('\u00a1Hola Vue 3!')\n\n    function cambiarMensaje() {\n      mensaje.value = '\u00a1Mensaje cambiado!'\n    }\n\n    return {\n      mensaje,\n      cambiarMensaje\n    }\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n/* Estilos espec\u00edficos del componente */\nbutton {\n  background-color: #42b983;\n  color: white;\n  border: none;\n  padding: 8px 16px;\n  border-radius: 4px;\n  cursor: pointer;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"conceptos-basicos/introduccion/#como-probar-cada-opcion","title":"C\u00f3mo probar cada opci\u00f3n:","text":""},{"location":"conceptos-basicos/introduccion/#para-la-opcion-1-html-estandar","title":"Para la Opci\u00f3n 1 (HTML est\u00e1ndar):","text":"<ol> <li>Copia todo el c\u00f3digo de la Opci\u00f3n 1</li> <li>Gu\u00e1rdalo como <code>index.html</code></li> <li>\u00c1brelo directamente en tu navegador</li> </ol>"},{"location":"conceptos-basicos/introduccion/#para-la-opcion-2-sfc","title":"Para la Opci\u00f3n 2 (SFC):","text":"<ol> <li> <p>En Vue Playground:</p> <ul> <li>Ve a Vue Playground</li> <li>Reemplaza el contenido de <code>App.vue</code> con el c\u00f3digo de la Opci\u00f3n 2</li> </ul> </li> <li> <p>En StackBlitz:</p> <ul> <li>Crea un nuevo proyecto Vue en StackBlitz</li> <li>Reemplaza el contenido de <code>App.vue</code> con el c\u00f3digo de la Opci\u00f3n 2</li> </ul> </li> <li> <p>En un proyecto local:</p> <ul> <li>Crea un archivo <code>MiComponente.vue</code> con el c\u00f3digo de la Opci\u00f3n 2</li> <li>Aseg\u00farate de tener configurado Vue CLI o Vite con soporte para archivos <code>.vue</code></li> </ul> </li> </ol>"},{"location":"conceptos-basicos/introduccion/#ejercicio-practico-tu-primera-aplicacion-vue","title":"Ejercicio pr\u00e1ctico: Tu primera aplicaci\u00f3n Vue","text":"<p>En este ejercicio, crear\u00e1s tu primera aplicaci\u00f3n Vue desde cero. Sigue estos pasos detallados:</p>"},{"location":"conceptos-basicos/introduccion/#objetivos","title":"Objetivos","text":"<ul> <li>Crear un archivo HTML b\u00e1sico con Vue 3</li> <li>Entender la estructura b\u00e1sica de una aplicaci\u00f3n Vue</li> <li>Experimentar con la reactividad de Vue</li> </ul>"},{"location":"conceptos-basicos/introduccion/#pasos-a-seguir","title":"Pasos a seguir","text":"<ol> <li> <p>Prepara tu entorno de trabajo</p> <ul> <li>Abre tu editor de c\u00f3digo favorito (VS Code, Sublime Text, etc.)</li> <li>Crea una nueva carpeta para este proyecto</li> </ul> </li> <li> <p>Crea un nuevo archivo</p> <ul> <li>Crea un archivo llamado <code>hola-vue.html</code></li> <li>Copia y pega el siguiente c\u00f3digo:</li> </ul> </li> </ol> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mi Primera App Vue&lt;/title&gt;\n    &lt;style&gt;\n        body {\n            font-family: Arial, sans-serif;\n            max-width: 800px;\n            margin: 0 auto;\n            padding: 20px;\n            line-height: 1.6;\n        }\n        #app {\n            text-align: center;\n            margin-top: 50px;\n        }\n        button {\n            background-color: #42b983;\n            color: white;\n            border: none;\n            padding: 10px 20px;\n            margin: 10px;\n            border-radius: 4px;\n            cursor: pointer;\n            font-size: 16px;\n        }\n        button:hover {\n            background-color: #3aa876;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;!-- Contenedor principal de la aplicaci\u00f3n --&gt;\n    &lt;div id=\"app\"&gt;\n        &lt;h1&gt;{{ mensaje }}&lt;/h1&gt;\n        &lt;button @click=\"cambiarMensaje\"&gt;\n            {{ textoBoton }}\n        &lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Incluye Vue 3 desde CDN --&gt;\n    &lt;script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"&gt;&lt;/script&gt;\n\n    &lt;script&gt;\n    // C\u00f3digo JavaScript de la aplicaci\u00f3n\n    const { createApp, ref } = Vue;\n\n    // Crea la aplicaci\u00f3n Vue\n    const app = createApp({\n        // setup() es donde definimos la l\u00f3gica del componente\n        setup() {\n            // Variables reactivas\n            const mensaje = ref('\u00a1Hola Vue 3!');\n            const textoBoton = ref('Haz clic para cambiar el mensaje');\n\n            // Funci\u00f3n que se ejecuta al hacer clic en el bot\u00f3n\n            function cambiarMensaje() {\n                mensaje.value = '\u00a1Has cambiado el mensaje con \u00e9xito!';\n                textoBoton.value = '\u00a1Mensaje cambiado!';\n            }\n\n            // Exponemos las variables y funciones al template\n            return {\n                mensaje,\n                textoBoton,\n                cambiarMensaje\n            };\n        }\n    });\n\n    // Monta la aplicaci\u00f3n en el elemento con id=\"app\"\n    app.mount('#app');\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre> <ol> <li> <p>Guarda y abre el archivo</p> <ul> <li>Guarda el archivo con el nombre <code>hola-vue.html</code></li> <li>Abre el archivo en tu navegador web (puedes hacer doble clic en \u00e9l)</li> </ul> </li> </ol>"},{"location":"conceptos-basicos/introduccion/#que-deberias-ver","title":"\u00bfQu\u00e9 deber\u00edas ver?","text":"<ul> <li>Un t\u00edtulo que dice \"\u00a1Hola Vue 3!\"</li> <li>Un bot\u00f3n verde que dice \"Haz clic para cambiar el mensaje\"</li> <li>Al hacer clic en el bot\u00f3n, el texto del t\u00edtulo y el bot\u00f3n cambiar\u00e1n</li> </ul>"},{"location":"conceptos-basicos/introduccion/#experimenta-y-aprende","title":"Experimenta y aprende","text":"<p>Una vez que hayas visto la aplicaci\u00f3n en acci\u00f3n, intenta hacer los siguientes cambios:</p> <ol> <li> <p>Modifica el mensaje inicial:</p> <ul> <li>Cambia el texto de <code>'\u00a1Hola Vue 3!'</code> por otro mensaje</li> <li>Recarga la p\u00e1gina para ver los cambios</li> </ul> </li> <li> <p>Personaliza el bot\u00f3n:</p> <ul> <li>Cambia el color de fondo del bot\u00f3n modificando el valor de <code>background-color</code> en el CSS</li> <li>Ajusta el tama\u00f1o del texto o el padding</li> </ul> </li> <li> <p>A\u00f1ade un contador:</p> <ul> <li>Agrega una variable <code>contador</code> usando <code>const contador = ref(0)</code></li> <li>Crea un bot\u00f3n que incremente el contador cada vez que se haga clic</li> <li>Muestra el valor del contador en la p\u00e1gina usando <code>{{ contador }}</code></li> </ul> </li> <li> <p>A\u00f1ade un campo de entrada:</p> <ul> <li>Agrega un <code>&lt;input v-model=\"nombre\"&gt;</code> al HTML</li> <li>Crea una variable <code>nombre</code> en el <code>setup()</code></li> <li>Muestra un mensaje personalizado que incluya el nombre ingresado</li> </ul> </li> </ol>"},{"location":"conceptos-basicos/introduccion/#preguntas-de-repaso","title":"Preguntas de repaso","text":"<ol> <li>\u00bfQu\u00e9 significa que Vue sea un framework \"progresivo\"?</li> <li>\u00bfQu\u00e9 ventaja tiene que Vue use una sintaxis basada en HTML?</li> <li>En el ejemplo mostrado, \u00bfqu\u00e9 ocurre cuando haces clic en el bot\u00f3n \"Cambiar mensaje\"?</li> <li>\u00bfQu\u00e9 funci\u00f3n cumple el m\u00e9todo <code>mount('#app')</code> en el c\u00f3digo de ejemplo?</li> </ol>"},{"location":"conceptos-basicos/introduccion/#recursos-adicionales","title":"Recursos adicionales","text":"<ul> <li>Documentaci\u00f3n oficial de Vue 3</li> <li>Vue Mastery - Curso gratuito</li> </ul> <p>Siguiente: Tu primera aplicaci\u00f3n \u2192</p>"},{"location":"conceptos-basicos/primer-ejemplo/","title":"1.2 Tu primera aplicaci\u00f3n Vue","text":"<p>En este ejemplo pr\u00e1ctico, crearemos una aplicaci\u00f3n de lista de tareas simple para entender los conceptos b\u00e1sicos de Vue.</p>"},{"location":"conceptos-basicos/primer-ejemplo/#estructura-del-proyecto","title":"Estructura del proyecto","text":"<pre><code>mi-primera-app/\n\u251c\u2500\u2500 index.html\n\u2514\u2500\u2500 app.js\n</code></pre>"},{"location":"conceptos-basicos/primer-ejemplo/#paso-1-configuracion-inicial","title":"Paso 1: Configuraci\u00f3n inicial","text":"<p>Crea un archivo <code>index.html</code> con el siguiente contenido:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Mi Primera App Vue&lt;/title&gt;\n    &lt;script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        .completada {\n            text-decoration: line-through;\n            color: #888;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"app\"&gt;\n        &lt;h1&gt;Lista de Tareas&lt;/h1&gt;\n\n        &lt;!-- Formulario para agregar tareas --&gt;\n        &lt;div class=\"formulario\"&gt;\n            &lt;input \n                v-model=\"nuevaTarea\" \n                @keyup.enter=\"agregarTarea\"\n                placeholder=\"Escribe una tarea y presiona Enter\"\n            &gt;\n            &lt;button @click=\"agregarTarea\"&gt;Agregar&lt;/button&gt;\n        &lt;/div&gt;\n\n        &lt;!-- Lista de tareas --&gt;\n        &lt;ul&gt;\n            &lt;li v-for=\"(tarea, index) in tareas\" :key=\"index\" \n                :class=\"{'completada': tarea.completada}\"\n                @click=\"tarea.completada = !tarea.completada\"&gt;\n                {{ tarea.texto }}\n                &lt;button @click.stop=\"eliminarTarea(index)\"&gt;Eliminar&lt;/button&gt;\n            &lt;/li&gt;\n        &lt;/ul&gt;\n\n        &lt;!-- Contador de tareas --&gt;\n        &lt;p v-if=\"tareas.length &gt; 0\"&gt;\n            Tareas completadas: {{ tareasCompletadas.length }} de {{ tareas.length }}\n        &lt;/p&gt;\n        &lt;p v-else&gt;\n            No hay tareas. \u00a1Agrega una para comenzar!\n        &lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"conceptos-basicos/primer-ejemplo/#paso-2-logica-de-la-aplicacion","title":"Paso 2: L\u00f3gica de la aplicaci\u00f3n","text":"<p>Crea un archivo <code>app.js</code> con el siguiente c\u00f3digo:</p> <pre><code>const { createApp, ref, computed } = Vue;\n\ncreateApp({\n  setup() {\n    const nuevaTarea = ref('');\n    const tareas = ref([\n      { texto: 'Aprender Vue.js', completada: false },\n      { texto: 'Hacer la compra', completada: true },\n      { texto: 'Llamar al m\u00e9dico', completada: false }\n    ]);\n\n    const tareasCompletadas = computed(() =&gt; {\n      return tareas.value.filter(t =&gt; t.completada);\n    });\n\n    function agregarTarea() {\n      if (nuevaTarea.value.trim() === '') return;\n\n      tareas.value.push({\n        texto: nuevaTarea.value,\n        completada: false\n      });\n\n      nuevaTarea.value = ''; // Limpiar el input\n    }\n\n    function eliminarTarea(index) {\n      tareas.value.splice(index, 1);\n    }\n\n    return {\n      nuevaTarea,\n      tareas,\n      tareasCompletadas,\n      agregarTarea,\n      eliminarTarea\n    };\n  }\n}).mount('#app');\n</code></pre>"},{"location":"conceptos-basicos/primer-ejemplo/#conceptos-aprendidos-en-este-ejemplo","title":"Conceptos aprendidos en este ejemplo","text":"<ol> <li> <p>Directivas de Vue:</p> <ul> <li><code>v-model</code>: Para enlazar datos bidireccionalmente</li> <li><code>v-for</code>: Para iterar sobre arrays</li> <li><code>v-if</code>/<code>v-else</code>: Para renderizado condicional</li> <li><code>@click</code>: Para manejar eventos de clic</li> </ul> </li> <li> <p>Reactividad:</p> <ul> <li>Uso de <code>ref</code> para crear variables reactivas</li> <li>Uso de <code>computed</code> para propiedades calculadas</li> </ul> </li> <li> <p>M\u00e9todos:</p> <ul> <li>Funciones para manipular el estado de la aplicaci\u00f3n</li> </ul> </li> </ol>"},{"location":"conceptos-basicos/primer-ejemplo/#ejercicios-para-practicar","title":"Ejercicios para practicar","text":"<ol> <li> <p>A\u00f1ade un bot\u00f3n para marcar todas las tareas como completadas</p> </li> <li> <p>Implementa la funcionalidad para editar una tarea existente</p> </li> <li> <p>A\u00f1ade la opci\u00f3n de filtrar tareas (todas, completadas, pendientes)</p> </li> <li> <p>Guarda las tareas en el <code>localStorage</code> para que persistan al recargar la p\u00e1gina</p> </li> </ol>"},{"location":"conceptos-basicos/primer-ejemplo/#solucion-de-problemas","title":"Soluci\u00f3n de problemas","text":"<p>Si algo no funciona: 1. Aseg\u00farate de que Vue 3 est\u00e9 cargado correctamente</p> <ol> <li> <p>Revisa la consola del navegador (F12) en busca de errores</p> </li> <li> <p>Verifica que los nombres de las variables coincidan exactamente</p> </li> </ol> <p>En la siguiente secci\u00f3n profundizaremos en las directivas de Vue y c\u00f3mo usarlas efectivamente.</p> <p>Siguiente: Interpolaci\u00f3n y Directivas \u2192</p>"},{"location":"fundamentos/cheat-sheet/","title":"Vue 3 Cheat Sheet - Referencia R\u00e1pida","text":""},{"location":"fundamentos/cheat-sheet/#directivas-basicas","title":"Directivas B\u00e1sicas","text":""},{"location":"fundamentos/cheat-sheet/#interpolacion","title":"Interpolaci\u00f3n","text":"<pre><code>&lt;template&gt;\n  &lt;p&gt;{{ mensaje }}&lt;/p&gt;\n  &lt;p v-text=\"'Hola ' + nombre\"&gt;&lt;/p&gt;\n  &lt;p v-html=\"htmlContent\"&gt;&lt;/p&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#condicionales","title":"Condicionales","text":"<pre><code>&lt;template&gt;\n  &lt;div v-if=\"esVisible\"&gt;Visible&lt;/div&gt;\n  &lt;div v-else-if=\"otraCondicion\"&gt;Otra condici\u00f3n&lt;/div&gt;\n  &lt;div v-else&gt;Por defecto&lt;/div&gt;\n\n  &lt;div v-show=\"esVisible\"&gt;Alternativa a v-if&lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#bucles","title":"Bucles","text":"<pre><code>&lt;template&gt;\n  &lt;!-- Iterar array --&gt;\n  &lt;ul&gt;\n    &lt;li v-for=\"(item, index) in items\" :key=\"item.id\"&gt;\n      {{ index }} - {{ item.nombre }}\n    &lt;/li&gt;\n  &lt;/ul&gt;\n\n  &lt;!-- Iterar objeto --&gt;\n  &lt;div v-for=\"(valor, clave) in objeto\" :key=\"clave\"&gt;\n    {{ clave }}: {{ valor }}\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#enlaces-de-datos","title":"Enlaces de datos","text":"<pre><code>&lt;template&gt;\n  &lt;!-- v-bind o : --&gt;\n  &lt;a :href=\"url\"&gt;Enlace&lt;/a&gt;\n  &lt;img :src=\"imagenUrl\" :alt=\"textoAlternativo\"&gt;\n\n  &lt;!-- v-model --&gt;\n  &lt;input v-model=\"texto\" placeholder=\"Escribe algo\"&gt;\n  &lt;input type=\"checkbox\" v-model=\"estaSeleccionado\"&gt;\n  &lt;select v-model=\"seleccionado\"&gt;\n    &lt;option v-for=\"opcion in opciones\" :key=\"opcion\"&gt;\n      {{ opcion }}\n    &lt;/option&gt;\n  &lt;/select&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#composition-api","title":"Composition API","text":""},{"location":"fundamentos/cheat-sheet/#reactividad-basica","title":"Reactividad B\u00e1sica","text":"<pre><code>&lt;script setup&gt;\nimport { ref, reactive, computed, watch, watchEffect } from 'vue'\n\n// Variables reactivas\nconst contador = ref(0)\nconst estado = reactive({\n  nombre: 'Juan',\n  edad: 30\n})\n\n// Propiedades computadas\nconst nombreCompleto = computed(() =&gt; {\n  return `${estado.nombre} P\u00e9rez`\n})\n\n// Watchers\nwatch(contador, (nuevoValor, viejoValor) =&gt; {\n  console.log(`El contador cambi\u00f3 de ${viejoValor} a ${nuevoValor}`)\n})\n\n// WatchEffect\ndisparar cuando cualquier dependencia reactiva cambia\nwatchEffect(() =&gt; {\n  console.log(`El contador es: ${contador.value}`)\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#ciclo-de-vida","title":"Ciclo de Vida","text":"<pre><code>&lt;script setup&gt;\nimport { onMounted, onUpdated, onUnmounted } from 'vue'\n\nonMounted(() =&gt; {\n  console.log('Componente montado')\n  // Inicializar librer\u00edas, hacer peticiones, etc.\n})\n\nonUpdated(() =&gt; {\n  console.log('Componente actualizado')\n})\n\nonUnmounted(() =&gt; {\n  console.log('Componente desmontado')\n  // Limpiar listeners, intervalos, etc.\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#manejo-de-eventos","title":"Manejo de Eventos","text":"<pre><code>&lt;template&gt;\n  &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n  &lt;input @keyup.enter=\"enviarFormulario\"&gt;\n  &lt;form @submit.prevent=\"enviarFormulario\"&gt;\n    &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n  &lt;/form&gt;\n\n  &lt;!-- Manejadores de eventos con argumentos --&gt;\n  &lt;button @click=\"(event) =&gt; saludar('Hola', $event)\"&gt;Saludar&lt;/button&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nfunction incrementar() {\n  contador.value++\n}\n\nfunction enviarFormulario() {\n  // L\u00f3gica del formulario\n}\n\nfunction saludar(mensaje, event) {\n  console.log(mensaje, event.target)\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#referencias-de-plantilla-refs","title":"Referencias de Plantilla (refs)","text":"<pre><code>&lt;template&gt;\n  &lt;input ref=\"inputRef\" type=\"text\"&gt;\n  &lt;button @click=\"enfocarInput\"&gt;Enfocar input&lt;/button&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, onMounted } from 'vue'\n\nconst inputRef = ref(null)\n\nonMounted(() =&gt; {\n  // inputRef.value contiene la referencia al elemento del DOM\n  console.log(inputRef.value) // &lt;input type=\"text\"&gt;\n})\n\nfunction enfocarInput() {\n  inputRef.value.focus()\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#directivas-personalizadas","title":"Directivas Personalizadas","text":"<pre><code>&lt;template&gt;\n  &lt;p v-resaltar=\"'amarillo'\"&gt;Texto resaltado&lt;/p&gt;\n  &lt;button v-pin=\"200\"&gt;Bot\u00f3n fijo&lt;/button&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\n// Directiva global (main.js o similar)\nconst app = createApp(App)\n\n// Directiva de resaltado\napp.directive('resaltar', {\n  mounted(el, binding) {\n    el.style.backgroundColor = binding.value || 'yellow'\n    el.style.padding = '5px'\n  },\n  updated(el, binding) {\n    el.style.backgroundColor = binding.value\n  }\n})\n\n// Directiva de fijado\napp.directive('pin', {\n  mounted(el, binding) {\n    el.style.position = 'fixed'\n    el.style.top = binding.value + 'px'\n  }\n})\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#props-y-emits","title":"Props y Emits","text":"<pre><code>&lt;!-- Componente Hijo --&gt;\n&lt;template&gt;\n  &lt;div&gt;\n    &lt;h2&gt;{{ titulo }}&lt;/h2&gt;\n    &lt;button @click=\"notificar\"&gt;Notificar al padre&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nconst props = defineProps({\n  titulo: {\n    type: String,\n    required: true,\n    default: 'T\u00edtulo por defecto'\n  },\n  valorInicial: {\n    type: Number,\n    default: 0\n  }\n})\n\nconst emit = defineEmits(['actualizado'])\n\nfunction notificar() {\n  emit('actualizado', 'Datos del hijo')\n}\n&lt;/script&gt;\n\n&lt;!-- Componente Padre --&gt;\n&lt;template&gt;\n  &lt;Hijo \n    titulo=\"Mi Componente\" \n    :valor-inicial=\"contador\"\n    @actualizado=\"manejarActualizacion\"\n  /&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#proporcionarinyectar","title":"Proporcionar/Inyectar","text":"<pre><code>&lt;!-- Componente Padre --&gt;\n&lt;script setup&gt;\nimport { provide, ref } from 'vue'\n\nconst tema = ref('claro')\n\nprovide('tema', tema)\n&lt;/script&gt;\n\n&lt;!-- Componente Hijo --&gt;\n&lt;template&gt;\n  &lt;div :class=\"tema\"&gt;\n    &lt;!-- Contenido --&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { inject } from 'vue'\n\nconst tema = inject('tema', 'claro')\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#slots","title":"Slots","text":"<pre><code>&lt;!-- Componente BaseLayout --&gt;\n&lt;template&gt;\n  &lt;div class=\"container\"&gt;\n    &lt;header&gt;\n      &lt;slot name=\"header\"&gt;&lt;/slot&gt;\n    &lt;/header&gt;\n    &lt;main&gt;\n      &lt;slot&gt;&lt;/slot&gt;\n    &lt;/main&gt;\n    &lt;footer&gt;\n      &lt;slot name=\"footer\"&gt;&lt;/slot&gt;\n    &lt;/footer&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;!-- Uso --&gt;\n&lt;BaseLayout&gt;\n  &lt;template #header&gt;\n    &lt;h1&gt;T\u00edtulo de la p\u00e1gina&lt;/h1&gt;\n  &lt;/template&gt;\n\n  &lt;p&gt;Contenido principal&lt;/p&gt;\n\n  &lt;template #footer&gt;\n    &lt;p&gt;Pie de p\u00e1gina&lt;/p&gt;\n  &lt;/template&gt;\n&lt;/BaseLayout&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#transiciones","title":"Transiciones","text":"<pre><code>&lt;template&gt;\n  &lt;button @click=\"mostrar = !mostrar\"&gt;Alternar&lt;/button&gt;\n\n  &lt;transition name=\"fade\"&gt;\n    &lt;p v-if=\"mostrar\"&gt;Texto que aparece/desaparece&lt;/p&gt;\n  &lt;/transition&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n.fade-enter-active, .fade-leave-active {\n  transition: opacity 0.5s;\n}\n.fade-enter-from, .fade-leave-to {\n  opacity: 0;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#directivas-de-renderizado-condicional-avanzadas","title":"Directivas de Renderizado Condicional Avanzadas","text":""},{"location":"fundamentos/cheat-sheet/#v-once","title":"v-once","text":"<p>Renderiza el elemento una sola vez, ignorando actualizaciones posteriores: <pre><code>&lt;template&gt;\n  &lt;div v-once&gt;Este valor nunca cambiar\u00e1: {{ contador }}&lt;/div&gt;\n  &lt;div&gt;Este valor s\u00ed cambiar\u00e1: {{ contador }}&lt;/div&gt;\n&lt;/template&gt;\n</code></pre></p>"},{"location":"fundamentos/cheat-sheet/#v-memo","title":"v-memo","text":"<p>Almacena en cach\u00e9 el sub\u00e1rbol del template. \u00datil para optimizar el rendimiento: <pre><code>&lt;template&gt;\n  &lt;div v-memo=\"[dependencia1, dependencia2]\"&gt;\n    &lt;!-- Este contenido solo se volver\u00e1 a renderizar si dependencia1 o dependencia2 cambian --&gt;\n    {{ datosGrandes }}\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre></p>"},{"location":"fundamentos/cheat-sheet/#v-cloak","title":"v-cloak","text":"<p>\u00datil para evitar parpadeo del contenido no compilado: <pre><code>&lt;template&gt;\n  &lt;div v-cloak&gt;\n    {{ mensaje }}\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n[v-cloak] {\n  display: none;\n}\n&lt;/style&gt;\n</code></pre></p>"},{"location":"fundamentos/cheat-sheet/#composicion-de-componentes","title":"Composici\u00f3n de Componentes","text":""},{"location":"fundamentos/cheat-sheet/#componente-de-ejemplo-con-composition-api","title":"Componente de Ejemplo con Composition API","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h2&gt;{{ titulo }}&lt;/h2&gt;\n    &lt;p&gt;Contador: {{ contador }}&lt;/p&gt;\n    &lt;button @click=\"incrementar\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"decrementar\"&gt;Decrementar&lt;/button&gt;\n    &lt;p&gt;Doble: {{ dobleContador }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed, onMounted } from 'vue'\n\n// Props\nconst props = defineProps({\n  titulo: {\n    type: String,\n    default: 'Contador'\n  },\n  valorInicial: {\n    type: Number,\n    default: 0\n  }\n})\n\n// Estado reactivo\nconst contador = ref(props.valorInicial)\n\n\n// Propiedad computada\nconst dobleContador = computed(() =&gt; contador.value * 2)\n\n\n// M\u00e9todos\nfunction incrementar() {\n  contador.value++\n  emit('incremento', contador.value)\n}\n\nfunction decrementar() {\n  contador.value--\n  emit('decremento', contador.value)\n}\n\n// Hooks de ciclo de vida\nonMounted(() =&gt; {\n  console.log('Componente montado')\n})\n\n// Emits\nconst emit = defineEmits(['incremento', 'decremento'])\n&lt;/script&gt;\n\n&lt;style scoped&gt;\nbutton {\n  margin: 0 5px;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"fundamentos/cheat-sheet/#buenas-practicas","title":"Buenas Pr\u00e1cticas","text":"<ol> <li> <p>Nombrado de componentes: Usa nombres multi-palabra para evitar conflictos con elementos HTML.    <pre><code>// Mal\nexport default {\n  name: 'Button',\n  // ...\n}\n\n// Bien\nexport default {\n  name: 'BaseButton',\n  // ...\n}\n</code></pre></p> </li> <li> <p>Props detalladas: Especifica props con validaci\u00f3n cuando sea posible.    <pre><code>props: {\n  status: {\n    type: String,\n    required: true,\n    validator: (value) =&gt; {\n      return ['success', 'warning', 'danger'].includes(value)\n    }\n  }\n}\n</code></pre></p> </li> <li> <p>Claves en v-for: Siempre usa <code>:key</code> con <code>v-for</code>.    <pre><code>&lt;!-- Mal --&gt;\n&lt;li v-for=\"item in items\"&gt;{{ item.text }}&lt;/li&gt;\n\n&lt;!-- Bien --&gt;\n&lt;li v-for=\"item in items\" :key=\"item.id\"&gt;\n  {{ item.text }}\n&lt;/li&gt;\n</code></pre></p> </li> <li> <p>Estilos con scope: Usa <code>&lt;style scoped&gt;</code> para estilos espec\u00edficos del componente.</p> </li> <li> <p>Manejo de eventos: Usa kebab-case para nombres de eventos personalizados.    <pre><code>&lt;!-- Componente hijo --&gt;\n&lt;button @click=\"$emit('guardar-cambios')\"&gt;Guardar&lt;/button&gt;\n\n&lt;!-- Componente padre --&gt;\n&lt;mi-componente @guardar-cambios=\"guardarDatos\" /&gt;\n</code></pre></p> </li> <li> <p>Composici\u00f3n sobre herencia: Prefiere la composici\u00f3n con <code>setup()</code> o <code>&lt;script setup&gt;</code> sobre la herencia de componentes.</p> </li> <li> <p>Manejo de errores: Implementa manejo de errores en llamadas as\u00edncronas.    <pre><code>async function cargarDatos() {\n  try {\n    const respuesta = await fetch('https://api.ejemplo.com/datos')\n    if (!respuesta.ok) throw new Error('Error al cargar datos')\n    datos.value = await respuesta.json()\n  } catch (error) {\n    console.error('Error:', error)\n    estadoError.value = 'No se pudieron cargar los datos'\n  }\n}\n</code></pre></p> </li> <li> <p>Desacoplamiento: Mant\u00e9n los componentes peque\u00f1os y enfocados en una sola responsabilidad.</p> </li> <li> <p>Reutilizaci\u00f3n: Extrae l\u00f3gica repetitiva en composables.    <pre><code>// useContador.js\nimport { ref, computed } from 'vue'\n\nexport function useContador(valorInicial = 0) {\n  const contador = ref(valorInicial)\n\n  const incrementar = () =&gt; contador.value++\n  const decrementar = () =&gt; contador.value--\n  const resetear = () =&gt; contador.value = valorInicial\n\n  const esPar = computed(() =&gt; contador.value % 2 === 0)\n\n  return {\n    contador,\n    incrementar,\n    decrementar,\n    resetear,\n    esPar\n  }\n}\n</code></pre></p> </li> <li> <p>Documentaci\u00f3n: Documenta props, eventos y slots en los componentes.</p> </li> </ol>"},{"location":"fundamentos/cheat-sheet/#siguiente-paso","title":"Siguiente paso","text":"<p>\u00a1Felicidades! Has completado la secci\u00f3n de Fundamentos de Vue 3. Ahora est\u00e1s listo para avanzar a la siguiente secci\u00f3n, donde aprender\u00e1s sobre la creaci\u00f3n y uso de componentes en Vue 3.</p> <p>Siguiente: Creaci\u00f3n y Uso de Componentes \u2192</p>"},{"location":"fundamentos/ciclo-vida/","title":"Ciclo de Vida de una Instancia Vue","text":"<p>El ciclo de vida de una instancia Vue es un concepto fundamental que todo desarrollador debe comprender para crear aplicaciones robustas y eficientes. Este ciclo define una serie de etapas por las que pasa cada componente Vue, desde su creaci\u00f3n hasta su destrucci\u00f3n.</p>"},{"location":"fundamentos/ciclo-vida/#hooks-del-ciclo-de-vida","title":"Hooks del Ciclo de Vida","text":"<p>Vue proporciona una serie de \"hooks\" (ganchos) que nos permiten ejecutar c\u00f3digo en momentos espec\u00edficos del ciclo de vida del componente. Los hooks m\u00e1s importantes son:</p>"},{"location":"fundamentos/ciclo-vida/#1-creacion","title":"1. Creaci\u00f3n","text":"<ul> <li>beforeCreate: Se ejecuta justo despu\u00e9s de inicializar la instancia, antes de la inyecci\u00f3n de reactividad.</li> <li>created: Se llama despu\u00e9s de que la instancia ha sido creada. En este punto, las propiedades reactivas, computed properties, m\u00e9todos y watchers ya est\u00e1n configurados.</li> </ul>"},{"location":"fundamentos/ciclo-vida/#2-montaje-en-el-dom","title":"2. Montaje en el DOM","text":"<ul> <li>beforeMount: Se ejecuta justo antes de que el componente se monte en el DOM.</li> <li>mounted: Se llama despu\u00e9s de que el componente ha sido montado en el DOM. En este punto, puedes acceder al DOM a trav\u00e9s de <code>this.$el</code>.</li> </ul>"},{"location":"fundamentos/ciclo-vida/#3-actualizacion","title":"3. Actualizaci\u00f3n","text":"<ul> <li>beforeUpdate: Se ejecuta cuando los datos cambian, antes de que el DOM sea actualizado.</li> <li>updated: Se llama despu\u00e9s de que el DOM ha sido actualizado en respuesta a cambios en los datos.</li> </ul>"},{"location":"fundamentos/ciclo-vida/#4-desmontaje","title":"4. Desmontaje","text":"<ul> <li>beforeUnmount: Se ejecuta justo antes de que el componente sea desmontado.</li> <li>unmounted: Se llama despu\u00e9s de que el componente ha sido desmontado.</li> </ul>"},{"location":"fundamentos/ciclo-vida/#diagrama-del-ciclo-de-vida","title":"Diagrama del Ciclo de Vida","text":"<pre><code>Nuevo componente Vue\n      \u2502\n      \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 beforeCreate \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502\n       \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   created   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502\n       \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 beforeMount \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502\n       \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502   mounted   \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502\n       \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502 Datos actuales? \u2502\u2500\u2500\u2500S\u00ed\u2500\u2500\u25ba beforeUpdate \u2500\u25ba updated\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518   \u2502\n       No             \u2502\n       \u2502             \u25bc\n       \u2502       \u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n       \u2502       \u2502  updated    \u2502\n       \u2502       \u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502             \u2502\n       \u25bc             \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510     \u2502\n\u2502 beforeUnmount\u2502\u25c4\u2500\u2500\u2500\u2500\u2518\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u252c\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n       \u2502\n       \u25bc\n\u250c\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2510\n\u2502  unmounted  \u2502\n\u2514\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2518\n</code></pre>"},{"location":"fundamentos/ciclo-vida/#ejemplo-practico","title":"Ejemplo Pr\u00e1ctico","text":"<pre><code>export default {\n  data() {\n    return {\n      mensaje: 'Hola Vue!'\n    }\n  },\n  beforeCreate() {\n    console.log('Antes de crear la instancia');\n    // this.mensaje no est\u00e1 disponible a\u00fan\n  },\n  created() {\n    console.log('Instancia creada');\n    // this.mensaje est\u00e1 disponible\n  },\n  beforeMount() {\n    console.log('Antes de montar el componente');\n  },\n  mounted() {\n    console.log('Componente montado en el DOM');\n    // Acceso al DOM con this.$el\n  },\n  beforeUpdate() {\n    console.log('Antes de actualizar el DOM');\n  },\n  updated() {\n    console.log('DOM actualizado');\n  },\n  beforeUnmount() {\n    console.log('Antes de desmontar el componente');\n  },\n  unmounted() {\n    console.log('Componente desmontado');\n  }\n}\n</code></pre>"},{"location":"fundamentos/ciclo-vida/#cuando-usar-cada-hook","title":"Cu\u00e1ndo Usar Cada Hook","text":"<ul> <li>created: Ideal para realizar peticiones AJAX o configuraciones iniciales que no requieran acceso al DOM.</li> <li>mounted: Perfecto para operaciones que necesitan acceso al DOM o para inicializar bibliotecas de terceros.</li> <li>updated: \u00datil para operaciones que deben realizarse despu\u00e9s de que el DOM se ha actualizado en respuesta a cambios en los datos.</li> <li>beforeUnmount: Ideal para limpiar temporizadores, cancelar peticiones o limpiar suscripciones a eventos.</li> </ul>"},{"location":"fundamentos/ciclo-vida/#consejos-de-rendimiento","title":"Consejos de Rendimiento","text":"<ol> <li>Evita realizar operaciones s\u00edncronas pesadas en <code>created</code> o <code>mounted</code> que puedan bloquear el hilo principal.</li> <li>Usa <code>nextTick</code> si necesitas esperar a que Vue termine de actualizar el DOM despu\u00e9s de un cambio de datos.</li> <li>Siempre limpia los event listeners y timers en <code>beforeUnmount</code> para evitar fugas de memoria.</li> </ol>"},{"location":"fundamentos/ciclo-vida/#ejercicio-practico","title":"Ejercicio Pr\u00e1ctico","text":"<p>Crea un componente que: 1. Muestre un contador que se incrementa cada segundo 2. Registre en consola cada etapa del ciclo de vida 3. Permita pausar/reanudar el contador 4. Se limpie correctamente cuando sea desmontado</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Contador: {{ contador }}&lt;/h2&gt;\n    &lt;button @click=\"alternarPausa\"&gt;\n      {{ pausado ? 'Reanudar' : 'Pausar' }}\n    &lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  data() {\n    return {\n      contador: 0,\n      intervalo: null,\n      pausado: false\n    }\n  },\n  created() {\n    console.log('Componente creado');\n  },\n  mounted() {\n    console.log('Componente montado');\n    this.iniciarContador();\n  },\n  beforeUnmount() {\n    console.log('Antes de desmontar');\n    this.limpiarContador();\n  },\n  methods: {\n    iniciarContador() {\n      this.intervalo = setInterval(() =&gt; {\n        if (!this.pausado) {\n          this.contador++;\n        }\n      }, 1000);\n    },\n    limpiarContador() {\n      if (this.intervalo) {\n        clearInterval(this.intervalo);\n        this.intervalo = null;\n      }\n    },\n    alternarPausa() {\n      this.pausado = !this.pausado;\n    }\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/ciclo-vida/#preguntas-frecuentes","title":"Preguntas Frecuentes","text":"<p>\u00bfCu\u00e1l es la diferencia entre <code>created</code> y <code>mounted</code>? - <code>created</code> se llama cuando la instancia ha sido creada pero a\u00fan no se ha montado en el DOM. - <code>mounted</code> se llama despu\u00e9s de que el componente ha sido insertado en el DOM.</p> <p>\u00bfCu\u00e1ndo debo usar <code>beforeUnmount</code>? Usa <code>beforeUnmount</code> para limpiar cualquier recurso que pueda causar fugas de memoria, como: - Temporizadores con <code>setTimeout</code> o <code>setInterval</code> - Suscripciones a eventos globales - Conexiones WebSocket - Cualquier otro recurso que necesite ser liberado</p> <p>\u00bfPuedo usar async/await en los hooks del ciclo de vida? S\u00ed, pero ten en cuenta que el ciclo de vida continuar\u00e1 ejecut\u00e1ndose sin esperar a que se resuelva la promesa. Si necesitas esperar a que se complete una operaci\u00f3n as\u00edncrona, considera usar <code>onMounted</code> de la Composition API o manejar la l\u00f3gica as\u00edncrona de otra manera.</p>"},{"location":"fundamentos/ciclo-vida/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido sobre el ciclo de vida de los componentes en Vue, el siguiente paso es revisar la hoja de referencia r\u00e1pida que resume los conceptos fundamentales de Vue que hemos cubierto hasta ahora.</p> <p>Siguiente: Hoja de Referencia R\u00e1pida \u2192</p>"},{"location":"fundamentos/condicionales-bucles/","title":"2.3 Condicionales y Bucles","text":""},{"location":"fundamentos/condicionales-bucles/#directiva-v-if-v-else-if-v-else","title":"Directiva v-if, v-else-if, v-else","text":"<p>Las directivas condicionales permiten renderizar elementos basados en una condici\u00f3n.</p>"},{"location":"fundamentos/condicionales-bucles/#uso-basico","title":"Uso b\u00e1sico:","text":"<pre><code>&lt;div v-if=\"puntuacion &gt;= 90\"&gt;\n  \u00a1Excelente!\n&lt;/div&gt;\n&lt;div v-else-if=\"puntuacion &gt;= 70\"&gt;\n  Bien hecho\n&lt;/div&gt;\n&lt;div v-else&gt;\n  Sigue practicando\n&lt;/div&gt;\n</code></pre>"},{"location":"fundamentos/condicionales-bucles/#v-if-vs-v-show","title":"v-if vs v-show","text":"<ul> <li><code>v-if</code>: Renderiza condicionalmente el elemento (lo a\u00f1ade/elimina del DOM)</li> <li><code>v-show</code>: Siempre renderiza el elemento, pero usa CSS para mostrarlo/ocultarlo</li> </ul> <pre><code>&lt;div v-if=\"mostrar\"&gt;Usando v-if&lt;/div&gt;\n&lt;div v-show=\"mostrar\"&gt;Usando v-show&lt;/div&gt;\n</code></pre>"},{"location":"fundamentos/condicionales-bucles/#directiva-v-for","title":"Directiva v-for","text":"<p>Permite iterar sobre arrays u objetos.</p>"},{"location":"fundamentos/condicionales-bucles/#iterando-sobre-arrays","title":"Iterando sobre arrays:","text":"<pre><code>&lt;ul&gt;\n  &lt;li v-for=\"(tarea, index) in tareas\" :key=\"tarea.id\"&gt;\n    {{ index + 1 }}. {{ tarea.texto }}\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"fundamentos/condicionales-bucles/#iterando-sobre-objetos","title":"Iterando sobre objetos:","text":"<pre><code>&lt;ul&gt;\n  &lt;li v-for=\"(valor, clave) in usuario\" :key=\"clave\"&gt;\n    {{ clave }}: {{ valor }}\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"fundamentos/condicionales-bucles/#ejercicio-practico-lista-de-tareas-avanzada","title":"Ejercicio Pr\u00e1ctico: Lista de Tareas Avanzada","text":"<p>En este ejercicio, crearemos una lista de tareas avanzada que incluye: - Filtrado de tareas (Todas, Pendientes, Completadas) - Edici\u00f3n en l\u00ednea de tareas - Persistencia en localStorage - Contadores de tareas - Interfaz intuitiva</p>"},{"location":"fundamentos/condicionales-bucles/#estructura-del-codigo","title":"Estructura del C\u00f3digo","text":"<ol> <li>HTML (Template)</li> </ol> <pre><code>&lt;div id=\"app\"&gt;\n  &lt;h1&gt;Lista de Tareas Avanzada&lt;/h1&gt;\n\n  &lt;!-- Formulario para agregar tareas --&gt;\n  &lt;div class=\"form-group\"&gt;\n    &lt;input \n      v-model=\"nuevaTarea\" \n      @keyup.enter=\"agregarTarea\"\n      placeholder=\"Nueva tarea...\"\n    &gt;\n    &lt;button @click=\"agregarTarea\"&gt;Agregar&lt;/button&gt;\n  &lt;/div&gt;\n\n  &lt;!-- Filtros --&gt;\n  &lt;div class=\"filtros\"&gt;\n    &lt;button \n      v-for=\"filtro in filtros\" \n      :key=\"filtro\"\n      @click=\"filtroActual = filtro\"\n      :class=\"{ 'activo': filtro === filtroActual }\"\n    &gt;\n      {{ filtro }}\n    &lt;/button&gt;\n  &lt;/div&gt;\n\n  &lt;!-- Lista de tareas --&gt;\n  &lt;ul class=\"lista-tareas\"&gt;\n    &lt;li \n      v-for=\"tarea in tareasFiltradas\" \n      :key=\"tarea.id\"\n      :class=\"{ 'completada': tarea.completada }\"\n    &gt;\n      &lt;input \n        type=\"checkbox\" \n        v-model=\"tarea.completada\"\n        @change=\"actualizarTarea(tarea)\"\n      &gt;\n      &lt;span @dblclick=\"editarTarea(tarea)\"&gt;\n        {{ tarea.texto }}\n      &lt;/span&gt;\n      &lt;div class=\"acciones-tarea\"&gt;\n        &lt;button class=\"btn-editar\" @click=\"editarTarea(tarea)\"&gt;\n          \u270f\ufe0f\n        &lt;/button&gt;\n        &lt;button class=\"btn-eliminar\" @click=\"eliminarTarea(tarea.id)\"&gt;\n          \ud83d\uddd1\ufe0f\n        &lt;/button&gt;\n      &lt;/div&gt;\n\n      &lt;!-- Input de edici\u00f3n (se muestra al hacer doble clic) --&gt;\n      &lt;input \n        v-if=\"tarea.editando\"\n        v-model=\"tarea.texto\"\n        @blur=\"guardarEdicion(tarea)\"\n        @keyup.enter=\"guardarEdicion(tarea)\"\n        @keyup.esc=\"cancelarEdicion(tarea)\"\n        v-focus\n        class=\"input-edicion\"\n      &gt;\n    &lt;/li&gt;\n  &lt;/ul&gt;\n\n  &lt;!-- Contadores --&gt;\n  &lt;div class=\"contadores\"&gt;\n    &lt;p&gt;Total: {{ tareas.length }}&lt;/p&gt;\n    &lt;p&gt;Completadas: {{ tareasCompletadas }}&lt;/p&gt;\n    &lt;p&gt;Pendientes: {{ tareasPendientes }}&lt;/p&gt;\n  &lt;/div&gt;\n\n  &lt;!-- Mensaje cuando no hay tareas --&gt;\n  &lt;p v-if=\"tareas.length === 0\" class=\"sin-tareas\"&gt;\n    No hay tareas. \u00a1Agrega una para comenzar!\n  &lt;/p&gt;\n&lt;/div&gt;\n</code></pre> <ol> <li>JavaScript (Vue 3 Composition API)</li> </ol> <pre><code>const { createApp, ref, computed, onMounted } = Vue;\n\n// Directiva personalizada para enfocar el input de edici\u00f3n\nconst focus = {\n  mounted: (el) =&gt; el.focus()\n};\n\ncreateApp({\n  directives: { focus },\n\n  setup() {\n    const nuevaTarea = ref('');\n    const tareas = ref(JSON.parse(localStorage.getItem('tareas')) || []);\n    const filtroActual = ref('Todas');\n    const tareasAntesDeEditar = {};\n\n    const filtros = ['Todas', 'Pendientes', 'Completadas'];\n\n    // Cargar tareas guardadas al iniciar\n    onMounted(() =&gt; {\n      const tareasGuardadas = localStorage.getItem('tareas');\n      if (tareasGuardadas) {\n        tareas.value = JSON.parse(tareasGuardadas);\n      }\n    });\n\n    // Computadas\n    const tareasCompletadas = computed(() =&gt; \n      tareas.value.filter(t =&gt; t.completada).length\n    );\n\n    const tareasPendientes = computed(() =&gt; \n      tareas.value.length - tareasCompletadas.value\n    );\n\n    const tareasFiltradas = computed(() =&gt; {\n      switch (filtroActual.value) {\n        case 'Pendientes':\n          return tareas.value.filter(t =&gt; !t.completada);\n        case 'Completadas':\n          return tareas.value.filter(t =&gt; t.completada);\n        default:\n          return tareas.value;\n      }\n    });\n\n    // M\u00e9todos\n    function agregarTarea() {\n      if (nuevaTarea.value.trim() === '') return;\n\n      const tarea = {\n        id: Date.now(),\n        texto: nuevaTarea.value.trim(),\n        completada: false,\n        editando: false\n      };\n\n      tareas.value.push(tarea);\n      nuevaTarea.value = '';\n      guardarTareas();\n    }\n\n    function eliminarTarea(id) {\n      if (confirm('\u00bfEst\u00e1s seguro de eliminar esta tarea?')) {\n        tareas.value = tareas.value.filter(t =&gt; t.id !== id);\n        guardarTareas();\n      }\n    }\n\n    function editarTarea(tarea) {\n      tareasAntesDeEditar[tarea.id] = tarea.texto;\n      tarea.editando = true;\n    }\n\n    function guardarEdicion(tarea) {\n      if (tarea.texto.trim() === '') {\n        tarea.texto = tareasAntesDeEditar[tarea.id] || '';\n      }\n      tarea.editando = false;\n      guardarTareas();\n    }\n\n    function cancelarEdicion(tarea) {\n      tarea.texto = tareasAntesDeEditar[tarea.id] || tarea.texto;\n      tarea.editando = false;\n    }\n\n    function actualizarTarea(tarea) {\n      guardarTareas();\n    }\n\n    function guardarTareas() {\n      localStorage.setItem('tareas', JSON.stringify(tareas.value));\n    }\n\n    return {\n      nuevaTarea,\n      tareas,\n      tareasFiltradas,\n      tareasCompletadas,\n      tareasPendientes,\n      filtros,\n      filtroActual,\n      agregarTarea,\n      eliminarTarea,\n      editarTarea,\n      guardarEdicion,\n      cancelarEdicion,\n      actualizarTarea\n    };\n  }\n}).mount('#app');\n</code></pre> <ol> <li>CSS (Estilos)</li> </ol> <pre><code>/* Estilos generales */\n#app {\n  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n  line-height: 1.6;\n  max-width: 100%;\n  margin: 0 auto;\n  padding: 20px;\n  color: #333;\n  box-sizing: border-box;\n}\n\n/* T\u00edtulos */\nh1 {\n  color: #2c3e50;\n  text-align: center;\n  margin-bottom: 1.5rem;\n}\n\n/* Formulario */\n.form-group {\n  margin: 1.5rem 0;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n}\n\ninput[type=\"text\"] {\n  flex: 1;\n  min-width: 200px;\n  padding: 10px 15px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  font-size: 1rem;\n  box-sizing: border-box;\n}\n\nbutton {\n  padding: 10px 20px;\n  background: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n  font-size: 1rem;\n  white-space: nowrap;\n}\n\nbutton:hover {\n  background: #3aa876;\n  transform: translateY(-1px);\n  box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n}\n\n/* Filtros */\n.filtros {\n  margin: 1.5rem 0;\n  display: flex;\n  gap: 10px;\n  flex-wrap: wrap;\n  justify-content: center;\n}\n\n.filtros button {\n  background: #f0f0f0;\n  color: #333;\n  padding: 8px 15px;\n  margin: 5px;\n}\n\n.filtros button.activo {\n  background: #42b983;\n  color: white;\n  font-weight: 600;\n}\n\n/* Lista de tareas */\n.lista-tareas {\n  list-style: none;\n  padding: 0;\n  margin: 0;\n}\n\n.lista-tareas li {\n  display: flex;\n  align-items: center;\n  padding: 12px 15px;\n  margin: 10px 0;\n  background: #ffffff;\n  border-radius: 6px;\n  transition: all 0.3s ease;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.1);\n  border-left: 4px solid #42b983;\n}\n\n.lista-tareas li:hover {\n  transform: translateX(5px);\n  box-shadow: 0 4px 8px rgba(0,0,0,0.1);\n}\n\n.lista-tareas li.completada {\n  opacity: 0.8;\n  border-left-color: #95a5a6;\n}\n\n.lista-tareas li.completada span {\n  text-decoration: line-through;\n  color: #7f8c8d;\n}\n\n.lista-tareas input[type=\"checkbox\"] {\n  margin-right: 12px;\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n}\n\n.lista-tareas span {\n  flex: 1;\n  margin: 0 15px;\n  cursor: pointer;\n  word-break: break-word;\n  padding: 5px 0;\n}\n\n/* Botones de acci\u00f3n */\n.acciones-tarea {\n  display: flex;\n  gap: 8px;\n}\n\n.btn-eliminar {\n  background-color: #e74c3c !important;\n  padding: 6px 10px !important;\n  border-radius: 4px;\n}\n\n.btn-eliminar:hover {\n  background-color: #c0392b !important;\n}\n\n.btn-editar {\n  background-color: #3498db !important;\n  padding: 6px 10px !important;\n  border-radius: 4px;\n}\n\n.btn-editar:hover {\n  background-color: #2980b9 !important;\n}\n\n/* Contadores */\n.contadores {\n  display: flex;\n  justify-content: space-between;\n  margin: 1.5rem 0;\n  padding: 15px;\n  background: #f8f9fa;\n  border-radius: 6px;\n  font-size: 0.95rem;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\n.contadores p {\n  margin: 0;\n  padding: 5px 10px;\n  background: white;\n  border-radius: 4px;\n  box-shadow: 0 1px 3px rgba(0,0,0,0.05);\n  min-width: 120px;\n  text-align: center;\n}\n\n/* Mensaje sin tareas */\n.sin-tareas {\n  color: #7f8c8d;\n  font-style: italic;\n  text-align: center;\n  padding: 2rem;\n  background: #f8f9fa;\n  border-radius: 6px;\n  margin: 2rem 0;\n}\n\n/* Input de edici\u00f3n */\n.input-edicion {\n  flex: 1;\n  padding: 10px 15px;\n  border: 1px solid #42b983;\n  border-radius: 4px;\n  font-size: 1rem;\n  margin-right: 10px;\n  box-shadow: 0 0 0 2px rgba(66, 185, 131, 0.2);\n}\n\n/* Efecto para el modo edici\u00f3n */\n[contenteditable=\"true\"],\ninput[type=\"text\"]:focus {\n  outline: none;\n  border-color: #42b983;\n  box-shadow: 0 0 0 2px rgba(66, 185, 131, 0.2);\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .form-group {\n    flex-direction: column;\n  }\n\n  button, input[type=\"text\"] {\n    width: 100%;\n  }\n\n  .contadores {\n    flex-direction: column;\n    gap: 10px;\n  }\n\n  .contadores p {\n    width: 100%;\n    box-sizing: border-box;\n  }\n\n  .lista-tareas li {\n    flex-wrap: wrap;\n    gap: 10px;\n  }\n\n  .acciones-tarea {\n    margin-left: auto;\n  }\n}\n</code></pre>"},{"location":"fundamentos/condicionales-bucles/#como-usar-la-aplicacion","title":"C\u00f3mo usar la aplicaci\u00f3n","text":"<ol> <li>Agregar tareas: Escribe en el campo de texto y presiona Enter o haz clic en \"Agregar\".</li> <li>Marcar como completada: Usa el checkbox al lado de cada tarea.</li> <li>Editar tarea: Haz doble clic en el texto de la tarea o haz clic en el bot\u00f3n de editar (\u270f\ufe0f).</li> <li>Eliminar tarea: Haz clic en el bot\u00f3n de eliminar (\ud83d\uddd1\ufe0f).</li> <li>Filtrar tareas: Usa los botones de filtro para ver todas las tareas, solo las pendientes o solo las completadas.</li> </ol>"},{"location":"fundamentos/condicionales-bucles/#caracteristicas-implementadas","title":"Caracter\u00edsticas implementadas","text":"<ul> <li>Persistencia de datos: Las tareas se guardan autom\u00e1ticamente en el localStorage del navegador.</li> <li>Dise\u00f1o responsive: Se adapta a diferentes tama\u00f1os de pantalla.</li> <li>Interfaz intuitiva: Retroalimentaci\u00f3n visual al interactuar con los elementos.</li> <li>Accesibilidad: Controles accesibles y f\u00e1ciles de usar.</li> </ul>"},{"location":"fundamentos/condicionales-bucles/#posibles-mejoras","title":"Posibles mejoras","text":"<ol> <li>Validaci\u00f3n de entrada: Evitar tareas duplicadas o vac\u00edas.</li> <li>Categor\u00edas de tareas: Agrupar tareas por categor\u00edas.</li> <li>Fechas de vencimiento: A\u00f1adir fechas l\u00edmite a las tareas.</li> <li>B\u00fasqueda: A\u00f1adir un campo de b\u00fasqueda para encontrar tareas espec\u00edficas.</li> <li>Ordenamiento: Permitir ordenar las tareas por diferentes criterios (fecha, completadas, etc.).</li> </ol> <p>\u00a1Ahora tienes una aplicaci\u00f3n de lista de tareas completa y funcional construida con Vue 3 y la Composition API! Puedes personalizar los estilos y agregar m\u00e1s funcionalidades seg\u00fan tus necesidades.</p>"},{"location":"fundamentos/condicionales-bucles/#siguiente-paso","title":"Siguiente paso","text":"<p>En la siguiente secci\u00f3n, exploraremos las propiedades computadas en Vue, que nos permiten realizar c\u00e1lculos complejos sobre nuestros datos reactivos de manera eficiente.</p> <p>Siguiente: Propiedades Computadas \u2192</p>"},{"location":"fundamentos/ejercicio-practico/","title":"2.8 Ejercicio Pr\u00e1ctico: Cat\u00e1logo de Pel\u00edculas","text":"<p>\u00a1Lleg\u00f3 el momento de poner en pr\u00e1ctica todo lo aprendido en la secci\u00f3n de Fundamentos! En este ejercicio, crear\u00e1s un cat\u00e1logo de pel\u00edculas interactivo que incluir\u00e1:</p> <ul> <li>Lista de pel\u00edculas con sus detalles</li> <li>B\u00fasqueda por t\u00edtulo y filtrado por g\u00e9nero</li> <li>Sistema de calificaci\u00f3n con estrellas</li> <li>Vista de pel\u00edculas favoritas</li> <li>Persistencia local de los datos</li> </ul>"},{"location":"fundamentos/ejercicio-practico/#requisitos-del-ejercicio","title":"Requisitos del Ejercicio","text":"<ol> <li> <p>Estructura b\u00e1sica: Crea una aplicaci\u00f3n Vue 3 con los siguientes elementos:</p> <ul> <li>Barra de b\u00fasqueda por t\u00edtulo</li> <li>Filtros por g\u00e9nero</li> <li>Tarjetas de pel\u00edculas con imagen, t\u00edtulo, a\u00f1o y calificaci\u00f3n</li> <li>Sistema de calificaci\u00f3n con estrellas</li> <li>Secci\u00f3n de favoritos</li> </ul> </li> <li> <p>Funcionalidades requeridas:</p> <ul> <li>Buscar pel\u00edculas por t\u00edtulo</li> <li>Filtrar por g\u00e9nero</li> <li>Calificar pel\u00edculas</li> <li>Marcar/desmarcar como favorita</li> <li>Ver detalles de la pel\u00edcula</li> <li>Persistencia en localStorage</li> </ul> </li> </ol>"},{"location":"fundamentos/ejercicio-practico/#codigo-inicial","title":"C\u00f3digo Inicial","text":"<p>Crea un archivo <code>index.html</code> con el siguiente contenido:</p> <pre><code>&lt;!DOCTYPE html&gt;\n&lt;html lang=\"es\"&gt;\n&lt;head&gt;\n    &lt;meta charset=\"UTF-8\"&gt;\n    &lt;meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"&gt;\n    &lt;title&gt;Cat\u00e1logo de Pel\u00edculas - Vue 3&lt;/title&gt;\n    &lt;script src=\"https://unpkg.com/vue@3/dist/vue.global.js\"&gt;&lt;/script&gt;\n    &lt;style&gt;\n        body {\n            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;\n            max-width: 1000px;\n            margin: 0 auto;\n            padding: 20px;\n            line-height: 1.6;\n            background-color: #f5f5f5;\n        }\n        .search-container {\n            background: white;\n            padding: 20px;\n            border-radius: 8px;\n            box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n            margin-bottom: 20px;\n        }\n        .search-input {\n            width: 70%;\n            padding: 10px;\n            font-size: 16px;\n            border: 1px solid #ddd;\n            border-radius: 4px;\n            margin-right: 10px;\n        }\n        .filters {\n            margin: 15px 0;\n        }\n        .filter-btn {\n            margin-right: 10px;\n            padding: 5px 15px;\n            cursor: pointer;\n            background: #f0f0f0;\n            border: 1px solid #ddd;\n            border-radius: 15px;\n            transition: all 0.3s;\n        }\n        .filter-btn.active, .filter-btn:hover {\n            background-color: #42b983;\n            color: white;\n            border-color: #42b983;\n        }\n        .movies-grid {\n            display: grid;\n            grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n            gap: 20px;\n            margin-top: 20px;\n        }\n        .movie-card {\n            background: white;\n            border-radius: 8px;\n            overflow: hidden;\n            box-shadow: 0 2px 8px rgba(0,0,0,0.1);\n            transition: transform 0.3s;\n        }\n        .movie-card:hover {\n            transform: translateY(-5px);\n        }\n        .movie-poster {\n            width: 100%;\n            height: 300px;\n            object-fit: cover;\n        }\n        .movie-info {\n            padding: 15px;\n        }\n        .movie-title {\n            font-size: 1.1em;\n            margin: 0 0 5px 0;\n        }\n        .movie-year {\n            color: #666;\n            font-size: 0.9em;\n            margin: 0 0 10px 0;\n        }\n        .star-rating {\n            color: #ffc107;\n            margin-bottom: 10px;\n        }\n        .favorite-btn {\n            background: none;\n            border: none;\n            font-size: 1.2em;\n            cursor: pointer;\n            color: #ddd;\n        }\n        .favorite-btn.active {\n            color: #ff4081;\n        }\n    &lt;/style&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"app\"&gt;\n        &lt;h1&gt;Cat\u00e1logo de Pel\u00edculas&lt;/h1&gt;\n\n        &lt;!-- Barra de b\u00fasqueda --&gt;\n        &lt;div class=\"search-container\"&gt;\n            &lt;input \n                type=\"text\" \n                v-model=\"searchQuery\" \n                class=\"search-input\" \n                placeholder=\"Buscar pel\u00edculas...\"\n                @input=\"filterMovies\"\n            &gt;\n\n            &lt;!-- Filtros por g\u00e9nero --&gt;\n            &lt;div class=\"filters\"&gt;\n                &lt;button \n                    v-for=\"genre in genres\" \n                    :key=\"genre\"\n                    @click=\"toggleGenre(genre)\"\n                    :class=\"['filter-btn', { active: selectedGenres.includes(genre) }]\"\n                &gt;\n                    {{ genre }}\n                &lt;/button&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;!-- Secci\u00f3n de favoritos --&gt;\n        &lt;div v-if=\"favorites.length &gt; 0\"&gt;\n            &lt;h2&gt;Tus Pel\u00edculas Favoritas&lt;/h2&gt;\n            &lt;div class=\"movies-grid\"&gt;\n                &lt;div \n                    v-for=\"movie in favorites\" \n                    :key=\"movie.id\" \n                    class=\"movie-card\"\n                &gt;\n                    &lt;img :src=\"movie.poster\" :alt=\"movie.title\" class=\"movie-poster\"&gt;\n                    &lt;div class=\"movie-info\"&gt;\n                        &lt;h3 class=\"movie-title\"&gt;{{ movie.title }}&lt;/h3&gt;\n                        &lt;p class=\"movie-year\"&gt;{{ movie.year }}&lt;/p&gt;\n                        &lt;div class=\"star-rating\"&gt;\n                            &lt;span v-for=\"i in 5\" :key=\"i\"&gt;\n                                {{ i &lt;= movie.rating ? '\u2605' : '\u2606' }}\n                            &lt;/span&gt;\n                        &lt;/div&gt;\n                        &lt;button \n                            class=\"favorite-btn active\"\n                            @click=\"toggleFavorite(movie)\"\n                        &gt;\n                            \u2764\ufe0f\n                        &lt;/button&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n\n        &lt;!-- Lista de pel\u00edculas --&gt;\n        &lt;h2&gt;Pel\u00edculas&lt;/h2&gt;\n        &lt;div class=\"movies-grid\"&gt;\n            &lt;div \n                v-for=\"movie in filteredMovies\" \n                :key=\"movie.id\" \n                class=\"movie-card\"\n            &gt;\n                &lt;img :src=\"movie.poster\" :alt=\"movie.title\" class=\"movie-poster\"&gt;\n                &lt;div class=\"movie-info\"&gt;\n                    &lt;h3 class=\"movie-title\"&gt;{{ movie.title }}&lt;/h3&gt;\n                    &lt;p class=\"movie-year\"&gt;{{ movie.year }}&lt;/p&gt;\n                    &lt;div class=\"star-rating\"&gt;\n                        &lt;span \n                            v-for=\"i in 5\" \n                            :key=\"i\"\n                            @click=\"rateMovie(movie, i)\"\n                            style=\"cursor: pointer;\"\n                        &gt;\n                            {{ i &lt;= movie.rating ? '\u2605' : '\u2606' }}\n                        &lt;/span&gt;\n                    &lt;/div&gt;\n                    &lt;button \n                        class=\"favorite-btn\"\n                        :class=\"{ active: isFavorite(movie) }\"\n                        @click=\"toggleFavorite(movie)\"\n                    &gt;\n                        {{ isFavorite(movie) ? '\u2764\ufe0f' : '\ud83e\udd0d' }}\n                    &lt;/button&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;script&gt;\n    const { createApp, ref, computed, onMounted, watch } = Vue;\n\n    // Datos iniciales de pel\u00edculas\n    const initialMovies = [\n        {\n            id: 1,\n            title: 'El Padrino',\n            year: 1972,\n            genre: ['Drama', 'Crimen'],\n            rating: 0,\n            poster: 'https://m.media-amazon.com/images/M/MV5BM2MyNjYxNmUtYTAwNi00MTYxLWJkNWUtNzViYTliMDk5MmYxXkEyXkFqcGdeQXVyNzkwMjQ5NzM@._V1_SX300.jpg'\n        },\n        {\n            id: 2,\n            title: 'El Caballero Oscuro',\n            year: 2008,\n            genre: ['Acci\u00f3n', 'Crimen', 'Drama'],\n            rating: 0,\n            poster: 'https://m.media-amazon.com/images/M/MV5BMTMxNTMwODM0NF5BMl5BanBnXkFtZTcwODAyMTk2Mw@@._V1_SX300.jpg'\n        },\n        {\n            id: 3,\n            title: 'Par\u00e1sitos',\n            year: 2019,\n            genre: ['Drama', 'Suspenso'],\n            rating: 0,\n            poster: 'https://m.media-amazon.com/images/M/MV5BYWZjMjk3ZTItODQ2ZC00NTY5LThmNjMtYTNkZDBjMzQ3ZTI0XkEyXkFqcGdeQXVyODk4OTc3MTY@._V1_SX300.jpg'\n        },\n        {\n            id: 4,\n            title: 'Origen',\n            year: 2010,\n            genre: ['Acci\u00f3n', 'Aventura', 'Ciencia Ficci\u00f3n'],\n            rating: 0,\n            poster: 'https://m.media-amazon.com/images/M/MV5BMjAxMzY3NjcxNF5BMl5BanBnXkFtZTcwNTI5OTM0Mw@@._V1_SX300.jpg'\n        },\n        {\n            id: 5,\n            title: 'El viaje de Chihiro',\n            year: 2001,\n            genre: ['Animaci\u00f3n', 'Aventura', 'Fantas\u00eda'],\n            rating: 0,\n            poster: 'https://m.media-amazon.com/images/M/MV5BMjlmZmI5MDctNDE2YS00YWE0LWE5ZWItZDBhYWQ0NTcxNWRhXkEyXkFqcGdeQXVyMTMxODk2OTU@._V1_SX300.jpg'\n        }\n    ];\n\n    createApp({\n        setup() {\n            const movies = ref([...initialMovies]);\n            const favorites = ref([]);\n            const searchQuery = ref('');\n            const selectedGenres = ref([]);\n\n            // Obtener g\u00e9neros \u00fanicos\n            const genres = computed(() =&gt; {\n                const allGenres = [];\n                movies.value.forEach(movie =&gt; {\n                    movie.genre.forEach(g =&gt; {\n                        if (!allGenres.includes(g)) {\n                            allGenres.push(g);\n                        }\n                    });\n                });\n                return allGenres.sort();\n            });\n\n            // Obtener datos guardados al cargar\n            onMounted(() =&gt; {\n                const savedMovies = localStorage.getItem('movies');\n                const savedFavorites = localStorage.getItem('favorites');\n\n                if (savedMovies) {\n                    movies.value = JSON.parse(savedMovies);\n                }\n\n                if (savedFavorites) {\n                    favorites.value = JSON.parse(savedFavorites);\n                }\n            });\n\n            // Guardar datos en localStorage\n            const saveData = () =&gt; {\n                localStorage.setItem('movies', JSON.stringify(movies.value));\n                localStorage.setItem('favorites', JSON.stringify(favorites.value));\n            };\n\n            // Filtrar pel\u00edculas por b\u00fasqueda y g\u00e9nero\n            const filteredMovies = computed(() =&gt; {\n                return movies.value.filter(movie =&gt; {\n                    const matchesSearch = movie.title.toLowerCase().includes(searchQuery.value.toLowerCase());\n                    const matchesGenre = selectedGenres.value.length === 0 || \n                                      movie.genre.some(genre =&gt; selectedGenres.value.includes(genre));\n\n                    return matchesSearch &amp;&amp; matchesGenre;\n                });\n            });\n\n            // Calificar pel\u00edcula\n            const rateMovie = (movie, rating) =&gt; {\n                movie.rating = rating;\n                saveData();\n            };\n\n            // Alternar favorito\n            const toggleFavorite = (movie) =&gt; {\n                const index = favorites.value.findIndex(fav =&gt; fav.id === movie.id);\n                if (index === -1) {\n                    favorites.value.push(movie);\n                } else {\n                    favorites.value.splice(index, 1);\n                }\n                saveData();\n            };\n\n            // Verificar si una pel\u00edcula es favorita\n            const isFavorite = (movie) =&gt; {\n                return favorites.value.some(fav =&gt; fav.id === movie.id);\n            };\n\n            // Alternar filtro de g\u00e9nero\n            const toggleGenre = (genre) =&gt; {\n                const index = selectedGenres.value.indexOf(genre);\n                if (index === -1) {\n                    selectedGenres.value.push(genre);\n                } else {\n                    selectedGenres.value.splice(index, 1);\n                }\n            };\n\n            return {\n                movies,\n                favorites,\n                searchQuery,\n                selectedGenres,\n                genres,\n                filteredMovies,\n                rateMovie,\n                toggleFavorite,\n                isFavorite,\n                toggleGenre\n            };\n        }\n    })\n    .mount('#app');\n    &lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>"},{"location":"fundamentos/ejercicio-practico/#instrucciones-para-el-ejercicio","title":"Instrucciones para el Ejercicio","text":"<ol> <li> <p>Configuraci\u00f3n Inicial:</p> <ul> <li>Crea un nuevo archivo llamado <code>index.html</code> y copia el c\u00f3digo proporcionado.</li> <li>Abre el archivo en tu navegador para ver la aplicaci\u00f3n en acci\u00f3n.</li> </ul> </li> <li> <p>Tareas a Realizar:</p> <ul> <li>Familiar\u00edzate con el c\u00f3digo y entiende c\u00f3mo funciona cada parte.</li> <li>Prueba todas las funcionalidades: buscar, filtrar por g\u00e9nero, calificar y marcar como favoritas.</li> <li>Verifica que las calificaciones y favoritos persisten al recargar la p\u00e1gina.</li> </ul> </li> <li> <p>Mejoras Sugeridas (Opcional):</p> <ul> <li>A\u00f1ade un modal para ver m\u00e1s detalles de cada pel\u00edcula.</li> <li>Implementa un sistema de rese\u00f1as con comentarios.</li> <li>A\u00f1ade la opci\u00f3n de ordenar pel\u00edculas por a\u00f1o, calificaci\u00f3n o t\u00edtulo.</li> <li>Implementa un sistema de autenticaci\u00f3n para usuarios.</li> <li>A\u00f1ade la posibilidad de crear listas personalizadas de pel\u00edculas.</li> </ul> </li> </ol>"},{"location":"fundamentos/ejercicio-practico/#conceptos-aplicados","title":"Conceptos Aplicados","text":"<p>En este ejercicio has utilizado:</p> <ul> <li> <p>Interpolaci\u00f3n y Directivas: </p> <ul> <li><code>{{ }}</code> para mostrar datos</li> <li><code>v-for</code> para iterar sobre arrays</li> <li><code>v-if</code> y <code>v-else</code> para renderizado condicional</li> <li><code>v-model</code> para two-way binding</li> </ul> </li> <li> <p>Manejo de Eventos:</p> <ul> <li><code>@click</code> para interacciones de clic</li> <li><code>@input</code> para capturar entradas de texto</li> <li><code>@mouseover</code> para efectos de hover</li> </ul> </li> <li> <p>Propiedades Computadas: </p> <ul> <li>Para filtrar pel\u00edculas seg\u00fan b\u00fasqueda</li> <li>Para obtener lista de g\u00e9neros \u00fanicos</li> </ul> </li> <li> <p>Ciclo de Vida:</p> <ul> <li><code>onMounted</code> para cargar datos del localStorage al iniciar</li> </ul> </li> <li> <p>Two-way Binding:</p> <ul> <li>Con <code>v-model</code> para sincronizar la barra de b\u00fasqueda</li> </ul> </li> <li> <p>Clases Din\u00e1micas:</p> <ul> <li>Para resaltar pel\u00edculas favoritas</li> <li>Para mostrar g\u00e9neros seleccionados</li> </ul> </li> <li> <p>Manejo de Arrays:</p> <ul> <li><code>filter</code> para filtrar elementos</li> <li><code>some</code> para verificar condiciones</li> <li><code>includes</code> para b\u00fasqueda en arrays</li> </ul> </li> </ul>"},{"location":"fundamentos/ejercicio-practico/#solucion","title":"Soluci\u00f3n","text":"<p>Si te quedas atascado o quieres comparar tu soluci\u00f3n con una implementaci\u00f3n de referencia, aqu\u00ed tienes el c\u00f3digo completo de la soluci\u00f3n:</p> <p>Enlace a la soluci\u00f3n completa (opcional: puedes crear un repositorio con la soluci\u00f3n final)</p>"},{"location":"fundamentos/ejercicio-practico/#siguiente-paso","title":"Siguiente paso","text":"<p>\u00a1Felicidades! Has creado un cat\u00e1logo de pel\u00edculas interactivo que demuestra un dominio s\u00f3lido de los conceptos fundamentales de Vue 3. En la siguiente secci\u00f3n encontrar\u00e1s una hoja de referencia r\u00e1pida con un resumen de todo lo aprendido.</p> <p>Siguiente: Hoja de Referencia R\u00e1pida \u2192</p>"},{"location":"fundamentos/eventos/","title":"2.5 Manejo de Eventos","text":"<p>El manejo de eventos en Vue.js permite responder a las interacciones del usuario de manera declarativa. Vue proporciona la directiva <code>v-on</code> (o su atajo <code>@</code>) para escuchar eventos del DOM y ejecutar c\u00f3digo JavaScript cuando ocurren.</p>"},{"location":"fundamentos/eventos/#conceptos-basicos","title":"Conceptos B\u00e1sicos","text":""},{"location":"fundamentos/eventos/#sintaxis-basica","title":"Sintaxis B\u00e1sica","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;!-- Usando v-on --&gt;\n    &lt;button v-on:click=\"contador++\"&gt;Contador: {{ contador }}&lt;/button&gt;\n\n    &lt;!-- Usando el atajo @ --&gt;\n    &lt;button @click=\"contador = 0\"&gt;Reiniciar&lt;/button&gt;\n\n    &lt;!-- Llamando a un m\u00e9todo --&gt;\n    &lt;button @click=\"saludar\"&gt;Saludar&lt;/button&gt;\n\n    &lt;!-- Con argumentos --&gt;\n    &lt;button @click=\"saludarConNombre('Juan')\"&gt;Saludar a Juan&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue';\n\nconst contador = ref(0);\nconst nombre = ref('Visitante');\n\nfunction saludar() {\n  alert(`\u00a1Hola, ${nombre.value}!`);}\n\nfunction saludarConNombre(nombre) {\n  alert(`\u00a1Hola, ${nombre}!`);\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/eventos/#modificadores-de-eventos","title":"Modificadores de Eventos","text":"<p>Vue proporciona modificadores de eventos para tareas comunes:</p>"},{"location":"fundamentos/eventos/#1-modificadores-de-evento","title":"1. Modificadores de Evento","text":"<pre><code>&lt;!-- El evento submit ya no recargar\u00e1 la p\u00e1gina --&gt;\n&lt;form @submit.prevent=\"enviarFormulario\"&gt;\n  &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n&lt;/form&gt;\n\n&lt;!-- Detiene la propagaci\u00f3n del evento --&gt;\n&lt;div @click=\"alerta('div')\"&gt;\n  &lt;button @click.stop=\"alerta('bot\u00f3n')\"&gt;Haz clic&lt;/button&gt;\n&lt;/div&gt;\n\n&lt;!-- El evento solo se activar\u00e1 una vez --&gt;\n&lt;button @click.once=\"hacerAlgo\"&gt;Solo una vez&lt;/button&gt;\n\n&lt;!-- El evento solo se activar\u00e1 con el bot\u00f3n izquierdo --&gt;\n&lt;button @click.left=\"izquierdo\"&gt;Izquierdo&lt;/button&gt;\n</code></pre>"},{"location":"fundamentos/eventos/#2-modificadores-de-teclado","title":"2. Modificadores de Teclado","text":"<pre><code>&lt;!-- Solo se activa con Enter --&gt;\n&lt;input @keyup.enter=\"enviar\" placeholder=\"Presiona Enter\"&gt;\n\n&lt;!-- Con teclas espec\u00edficas --&gt;\n&lt;input \n  @keyup.enter=\"enviar\"\n  @keyup.esc=\"cancelar\"\n  @keyup.space=\"espacio\"\n  placeholder=\"Prueba Enter, Esc o Espacio\"\n&gt;\n\n&lt;!-- Con c\u00f3digos de tecla --&gt;\n&lt;input @keyup.page-down=\"siguientePagina\"&gt;\n\n&lt;!-- Combinaci\u00f3n de teclas --&gt;\n&lt;input @keyup.ctrl.enter=\"enviar\" placeholder=\"Ctrl+Enter para enviar\"&gt;\n</code></pre>"},{"location":"fundamentos/eventos/#3-modificadores-del-raton","title":"3. Modificadores del Rat\u00f3n","text":"<pre><code>&lt;button \n  @click.right.prevent=\"menuContextual\"\n  @click.middle=\"accionBotonMedio\"\n&gt;\n  Haz clic derecho o con la rueda\n&lt;/button&gt;\n</code></pre>"},{"location":"fundamentos/eventos/#objeto-de-evento-nativo","title":"Objeto de Evento Nativo","text":"<p>Puedes acceder al evento nativo del DOM usando la variable especial <code>$event</code> o usando una funci\u00f3n flecha:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;!-- Usando $event --&gt;\n    &lt;button @click=\"mostrarMensaje('Hola', $event)\"&gt;Saludar 1&lt;/button&gt;\n\n    &lt;!-- Usando funci\u00f3n flecha --&gt;\n    &lt;button @click=\"(event) =&gt; mostrarMensaje('Hola', event)\"&gt;Saludar 2&lt;/button&gt;\n\n    &lt;!-- Con argumentos personalizados --&gt;\n    &lt;button @click=\"(e) =&gt; enviarFormulario('usuario123', e)\"&gt;\n      Enviar formulario\n    &lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nfunction mostrarMensaje(mensaje, event) {\n  console.log(event.target.tagName); // Muestra \"BUTTON\"\n  alert(mensaje);\n}\n\nfunction enviarFormulario(usuarioId, event) {\n  console.log(`Enviando formulario para el usuario: ${usuarioId}`);\n  // L\u00f3gica para enviar el formulario\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/eventos/#ejemplo-practico-juego-de-memoria","title":"Ejemplo Pr\u00e1ctico: Juego de Memoria","text":"<p>Vamos a crear un juego de memoria que demuestre el manejo de eventos en Vue:</p> <pre><code>&lt;template&gt;\n  &lt;div class=\"juego-memoria\"&gt;\n    &lt;h1&gt;Juego de Memoria&lt;/h1&gt;\n\n    &lt;div class=\"controles\"&gt;\n      &lt;button @click=\"iniciarJuego\"&gt;\n        {{ juegoIniciado ? 'Reiniciar' : 'Comenzar' }} Juego\n      &lt;/button&gt;\n      &lt;div class=\"puntuacion\"&gt;\n        &lt;span&gt;Pares encontrados: {{ paresEncontrados }}/{{ totalPares }}&lt;/span&gt;\n        &lt;span&gt;Intentos: {{ intentos }}&lt;/span&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"tablero\" :class=\"{ 'juego-activo': juegoIniciado }\"&gt;\n      &lt;div \n        v-for=\"(carta, index) in cartas\" \n        :key=\"index\"\n        class=\"carta\"\n        :class=\"{ \n          'volteada': carta.volteada, \n          'encontrada': carta.encontrada \n        }\"\n        @click=\"voltearCarta(index)\"\n      &gt;\n        &lt;div class=\"cara frontal\"&gt;?&lt;/div&gt;\n        &lt;div class=\"cara trasera\"&gt;\n          {{ carta.valor }}\n        &lt;/div&gt;\n      &lt;/div&gt;\n    &lt;/div&gt;\n\n    &lt;div v-if=\"juegoTerminado\" class=\"mensaje-final\"&gt;\n      &lt;h2&gt;\u00a1Has ganado! \ud83c\udf89&lt;/h2&gt;\n      &lt;p&gt;Completaste el juego en {{ intentos }} intentos.&lt;/p&gt;\n      &lt;button @click=\"iniciarJuego\"&gt;Jugar de nuevo&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed, onMounted } from 'vue';\n\n// Estado del juego\nconst juegoIniciado = ref(false);\nconst juegoTerminado = ref(false);\nconst cartas = ref([]);\nconst intentos = ref(0);\nconst cartasVolteadas = ref([]);\nconst paresEncontrados = ref(0);\n\n// Constantes\nconst totalPares = 8; // N\u00famero de pares en el juego\nconst emojis = ['\ud83d\udc36', '\ud83d\udc31', '\ud83d\udc2d', '\ud83d\udc39', '\ud83d\udc30', '\ud83e\udd8a', '\ud83d\udc3b', '\ud83d\udc3c', '\ud83e\udd81', '\ud83d\udc2e'];\n\n// Propiedades computadas\nconst cartasRestantes = computed(() =&gt; {\n  return cartas.value.filter(c =&gt; !c.encontrada).length;\n});\n\n// Inicializar el juego\nfunction inicializarJuego() {\n  // Crear pares de cartas\n  const valores = [];\n  const emojisAleatorios = [...emojis].sort(() =&gt; 0.5 - Math.random()).slice(0, totalPares);\n\n  // Duplicar los emojis para hacer pares\n  emojisAleatorios.forEach(emoji =&gt; {\n    valores.push({ valor: emoji, id: Math.random() });\n    valores.push({ valor: emoji, id: Math.random() });\n  });\n\n  // Barajar las cartas\n  return valores.sort(() =&gt; 0.5 - Math.random());\n}\n\n// Iniciar o reiniciar el juego\nfunction iniciarJuego() {\n  const valoresCartas = inicializarJuego();\n\n  cartas.value = valoresCartas.map(carta =&gt; ({\n    ...carta,\n    volteada: false,\n    encontrada: false\n  }));\n\n  juegoIniciado.value = true;\n  juegoTerminado.value = false;\n  intentos.value = 0;\n  paresEncontrados.value = 0;\n  cartasVolteadas.value = [];\n\n  // Voltear todas las cartas al inicio por 2 segundos\n  cartas.value.forEach(carta =&gt; {\n    carta.volteada = true;\n  });\n\n  setTimeout(() =&gt; {\n    cartas.value.forEach(carta =&gt; {\n      carta.volteada = false;\n    });\n  }, 2000);\n}\n\n// Voltear una carta\nfunction voltearCarta(index) {\n  const carta = cartas.value[index];\n\n  // No hacer nada si la carta ya est\u00e1 volteada o encontrada\n  if (carta.volteada || carta.encontrada || cartasVolteadas.value.length &gt;= 2) {\n    return;\n  }\n\n  // Voltear la carta\n  carta.volteada = true;\n  cartasVolteadas.value.push(index);\n\n  // Si hay dos cartas volteadas, verificar si hacen par\n  if (cartasVolteadas.value.length === 2) {\n    intentos.value++;\n    const [primera, segunda] = cartasVolteadas.value;\n\n    if (cartas.value[primera].valor === cartas.value[segunda].valor) {\n      // Encontraron un par\n      cartas.value[primera].encontrada = true;\n      cartas.value[segunda].encontrada = true;\n      cartasVolteadas.value = [];\n      paresEncontrados.value++;\n\n      // Verificar si el juego ha terminado\n      if (paresEncontrados.value === totalPares) {\n        juegoTerminado.value = true;\n      }\n    } else {\n      // No son iguales, voltear de nuevo despu\u00e9s de un tiempo\n      setTimeout(() =&gt; {\n        cartas.value[primera].volteada = false;\n        cartas.value[segunda].volteada = false;\n        cartasVolteadas.value = [];\n      }, 1000);\n    }\n  }\n}\n\n// Iniciar el juego al cargar el componente\nonMounted(() =&gt; {\n  // Opcional: Iniciar autom\u00e1ticamente\n  // iniciarJuego();\n});\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.juego-memoria {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n  text-align: center;\n}\n\n.controles {\n  margin: 20px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  gap: 10px;\n}\n\nbutton {\n  padding: 10px 20px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  font-size: 1em;\n  transition: background-color 0.2s;\n}\n\nbutton:hover {\n  background-color: #369f6b;\n}\n\n.puntuacion {\n  display: flex;\n  gap: 20px;\n  font-size: 1.1em;\n}\n\n.tablero {\n  display: grid;\n  grid-template-columns: repeat(4, 1fr);\n  gap: 10px;\n  margin-top: 20px;\n  opacity: 0.5;\n  pointer-events: none;\n  transition: opacity 0.3s;\n}\n\n.tablero.juego-activo {\n  opacity: 1;\n  pointer-events: auto;\n}\n\n.carta {\n  aspect-ratio: 1;\n  perspective: 1000px;\n  cursor: pointer;\n}\n\n.carta .cara {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  backface-visibility: hidden;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 2.5em;\n  border-radius: 8px;\n  transition: transform 0.5s;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n}\n\n.carta .frontal {\n  background-color: #42b983;\n  color: white;\n  transform: rotateY(0deg);\n}\n\n.carta .trasera {\n  background-color: white;\n  transform: rotateY(180deg);\n}\n\n.carta.volteada .frontal {\n  transform: rotateY(180deg);\n}\n\n.carta.volteada .trasera {\n  transform: rotateY(0deg);\n}\n\n.carta.encontrada {\n  opacity: 0.5;\n  cursor: default;\n}\n\n.mensaje-final {\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #e8f5e9;\n  border-radius: 8px;\n  animation: aparecer 0.5s ease-out;\n}\n\n@keyframes aparecer {\n  from { opacity: 0; transform: translateY(20px); }\n  to { opacity: 1; transform: translateY(0); }\n}\n\n/* Responsive */\n@media (max-width: 600px) {\n  .tablero {\n    grid-template-columns: repeat(3, 1fr);\n  }\n\n  .carta .cara {\n    font-size: 2em;\n  }\n\n  .controles {\n    flex-direction: column;\n  }\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"fundamentos/eventos/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfCu\u00e1l es la diferencia entre <code>v-on:click</code> y <code>@click</code>?</li> <li>\u00bfPara qu\u00e9 sirve el modificador <code>.prevent</code> en un evento de formulario?</li> <li>\u00bfC\u00f3mo evitar\u00edas que un evento se propague a elementos padres?</li> <li>\u00bfQu\u00e9 es el objeto <code>$event</code> en Vue y cu\u00e1ndo es \u00fatil?</li> <li>\u00bfC\u00f3mo manejar\u00edas la combinaci\u00f3n de teclas como Ctrl+Clic?</li> </ol>"},{"location":"fundamentos/eventos/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n oficial de Manejo de Eventos</li> <li>Gu\u00eda de Modificadores de Eventos</li> <li>Eventos de Teclado en Vue</li> </ul>"},{"location":"fundamentos/eventos/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido sobre el manejo de eventos, el siguiente paso es explorar el ciclo de vida de los componentes en Vue.</p> <p>Siguiente: Ciclo de Vida de la Instancia \u2192</p>"},{"location":"fundamentos/interpolacion/","title":"2.1 Interpolaci\u00f3n y Directivas B\u00e1sicas","text":""},{"location":"fundamentos/interpolacion/#interpolacion-de-texto","title":"Interpolaci\u00f3n de Texto","text":"<p>La forma m\u00e1s b\u00e1sica de enlazar datos es usando la sintaxis de interpolaci\u00f3n de texto (llamada \"Mustache\" por las llaves <code>{{ }}</code>):</p> <pre><code>&lt;div id=\"app\"&gt;\n  &lt;p&gt;Mensaje: {{ mensaje }}&lt;/p&gt;\n  &lt;p&gt;Resultado: {{ numero * 2 }}&lt;/p&gt;\n  &lt;p&gt;\u00bfEs mayor de edad? {{ edad &gt;= 18 ? 'S\u00ed' : 'No' }}&lt;/p&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nconst { createApp, ref } = Vue;\n\ncreateApp({\n  setup() {\n    return {\n      mensaje: 'Hola Vue!',\n      numero: 5,\n      edad: 20\n    };\n  }\n}).mount('#app');\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/interpolacion/#directiva-v-text","title":"Directiva v-text","text":"<p>Alternativa a la interpolaci\u00f3n <code>{{ }}</code>:</p> <pre><code>&lt;p v-text=\"'Hola ' + nombre\"&gt;&lt;/p&gt;\n</code></pre>"},{"location":"fundamentos/interpolacion/#directiva-v-html","title":"Directiva v-html","text":"<p>Para insertar HTML sin escapar:</p> <pre><code>&lt;div v-html=\"htmlEnBruto\"&gt;&lt;/div&gt;\n\n&lt;script&gt;\n// En el setup:\nconst htmlEnBruto = ref('&lt;span style=\"color: red\"&gt;Texto en rojo&lt;/span&gt;');\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/interpolacion/#directiva-v-bind","title":"Directiva v-bind","text":"<p>Para enlazar atributos HTML:</p> <pre><code>&lt;div v-bind:class=\"{ activo: esActivo }\"&gt;\n  Contenido din\u00e1mico\n&lt;/div&gt;\n\n&lt;!-- Forma abreviada con : --&gt;\n&lt;img :src=\"urlImagen\" :alt=\"textoAlternativo\"&gt;\n</code></pre>"},{"location":"fundamentos/interpolacion/#ejercicio-practico","title":"Ejercicio Pr\u00e1ctico","text":"<p>Crea un componente que muestre una tarjeta de perfil con: 1. Nombre y apellido interpolados 2. Una imagen con v-bind 3. Una descripci\u00f3n que acepte HTML 4. Un indicador de estado (activo/inactivo)</p> <pre><code>&lt;div id=\"app\"&gt;\n  &lt;div class=\"perfil\" :class=\"{ 'activo': usuario.activo }\"&gt;\n    &lt;img :src=\"usuario.foto\" :alt=\"'Foto de ' + usuario.nombre\"&gt;\n    &lt;h2&gt;{{ usuario.nombre }} {{ usuario.apellido }}&lt;/h2&gt;\n    &lt;div v-html=\"usuario.descripcion\"&gt;&lt;/div&gt;\n    &lt;p&gt;Estado: {{ usuario.activo ? 'Activo' : 'Inactivo' }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nconst { createApp, ref } = Vue;\n\ncreateApp({\n  setup() {\n    const usuario = ref({\n      nombre: 'Ana',\n      apellido: 'Garc\u00eda',\n      foto: 'https://via.placeholder.com/150',\n      descripcion: 'Desarrolladora &lt;strong&gt;frontend&lt;/strong&gt; con experiencia en Vue',\n      activo: true\n    });\n\n    return { usuario };\n  }\n}).mount('#app');\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/interpolacion/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfCu\u00e1l es la diferencia entre <code>{{ }}</code> y <code>v-text</code>?</li> <li>\u00bfPor qu\u00e9 es importante usar <code>v-html</code> con precauci\u00f3n?</li> <li>\u00bfQu\u00e9 ventaja tiene usar la forma abreviada <code>:</code> para <code>v-bind</code>?</li> </ol> <p>En la siguiente secci\u00f3n veremos <code>v-model</code> para formularios.</p> <p>Siguiente: V-bind y V-model \u2192</p>"},{"location":"fundamentos/introduccion/","title":"Introduccion","text":""},{"location":"fundamentos/introduccion/#configuracion-inicial-de-un-proyecto-vue-3","title":"Configuraci\u00f3n Inicial de un Proyecto Vue 3","text":""},{"location":"fundamentos/introduccion/#paso-1-crear-un-nuevo-proyecto","title":"Paso 1: Crear un Nuevo Proyecto","text":"<p>Para crear un nuevo proyecto con Vue 3, utiliza el siguiente comando en tu terminal:</p> <pre><code>npm create vue@latest\n</code></pre> <p>Este comando te guiar\u00e1 a trav\u00e9s de una serie de preguntas para configurar tu proyecto. Puedes elegir las opciones que mejor se adapten a tus necesidades.</p>"},{"location":"fundamentos/introduccion/#paso-2-navegar-al-directorio-del-proyecto","title":"Paso 2: Navegar al Directorio del Proyecto","text":"<p>Despu\u00e9s de crear el proyecto, navega al directorio del proyecto:</p> <pre><code>cd nombre-del-proyecto\n</code></pre>"},{"location":"fundamentos/introduccion/#paso-3-instalar-dependencias","title":"Paso 3: Instalar Dependencias","text":"<p>Instala las dependencias necesarias ejecutando:</p> <pre><code>npm install\n</code></pre>"},{"location":"fundamentos/introduccion/#paso-4-iniciar-el-servidor-de-desarrollo","title":"Paso 4: Iniciar el Servidor de Desarrollo","text":"<p>Para ver tu proyecto en acci\u00f3n, inicia el servidor de desarrollo con el siguiente comando:</p> <pre><code>npm run dev\n</code></pre> <p>Esto abrir\u00e1 tu aplicaci\u00f3n en el navegador, generalmente en <code>http://localhost:3000</code>.</p>"},{"location":"fundamentos/introduccion/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<p>Una vez creado el proyecto, la estructura de directorios ser\u00e1 similar a la siguiente:</p> <pre><code>nombre-del-proyecto/\n\u251c\u2500\u2500 node_modules/\n\u251c\u2500\u2500 public/\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u2514\u2500\u2500 index.html\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 assets/\n\u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u2514\u2500\u2500 HelloWorld.vue\n\u2502   \u251c\u2500\u2500 views/\n\u2502   \u2502   \u2514\u2500\u2500 Home.vue\n\u2502   \u251c\u2500\u2500 App.vue\n\u2502   \u251c\u2500\u2500 main.js\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 package.json\n\u251c\u2500\u2500 README.md\n\u2514\u2500\u2500 vite.config.js\n</code></pre>"},{"location":"fundamentos/introduccion/#descripcion-de-los-directorios-y-archivos-principales","title":"Descripci\u00f3n de los Directorios y Archivos Principales","text":"<ul> <li><code>node_modules/</code>: Contiene todas las dependencias del proyecto.</li> <li><code>public/</code>: Archivos est\u00e1ticos que se sirven directamente, como <code>index.html</code>.</li> <li><code>src/</code>: Contiene el c\u00f3digo fuente de la aplicaci\u00f3n.<ul> <li><code>assets/</code>: Archivos est\u00e1ticos como im\u00e1genes y estilos.</li> <li><code>components/</code>: Componentes Vue reutilizables.</li> <li><code>views/</code>: Vistas de la aplicaci\u00f3n, generalmente utilizadas con Vue Router.</li> <li><code>App.vue</code>: Componente ra\u00edz de la aplicaci\u00f3n.</li> <li><code>main.js</code>: Punto de entrada de la aplicaci\u00f3n donde se inicializa Vue.</li> </ul> </li> <li><code>.gitignore</code>: Archivos y directorios que Git debe ignorar.</li> <li><code>package.json</code>: Informaci\u00f3n del proyecto y dependencias.</li> <li><code>README.md</code>: Documentaci\u00f3n del proyecto.</li> <li><code>vite.config.js</code>: Configuraci\u00f3n para Vite, el nuevo bundler recomendado para Vue 3.</li> </ul> <p>Con esta configuraci\u00f3n inicial, ya tienes un proyecto Vue 3 listo para empezar a desarrollar. \u00bfTe gustar\u00eda profundizar en alg\u00fan aspecto espec\u00edfico de la configuraci\u00f3n o estructura del proyecto?</p>"},{"location":"fundamentos/propiedades-computadas/","title":"2.4 Propiedades Computadas","text":"<p>Las propiedades computadas son valores que se calculan autom\u00e1ticamente basados en otras propiedades reactivas. Son ideales para realizar operaciones complejas o filtrar datos de manera eficiente.</p>"},{"location":"fundamentos/propiedades-computadas/#conceptos-basicos","title":"Conceptos B\u00e1sicos","text":""},{"location":"fundamentos/propiedades-computadas/#que-es-una-propiedad-computada","title":"\u00bfQu\u00e9 es una propiedad computada?","text":"<p>Una propiedad computada es una funci\u00f3n que devuelve un valor basado en otras propiedades reactivas. Vue se encarga autom\u00e1ticamente de rastrear sus dependencias y volver a calcular el valor cuando sea necesario.</p>"},{"location":"fundamentos/propiedades-computadas/#sintaxis-basica","title":"Sintaxis B\u00e1sica","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;Nombre completo: {{ nombreCompleto }}&lt;/p&gt;\n    &lt;p&gt;Nombre en may\u00fasculas: {{ nombreEnMayusculas }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed } from 'vue';\n\nconst nombre = ref('Ana');\nconst apellido = ref('Garc\u00eda');\n\n// Propiedad computada b\u00e1sica\nconst nombreCompleto = computed(() =&gt; {\n  return `${nombre.value} ${apellido.value}`;\n});\n\n// Propiedad computada que depende de otra propiedad computada\nconst nombreEnMayusculas = computed(() =&gt; {\n  return nombreCompleto.value.toUpperCase();\n});\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-computadas/#caracteristicas-principales","title":"Caracter\u00edsticas Principales","text":""},{"location":"fundamentos/propiedades-computadas/#1-cache-automatico","title":"1. Cach\u00e9 Autom\u00e1tico","text":"<p>Las propiedades computadas almacenan en cach\u00e9 sus resultados y solo se vuelven a calcular cuando alguna de sus dependencias reactivas cambia.</p> <p>Ejemplo de cach\u00e9:</p> <pre><code>const ahora = computed(() =&gt; {\n  // Esta propiedad se recalcular\u00e1 solo cuando se acceda a ella\n  // y alguna de sus dependencias haya cambiado\n  return new Date().toLocaleTimeString();\n});\n</code></pre>"},{"location":"fundamentos/propiedades-computadas/#2-propiedades-computadas-de-solo-lectura","title":"2. Propiedades Computadas de Solo Lectura","text":"<p>Por defecto, las propiedades computadas son de solo lectura. Si necesitas una propiedad computada escribible, puedes proporcionar un getter y un setter.</p> <pre><code>const nombreCompleto = computed({\n  // getter\n  get() {\n    return `${nombre.value} ${apellido.value}`;\n  },\n  // setter\n  set(nuevoValor) {\n    const [nuevoNombre, ...apellidos] = nuevoValor.split(' ');\n    nombre.value = nuevoNombre;\n    apellido.value = apellidos.join(' ');\n  }\n});\n\n// Ahora puedes hacer:\n// nombreCompleto.value = 'Carlos Ruiz Zaf\u00f3n';\n</code></pre>"},{"location":"fundamentos/propiedades-computadas/#3-buenas-practicas","title":"3. Buenas Pr\u00e1cticas","text":"<ol> <li> <p>Evitar efectos secundarios: Las propiedades computadas no deben tener efectos secundarios. No hagas peticiones as\u00edncronas ni modifiques el DOM dentro de ellas.</p> </li> <li> <p>No modificar datos: No modifiques el estado dentro de una propiedad computada. Usa m\u00e9todos o watchers para eso.</p> </li> <li> <p>Mant\u00e9n la simplicidad: Si una propiedad computada se vuelve demasiado compleja, considera dividirla en propiedades computadas m\u00e1s peque\u00f1as.</p> </li> </ol>"},{"location":"fundamentos/propiedades-computadas/#ejemplo-practico-carrito-de-compras","title":"Ejemplo Pr\u00e1ctico: Carrito de Compras","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"carrito\"&gt;\n    &lt;h2&gt;Carrito de Compras&lt;/h2&gt;\n\n    &lt;div v-for=\"item in items\" :key=\"item.id\" class=\"item\"&gt;\n      &lt;span&gt;{{ item.nombre }}&lt;/span&gt;\n      &lt;input \n        type=\"number\" \n        v-model.number=\"item.cantidad\" \n        min=\"1\"\n        @change=\"actualizarCantidad(item)\"\n      &gt;\n      &lt;span&gt;{{ formatPrecio(item.precio * item.cantidad) }}&lt;/span&gt;\n      &lt;button @click=\"eliminarItem(item.id)\"&gt;\ud83d\uddd1\ufe0f&lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;div class=\"totales\"&gt;\n      &lt;p&gt;Subtotal: {{ formatPrecio(subtotal) }}&lt;/p&gt;\n      &lt;p&gt;IVA (21%): {{ formatPrecio(iva) }}&lt;/p&gt;\n      &lt;p class=\"total\"&gt;Total: {{ formatPrecio(total) }}&lt;/p&gt;\n    &lt;/div&gt;\n\n    &lt;div v-if=\"ofertaEspecial\" class=\"oferta\"&gt;\n      \ud83c\udf89 \u00a1Enhorabuena! Tienes un descuento especial de {{ descuento * 100 }}%\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed } from 'vue';\n\n// Datos del carrito\nconst items = ref([\n  { id: 1, nombre: 'Camiseta Vue.js', precio: 24.99, cantidad: 2 },\n  { id: 2, nombre: 'Libro de Vue 3', precio: 39.99, cantidad: 1 },\n  { id: 3, nombre: 'Taza de caf\u00e9', precio: 12.99, cantidad: 3 },\n]);\n\nconst ivaPorcentaje = 0.21;\n\n// Propiedades computadas\nconst subtotal = computed(() =&gt; {\n  return items.value.reduce((total, item) =&gt; {\n    return total + (item.precio * item.cantidad);\n  }, 0);\n});\n\nconst iva = computed(() =&gt; {\n  return subtotal.value * ivaPorcentaje;\n});\n\nconst total = computed(() =&gt; {\n  return subtotal.value + iva.value - descuentoAplicado.value;\n});\n\nconst cantidadTotal = computed(() =&gt; {\n  return items.value.reduce((total, item) =&gt; total + item.cantidad, 0);\n});\n\nconst ofertaEspecial = computed(() =&gt; {\n  return cantidadTotal.value &gt;= 5;\n});\n\nconst descuento = computed(() =&gt; {\n  return ofertaEspecial.value ? 0.15 : 0;\n});\n\nconst descuentoAplicado = computed(() =&gt; {\n  return subtotal.value * descuento.value;\n});\n\n// M\u00e9todos\nfunction formatPrecio(valor) {\n  return `$${valor.toFixed(2)}`;\n}\n\nfunction eliminarItem(id) {\n  items.value = items.value.filter(item =&gt; item.id !== id);\n}\n\nfunction actualizarCantidad(item) {\n  if (item.cantidad &lt; 1) {\n    item.cantidad = 1;\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.carrito {\n  max-width: 600px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\n.item {\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 10px;\n  margin: 10px 0;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n}\n\n.item input {\n  width: 60px;\n  padding: 5px;\n  text-align: center;\n}\n\n.totales {\n  margin-top: 20px;\n  padding: 15px;\n  background-color: #f0f8ff;\n  border-radius: 4px;\n}\n\n.total {\n  font-size: 1.2em;\n  font-weight: bold;\n  margin-top: 10px;\n  padding-top: 10px;\n  border-top: 1px solid #ccc;\n}\n\n.oferta {\n  margin-top: 15px;\n  padding: 10px;\n  background-color: #e6f7e6;\n  color: #2e7d32;\n  border-radius: 4px;\n  text-align: center;\n  font-weight: bold;\n}\n\nbutton {\n  background-color: #ff4444;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  padding: 5px 10px;\n  cursor: pointer;\n}\n\nbutton:hover {\n  background-color: #cc0000;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-computadas/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfCu\u00e1l es la principal diferencia entre un m\u00e9todo y una propiedad computada?</li> <li>\u00bfCu\u00e1ndo se vuelve a calcular una propiedad computada?</li> <li>\u00bfPor qu\u00e9 es importante que las propiedades computadas no tengan efectos secundarios?</li> <li>\u00bfC\u00f3mo crear\u00edas una propiedad computada escribible?</li> <li>\u00bfQu\u00e9 ventaja tiene el cach\u00e9 de las propiedades computadas?</li> </ol>"},{"location":"fundamentos/propiedades-computadas/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n oficial de Propiedades Computadas</li> <li>Gu\u00eda de Reactividad en Profundidad</li> <li>Vue Mastery: Propiedades Computadas</li> </ul>"},{"location":"fundamentos/propiedades-computadas/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido sobre las propiedades computadas, el siguiente paso es aprender sobre el manejo de eventos en Vue.</p> <p>Siguiente: Manejo de Eventos \u2192</p>"},{"location":"fundamentos/propiedades-eventos/","title":"2.3 Propiedades Computadas y Manejo de Eventos","text":""},{"location":"fundamentos/propiedades-eventos/#propiedades-computadas","title":"Propiedades Computadas","text":"<p>Las propiedades computadas son valores que se calculan autom\u00e1ticamente basados en otras propiedades reactivas. Son ideales para realizar operaciones complejas o filtrar datos.</p>"},{"location":"fundamentos/propiedades-eventos/#ejemplo-basico","title":"Ejemplo B\u00e1sico","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;p&gt;Nombre completo: {{ nombreCompleto }}&lt;/p&gt;\n    &lt;p&gt;Nombre en may\u00fasculas: {{ nombreEnMayusculas }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed } from 'vue';\n\nconst nombre = ref('Ana');\nconst apellido = ref('Garc\u00eda');\n\n// Propiedad computada\nconst nombreCompleto = computed(() =&gt; {\n  return `${nombre.value} ${apellido.value}`;\n});\n\n// Otra propiedad computada\nconst nombreEnMayusculas = computed(() =&gt; {\n  return nombreCompleto.value.toUpperCase();\n});\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-eventos/#caracteristicas-importantes","title":"Caracter\u00edsticas importantes:","text":"<ol> <li>Cach\u00e9 autom\u00e1tico: Las propiedades computadas se almacenan en cach\u00e9 y solo se vuelven a calcular cuando sus dependencias cambian.</li> <li>Reactividad: Son reactivas, lo que significa que la interfaz se actualiza autom\u00e1ticamente cuando cambian sus dependencias.</li> <li>Solo lectura: Por defecto, las propiedades computadas son de solo lectura. Para crear una propiedad computada escribible, puedes proporcionar un getter y un setter.</li> </ol>"},{"location":"fundamentos/propiedades-eventos/#propiedades-computadas-vs-metodos","title":"Propiedades computadas vs M\u00e9todos","text":"Caracter\u00edstica Propiedad Computada M\u00e9todo Cach\u00e9 S\u00ed, se almacena el resultado No, se ejecuta cada vez Uso en plantilla Sin par\u00e9ntesis Con par\u00e9ntesis Reactividad Reactiva a sus dependencias Se ejecuta en cada renderizado"},{"location":"fundamentos/propiedades-eventos/#manejo-de-eventos","title":"Manejo de Eventos","text":"<p>Vue proporciona la directiva <code>v-on</code> (o <code>@</code> como atajo) para escuchar eventos del DOM.</p>"},{"location":"fundamentos/propiedades-eventos/#eventos-basicos","title":"Eventos B\u00e1sicos","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;button @click=\"contador++\"&gt;Incrementar ({{ contador }})&lt;/button&gt;\n    &lt;button @click=\"saludar\"&gt;Saludar&lt;/button&gt;\n    &lt;button @dblclick=\"contador = 0\"&gt;Reiniciar (doble clic)&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue';\n\nconst contador = ref(0);\nconst mensaje = ref('\u00a1Hola Vue!');\n\nfunction saludar() {\n  alert(mensaje.value);\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-eventos/#modificadores-de-eventos","title":"Modificadores de Eventos","text":"<p>Vue proporciona modificadores de eventos para tareas comunes:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;!-- El evento submit ya no recargar\u00e1 la p\u00e1gina --&gt;\n    &lt;form @submit.prevent=\"enviarFormulario\"&gt;\n      &lt;input type=\"text\" v-model=\"usuario\"&gt;\n      &lt;button type=\"submit\"&gt;Enviar&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;!-- Solo se activa con la tecla Enter --&gt;\n    &lt;input @keyup.enter=\"buscar\" placeholder=\"Presiona Enter\"&gt;\n\n    &lt;!-- Solo se activa con Ctrl + clic --&gt;\n    &lt;div @click.ctrl=\"accionCtrlClic\"&gt;Haz Ctrl + clic aqu\u00ed&lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue';\n\nconst usuario = ref('');\n\nfunction enviarFormulario() {\n  alert(`Formulario enviado: ${usuario.value}`);\n}\n\nfunction buscar() {\n  alert(`Buscando: ${usuario.value}`);\n}\n\nfunction accionCtrlClic() {\n  alert('\u00a1Control + Clic detectado!');\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-eventos/#objeto-de-evento-nativo","title":"Objeto de Evento Nativo","text":"<p>Puedes acceder al evento nativo del DOM usando la variable especial <code>$event</code> o usando una funci\u00f3n flecha:</p> <pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;!-- Usando $event --&gt;\n    &lt;button @click=\"mostrarMensaje('Hola', $event)\"&gt;Saludar 1&lt;/button&gt;\n\n    &lt;!-- Usando funci\u00f3n flecha --&gt;\n    &lt;button @click=\"(event) =&gt; mostrarMensaje('Hola', event)\"&gt;Saludar 2&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nfunction mostrarMensaje(mensaje, event) {\n  console.log(event.target.tagName); // Muestra \"BUTTON\"\n  alert(mensaje);\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-eventos/#ejercicio-practico-lista-de-tareas","title":"Ejercicio Pr\u00e1ctico: Lista de Tareas","text":"<p>Vamos a crear una lista de tareas que combine propiedades computadas y manejo de eventos:</p> <pre><code>&lt;template&gt;\n  &lt;div class=\"todo-app\"&gt;\n    &lt;h1&gt;Lista de Tareas&lt;/h1&gt;\n\n    &lt;!-- Formulario para a\u00f1adir tareas --&gt;\n    &lt;form @submit.prevent=\"agregarTarea\"&gt;\n      &lt;input \n        v-model=\"nuevaTarea\" \n        @keyup.enter=\"agregarTarea\"\n        placeholder=\"Nueva tarea...\"\n        required\n      &gt;\n      &lt;button type=\"submit\"&gt;A\u00f1adir&lt;/button&gt;\n    &lt;/form&gt;\n\n    &lt;!-- Filtros --&gt;\n    &lt;div class=\"filtros\"&gt;\n      &lt;button \n        v-for=\"filtro in filtros\" \n        :key=\"filtro\"\n        @click=\"filtroActual = filtro\"\n        :class=\"{ activo: filtroActual === filtro }\"\n      &gt;\n        {{ filtro }}\n      &lt;/button&gt;\n    &lt;/div&gt;\n\n    &lt;!-- Lista de tareas --&gt;\n    &lt;ul v-if=\"tareasFiltradas.length &gt; 0\"&gt;\n      &lt;li v-for=\"(tarea, index) in tareasFiltradas\" :key=\"index\"&gt;\n        &lt;input \n          type=\"checkbox\" \n          v-model=\"tarea.completada\"\n          @change=\"actualizarTarea(tarea)\"\n        &gt;\n        &lt;span :class=\"{ 'completada': tarea.completada }\"&gt;\n          {{ tarea.texto }}\n        &lt;/span&gt;\n        &lt;button @click=\"eliminarTarea(index)\"&gt;\ud83d\uddd1\ufe0f&lt;/button&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;p v-else&gt;No hay tareas para mostrar&lt;/p&gt;\n\n    &lt;!-- Contador --&gt;\n    &lt;div class=\"contadores\"&gt;\n      &lt;p&gt;Total: {{ totalTareas }}&lt;/p&gt;\n      &lt;p&gt;Pendientes: {{ tareasPendientes.length }}&lt;/p&gt;\n      &lt;p&gt;Completadas: {{ tareasCompletadas.length }}&lt;/p&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref, computed } from 'vue';\n\n// Datos reactivos\nconst nuevaTarea = ref('');\nconst tareas = ref([\n  { id: 1, texto: 'Aprender Vue 3', completada: true },\n  { id: 2, texto: 'Crear una aplicaci\u00f3n', completada: false },\n  { id: 3, texto: 'Desplegar en producci\u00f3n', completada: false },\n]);\n\nconst filtroActual = ref('Todas');\nconst filtros = ['Todas', 'Pendientes', 'Completadas'];\n\n// Propiedades computadas\nconst tareasPendientes = computed(() =&gt; {\n  return tareas.value.filter(t =&gt; !t.completada);\n});\n\nconst tareasCompletadas = computed(() =&gt; {\n  return tareas.value.filter(t =&gt; t.completada);\n});\n\nconst totalTareas = computed(() =&gt; tareas.value.length);\n\nconst tareasFiltradas = computed(() =&gt; {\n  if (filtroActual.value === 'Pendientes') {\n    return tareasPendientes.value;\n  } else if (filtroActual.value === 'Completadas') {\n    return tareasCompletadas.value;\n  }\n  return tareas.value;\n});\n\n// M\u00e9todos\nfunction agregarTarea() {\n  if (nuevaTarea.value.trim() === '') return;\n\n  tareas.value.push({\n    id: Date.now(),\n    texto: nuevaTarea.value.trim(),\n    completada: false\n  });\n\n  nuevaTarea.value = '';\n}\n\nfunction eliminarTarea(index) {\n  tareas.value.splice(index, 1);\n}\n\nfunction actualizarTarea(tarea) {\n  console.log(`Tarea \"${tarea.texto}\" actualizada:`, tarea.completada ? 'Completada' : 'Pendiente');\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.todo-app {\n  max-width: 500px;\n  margin: 0 auto;\n  padding: 20px;\n  font-family: Arial, sans-serif;\n}\n\ninput[type=\"text\"] {\n  padding: 8px;\n  width: 60%;\n  margin-right: 10px;\n}\n\nbutton {\n  padding: 8px 16px;\n  background-color: #42b983;\n  color: white;\n  border: none;\n  border-radius: 4px;\n  cursor: pointer;\n  margin: 2px;\n}\n\nbutton:hover {\n  background-color: #369f6b;\n}\n\n.filtros {\n  margin: 15px 0;\n}\n\n.filtros button {\n  background-color: #f0f0f0;\n  color: #333;\n}\n\n.filtros button.activo {\n  background-color: #42b983;\n  color: white;\n}\n\nul {\n  list-style: none;\n  padding: 0;\n}\n\nli {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  margin: 5px 0;\n  background-color: #f9f9f9;\n  border-radius: 4px;\n}\n\nli span {\n  flex-grow: 1;\n  margin: 0 10px;\n}\n\nli span.completada {\n  text-decoration: line-through;\n  color: #888;\n}\n\n.contadores {\n  margin-top: 20px;\n  display: flex;\n  justify-content: space-between;\n  color: #666;\n  font-size: 0.9em;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"fundamentos/propiedades-eventos/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfQu\u00e9 ventaja tienen las propiedades computadas sobre los m\u00e9todos cuando se usan en plantillas?</li> <li>\u00bfC\u00f3mo evitar\u00edas que un formulario recargue la p\u00e1gina al enviarse?</li> <li>\u00bfQu\u00e9 hace el modificador <code>.prevent</code> en un evento?</li> <li>\u00bfC\u00f3mo crear\u00edas una propiedad computada que dependa de otra propiedad computada?</li> <li>\u00bfQu\u00e9 diferencia hay entre <code>@click=\"metodo\"</code> y <code>@click=\"metodo()\"</code>?</li> </ol>"},{"location":"fundamentos/propiedades-eventos/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n de Propiedades Computadas</li> <li>Gu\u00eda de Manejo de Eventos</li> <li>Modificadores de Eventos</li> </ul>"},{"location":"fundamentos/reactividad/","title":"\ud83d\udd04 Reactividad en Vue 3","text":"<p>La reactividad es uno de los conceptos m\u00e1s poderosos de Vue. Es el sistema que permite a Vue rastrear cambios en los datos y actualizar autom\u00e1ticamente la vista cuando estos cambian.</p>"},{"location":"fundamentos/reactividad/#fundamentos-de-la-reactividad","title":"Fundamentos de la Reactividad","text":"<p>En Vue 3, la reactividad se ha redise\u00f1ado completamente utilizando los Proxies de JavaScript, lo que proporciona un mejor rendimiento y m\u00e1s capacidades.</p>"},{"location":"fundamentos/reactividad/#ref","title":"<code>ref()</code>","text":"<p><code>ref</code> se utiliza para crear una referencia reactiva a un valor primitivo o a un objeto:</p> <pre><code>import { ref } from 'vue'\n\nconst count = ref(0)\n\nconsole.log(count.value) // 0\n\ncount.value++\nconsole.log(count.value) // 1\n</code></pre>"},{"location":"fundamentos/reactividad/#reactive","title":"<code>reactive()</code>","text":"<p><code>reactive</code> crea un objeto reactivo. A diferencia de <code>ref</code>, no es necesario usar <code>.value</code> para acceder a sus propiedades:</p> <pre><code>import { reactive } from 'vue'\n\nconst state = reactive({\n  count: 0,\n  name: 'Vue 3'\n})\n\nconsole.log(state.count) // 0\nstate.count++\n</code></pre>"},{"location":"fundamentos/reactividad/#ref-vs-reactive","title":"<code>ref</code> vs <code>reactive</code>","text":"Caracter\u00edstica <code>ref</code> <code>reactive</code> Tipo de datos Cualquier tipo Solo objetos Acceso a valores Requiere <code>.value</code> Acceso directo Reactividad Reactivo en <code>.value</code> Reactivo en propiedades Reemplazo de objeto Se puede reemplazar No se puede reemplazar directamente"},{"location":"fundamentos/reactividad/#desestructuracion-reactiva","title":"Desestructuraci\u00f3n Reactiva","text":"<p>Al desestructurar un objeto reactivo, se pierde la reactividad. Para mantenerla, usa <code>toRefs</code>:</p> <pre><code>import { reactive, toRefs } from 'vue'\n\nconst state = reactive({\n  count: 0,\n  name: 'Vue 3'\n})\n\n// \u274c Pierde reactividad\nconst { count, name } = state\n\n// \u2705 Mantiene la reactividad\nconst { count, name } = toRefs(state)\n</code></pre>"},{"location":"fundamentos/reactividad/#computed","title":"<code>computed</code>","text":"<p>Las propiedades computadas te permiten declarar valores que dependen de otros valores de forma reactiva:</p> <pre><code>import { ref, computed } from 'vue'\n\nconst count = ref(0)\nconst doubleCount = computed(() =&gt; count.value * 2)\n\nconsole.log(doubleCount.value) // 0\ncount.value++\nconsole.log(doubleCount.value) // 2\n</code></pre>"},{"location":"fundamentos/reactividad/#watch-y-watcheffect","title":"<code>watch</code> y <code>watchEffect</code>","text":""},{"location":"fundamentos/reactividad/#watch","title":"<code>watch</code>","text":"<p>Observa una o varias fuentes de datos reactivas y ejecuta una funci\u00f3n de devoluci\u00f3n de llamada cuando cambian:</p> <pre><code>import { ref, watch } from 'vue'\n\nconst count = ref(0)\n\nconst name = ref('Vue')\n\nwatch(count, (newValue, oldValue) =&gt; {\n  console.log(`count cambi\u00f3 de ${oldValue} a ${newValue}`)\n})\n\n// Observar m\u00faltiples fuentes\nwatch([count, name], ([newCount, newName], [oldCount, oldName]) =&gt; {\n  console.log('count o name cambiaron')\n})\n</code></pre>"},{"location":"fundamentos/reactividad/#watcheffect","title":"<code>watchEffect</code>","text":"<p>Ejecuta un efecto que rastrea autom\u00e1ticamente sus dependencias reactivas y las vuelve a ejecutar cuando cambian:</p> <pre><code>import { ref, watchEffect } from 'vue'\n\nconst count = ref(0)\n\nconst doubleCount = ref(0)\n\n\nwatchEffect(() =&gt; {\n  doubleCount.value = count.value * 2\n  console.log(`El doble es: ${doubleCount.value}`)\n})\n\ncount.value++ // Registra: \"El doble es: 2\"\n</code></pre>"},{"location":"fundamentos/reactividad/#reactividad-avanzada","title":"Reactividad Avanzada","text":""},{"location":"fundamentos/reactividad/#shallowref-y-shallowreactive","title":"<code>shallowRef</code> y <code>shallowReactive</code>","text":"<p>Versiones de <code>ref</code> y <code>reactive</code> que no realizan un seguimiento profundo de los cambios:</p> <pre><code>import { shallowRef, shallowReactive } from 'vue'\n\nconst state = shallowReactive({\n  nested: {\n    count: 0 // No es reactivo\n  }\n})\n\nconst shallowCount = shallowRef({ count: 0 })\n</code></pre>"},{"location":"fundamentos/reactividad/#readonly","title":"<code>readonly</code>","text":"<p>Crea un proxy de solo lectura para un objeto reactivo o ref:</p> <pre><code>import { reactive, readonly } from 'vue'\n\nconst original = reactive({ count: 0 })\nconst copy = readonly(original)\n\n// Advertencia: No se puede modificar una propiedad de solo lectura\ncopy.count++\n</code></pre>"},{"location":"fundamentos/reactividad/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<p>Ahora que entiendes los fundamentos de la reactividad en Vue 3, est\u00e1s listo para aprender sobre la creaci\u00f3n y composici\u00f3n de componentes.</p> <p>\ud83d\udc49 Siguiente: Creaci\u00f3n de Componentes</p>"},{"location":"fundamentos/sintaxis-plantillas/","title":"\ud83d\udcdd Sintaxis de Plantillas en Vue 3","text":"<p>La sintaxis de plantillas de Vue es una extensi\u00f3n del HTML que te permite vincular de forma declarativa el DOM renderizado con los datos de la instancia de Vue. Todas las plantillas de Vue son HTML v\u00e1lido que puede ser analizado por navegadores y analizadores HTML compatibles con las especificaciones.</p>"},{"location":"fundamentos/sintaxis-plantillas/#interpolacion-de-texto","title":"Interpolaci\u00f3n de Texto","text":"<p>La forma m\u00e1s b\u00e1sica de vinculaci\u00f3n de datos es la interpolaci\u00f3n de texto usando la sintaxis de doble llave (tambi\u00e9n conocida como \"Mustache\"):</p> <pre><code>&lt;span&gt;Mensaje: {{ msg }}&lt;/span&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#directivas","title":"Directivas","text":"<p>Las directivas son atributos especiales con el prefijo <code>v-</code>. Proporcionan efectos secundarios en el DOM cuando cambia el valor de su expresi\u00f3n.</p>"},{"location":"fundamentos/sintaxis-plantillas/#v-bind","title":"v-bind","text":"<p>Vincula din\u00e1micamente uno o m\u00e1s atributos o propiedades de un componente:</p> <pre><code>&lt;div v-bind:id=\"dynamicId\"&gt;&lt;/div&gt;\n&lt;!-- Forma abreviada --&gt;\n&lt;div :id=\"dynamicId\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#v-model","title":"v-model","text":"<p>Crea un enlace bidireccional en un elemento de formulario o un componente:</p> <pre><code>&lt;input v-model=\"message\" placeholder=\"Ed\u00edtame\"&gt;\n&lt;p&gt;El mensaje es: {{ message }}&lt;/p&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#v-if-v-else-if-v-else","title":"v-if, v-else-if, v-else","text":"<p>Renderiza condicionalmente un elemento basado en la veracidad del valor de la expresi\u00f3n:</p> <pre><code>&lt;div v-if=\"type === 'A'\"&gt;\n  A\n&lt;/div&gt;\n&lt;div v-else-if=\"type === 'B'\"&gt;\n  B\n&lt;/div&gt;\n&lt;div v-else&gt;\n  Ni A ni B\n&lt;/div&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#v-for","title":"v-for","text":"<p>Renderiza el elemento o bloque de plantilla m\u00faltiples veces seg\u00fan el origen de los datos:</p> <pre><code>&lt;ul&gt;\n  &lt;li v-for=\"item in items\" :key=\"item.id\"&gt;\n    {{ item.text }}\n  &lt;/li&gt;\n&lt;/ul&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#v-on","title":"v-on","text":"<p>Adjunta un detector de eventos al elemento:</p> <pre><code>&lt;button v-on:click=\"increment\"&gt;Incrementar&lt;/button&gt;\n&lt;!-- Forma abreviada --&gt;\n&lt;button @click=\"increment\"&gt;Incrementar&lt;/button&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#atributos-dinamicos","title":"Atributos Din\u00e1micos","text":"<p>Puedes usar una expresi\u00f3n de JavaScript en un argumento de directiva encerr\u00e1ndolo en corchetes:</p> <pre><code>&lt;button :[key]=\"value\"&gt;&lt;/button&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#expresiones-javascript","title":"Expresiones JavaScript","text":"<p>Dentro de todas las vinculaciones de datos, Vue.js admite expresiones JavaScript completas:</p> <pre><code>{{ number + 1 }}\n{{ ok ? 'S\u00cd' : 'NO' }}\n{{ message.split('').reverse().join('') }}\n&lt;div :id=\"'list-' + id\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#directivas-personalizadas","title":"Directivas Personalizadas","text":"<p>Puedes registrar directivas personalizadas para manipular directamente el DOM:</p> <pre><code>const app = Vue.createApp({})\n\napp.directive('highlight', {\n  beforeMount(el, binding) {\n    el.style.backgroundColor = binding.value || 'yellow'\n  }\n})\n</code></pre> <pre><code>&lt;p v-highlight=\"'red'\"&gt;\u00a1Este texto se resaltar\u00e1 en rojo!&lt;/p&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#componentes-dinamicos","title":"Componentes Din\u00e1micos","text":"<p>Puedes alternar din\u00e1micamente entre componentes usando el elemento <code>&lt;component&gt;</code> con el atributo <code>is</code>:</p> <pre><code>&lt;component :is=\"currentComponent\"&gt;&lt;/component&gt;\n</code></pre>"},{"location":"fundamentos/sintaxis-plantillas/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<p>Ahora que has aprendido sobre la sintaxis de plantillas de Vue, en la siguiente secci\u00f3n profundizaremos en el sistema de reactividad de Vue 3.</p> <p>\ud83d\udc49 Siguiente: Reactividad en Vue 3</p>"},{"location":"fundamentos/vbind-vmodel/","title":"2.2 v-bind y v-model","text":""},{"location":"fundamentos/vbind-vmodel/#v-bind-en-profundidad","title":"v-bind en profundidad","text":"<p>La directiva <code>v-bind</code> (o su forma abreviada <code>:</code>) nos permite enlazar din\u00e1micamente atributos HTML o propiedades de componentes.</p>"},{"location":"fundamentos/vbind-vmodel/#uso-basico","title":"Uso b\u00e1sico:","text":"<pre><code>&lt;!-- Sintaxis completa --&gt;\n&lt;a v-bind:href=\"url\"&gt;Enlace&lt;/a&gt;\n\n&lt;!-- Forma abreviada --&gt;\n&lt;a :href=\"url\"&gt;Enlace&lt;/a&gt;\n</code></pre>"},{"location":"fundamentos/vbind-vmodel/#enlazando-clases-y-estilos","title":"Enlazando clases y estilos:","text":"<pre><code>&lt;!-- Clases din\u00e1micas --&gt;\n&lt;div :class=\"{ activo: esActivo, 'texto-rojo': tieneError }\"&gt;&lt;/div&gt;\n\n&lt;!-- Estilos en l\u00ednea --&gt;\n&lt;div :style=\"{ color: colorTexto, fontSize: tamanoFuente + 'px' }\"&gt;&lt;/div&gt;\n</code></pre>"},{"location":"fundamentos/vbind-vmodel/#v-model-enlace-bidireccional","title":"v-model - Enlace bidireccional","text":"<p><code>v-model</code> crea un enlace bidireccional en elementos de formulario.</p>"},{"location":"fundamentos/vbind-vmodel/#con-inputs-basicos","title":"Con inputs b\u00e1sicos:","text":"<pre><code>&lt;div id=\"app\"&gt;\n  &lt;input v-model=\"mensaje\" placeholder=\"Escribe algo\"&gt;\n  &lt;p&gt;El mensaje es: {{ mensaje }}&lt;/p&gt;\n\n  &lt;select v-model=\"seleccionado\"&gt;\n    &lt;option disabled value=\"\"&gt;Selecciona una opci\u00f3n&lt;/option&gt;\n    &lt;option&gt;A&lt;/option&gt;\n    &lt;option&gt;B&lt;/option&gt;\n    &lt;option&gt;C&lt;/option&gt;\n  &lt;/select&gt;\n  &lt;p&gt;Seleccionaste: {{ seleccionado }}&lt;/p&gt;\n\n  &lt;input type=\"checkbox\" id=\"checkbox\" v-model=\"verificado\"&gt;\n  &lt;label for=\"checkbox\"&gt;{{ verificado ? 'Activado' : 'Desactivado' }}&lt;/label&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nconst { createApp, ref } = Vue;\n\ncreateApp({\n  setup() {\n    const mensaje = ref('');\n    const seleccionado = ref('');\n    const verificado = ref(false);\n\n    return { mensaje, seleccionado, verificado };\n  }\n}).mount('#app');\n&lt;/script&gt;\n</code></pre>"},{"location":"fundamentos/vbind-vmodel/#modificadores-de-v-model","title":"Modificadores de v-model:","text":"<ul> <li><code>.lazy</code>: Actualiza el valor despu\u00e9s del evento <code>change</code></li> <li><code>.number</code>: Convierte la entrada a n\u00famero</li> <li><code>.trim</code>: Elimina espacios en blanco al inicio y final</li> </ul> <pre><code>&lt;input v-model.lazy=\"mensaje\"&gt;\n&lt;input v-model.number=\"edad\" type=\"number\"&gt;\n&lt;input v-model.trim=\"nombre\"&gt;\n</code></pre>"},{"location":"fundamentos/vbind-vmodel/#ejercicio-practico-formulario-de-registro","title":"Ejercicio Pr\u00e1ctico: Formulario de Registro","text":"<p>Crea un formulario de registro con validaci\u00f3n b\u00e1sica:</p> <ol> <li>Nombre (obligatorio, m\u00ednimo 3 caracteres)</li> <li>Email (formato v\u00e1lido)</li> <li>Contrase\u00f1a (m\u00ednimo 6 caracteres)</li> <li>Confirmaci\u00f3n de contrase\u00f1a (debe coincidir)</li> <li>T\u00e9rminos y condiciones (checkbox obligatorio)</li> </ol> <pre><code>&lt;div id=\"app\"&gt;\n  &lt;form @submit.prevent=\"enviarFormulario\"&gt;\n    &lt;div&gt;\n      &lt;label&gt;Nombre:&lt;/label&gt;\n      &lt;input v-model=\"formulario.nombre\" \n             :class=\"{ 'error': errores.nombre }\"&gt;\n      &lt;span v-if=\"errores.nombre\" class=\"error-text\"&gt;{{ errores.nombre }}&lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n      &lt;label&gt;Email:&lt;/label&gt;\n      &lt;input v-model=\"formulario.email\" type=\"email\"\n             :class=\"{ 'error': errores.email }\"&gt;\n      &lt;span v-if=\"errores.email\" class=\"error-text\"&gt;{{ errores.email }}&lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n      &lt;label&gt;Contrase\u00f1a:&lt;/label&gt;\n      &lt;input v-model=\"formulario.password\" type=\"password\"\n             :class=\"{ 'error': errores.password }\"&gt;\n      &lt;span v-if=\"errores.password\" class=\"error-text\"&gt;{{ errores.password }}&lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n      &lt;label&gt;Confirmar Contrase\u00f1a:&lt;/label&gt;\n      &lt;input v-model=\"formulario.confirmarPassword\" type=\"password\"\n             :class=\"{ 'error': errores.confirmarPassword }\"&gt;\n      &lt;span v-if=\"errores.confirmarPassword\" class=\"error-text\"&gt;\n        {{ errores.confirmarPassword }}\n      &lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;div&gt;\n      &lt;label&gt;\n        &lt;input type=\"checkbox\" v-model=\"formulario.terminos\"&gt;\n        Acepto los t\u00e9rminos y condiciones\n      &lt;/label&gt;\n      &lt;span v-if=\"errores.terminos\" class=\"error-text\"&gt;\n        {{ errores.terminos }}\n      &lt;/span&gt;\n    &lt;/div&gt;\n\n    &lt;button type=\"submit\" :disabled=\"enviando\"&gt;\n      {{ enviando ? 'Enviando...' : 'Registrarse' }}\n    &lt;/button&gt;\n  &lt;/form&gt;\n\n  &lt;!-- Vista previa de los datos --&gt;\n  &lt;div v-if=\"enviado\" class=\"datos-enviados\"&gt;\n    &lt;h3&gt;Datos enviados:&lt;/h3&gt;\n    &lt;pre&gt;{{ JSON.stringify(formulario, null, 2) }}&lt;/pre&gt;\n  &lt;/div&gt;\n&lt;/div&gt;\n\n&lt;script&gt;\nconst { createApp, ref, reactive } = Vue;\n\ncreateApp({\n  setup() {\n    const formulario = reactive({\n      nombre: '',\n      email: '',\n      password: '',\n      confirmarPassword: '',\n      terminos: false\n    });\n\n    const errores = reactive({});\n    const enviando = ref(false);\n    const enviado = ref(false);\n\n    function validarEmail(email) {\n      const re = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      return re.test(email);\n    }\n\n    function validarFormulario() {\n      let valido = true;\n\n      // Limpiar errores anteriores\n      Object.keys(errores).forEach(key =&gt; delete errores[key]);\n\n      // Validar nombre\n      if (formulario.nombre.length &lt; 3) {\n        errores.nombre = 'El nombre debe tener al menos 3 caracteres';\n        valido = false;\n      }\n\n      // Validar email\n      if (!formulario.email) {\n        errores.email = 'El email es obligatorio';\n        valido = false;\n      } else if (!validarEmail(formulario.email)) {\n        errores.email = 'Ingresa un email v\u00e1lido';\n        valido = false;\n      }\n\n      // Validar contrase\u00f1a\n      if (formulario.password.length &lt; 6) {\n        errores.password = 'La contrase\u00f1a debe tener al menos 6 caracteres';\n        valido = false;\n      }\n\n      // Validar confirmaci\u00f3n de contrase\u00f1a\n      if (formulario.password !== formulario.confirmarPassword) {\n        errores.confirmarPassword = 'Las contrase\u00f1as no coinciden';\n        valido = false;\n      }\n\n      // Validar t\u00e9rminos y condiciones\n      if (!formulario.terminos) {\n        errores.terminos = 'Debes aceptar los t\u00e9rminos y condiciones';\n        valido = false;\n      }\n\n      return valido;\n    }\n\n    function enviarFormulario() {\n      if (validarFormulario()) {\n        enviando.value = true;\n\n        // Simular env\u00edo al servidor\n        setTimeout(() =&gt; {\n          console.log('Datos enviados:', formulario);\n          enviando.value = false;\n          enviado.value = true;\n        }, 1000);\n      }\n    }\n\n    return { formulario, errores, enviando, enviado, enviarFormulario };\n  }\n}).mount('#app');\n&lt;/script&gt;\n\n&lt;style&gt;\n.error {\n  border-color: #ff3860;\n}\n\n.error-text {\n  color: #ff3860;\n  font-size: 0.8em;\n  margin-top: 0.25rem;\n  display: block;\n}\n\nbutton:disabled {\n  opacity: 0.7;\n  cursor: not-allowed;\n}\n\n.datos-enviados {\n  margin-top: 2rem;\n  padding: 1rem;\n  background-color: #f5f5f5;\n  border-radius: 4px;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"fundamentos/vbind-vmodel/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que hemos visto c\u00f3mo trabajar con <code>v-bind</code> y <code>v-model</code>, en la siguiente secci\u00f3n exploraremos el uso de <code>v-if</code> y <code>v-for</code> para el renderizado condicional y la creaci\u00f3n de listas din\u00e1micas.</p> <p>Siguiente: V-if y V-for \u2192</p>"},{"location":"http/alova/","title":"4.4 Uso de Alova en Vue 3","text":"<p>Alova es una soluci\u00f3n ligera de solicitud de datos para Vue, React y Svelte que proporciona una experiencia de desarrollo fluida con funciones avanzadas como cach\u00e9, gesti\u00f3n de estado y cancelaci\u00f3n de peticiones.</p>"},{"location":"http/alova/#instalacion","title":"Instalaci\u00f3n","text":"<pre><code>npm install alova\n</code></pre>"},{"location":"http/alova/#configuracion-basica","title":"Configuraci\u00f3n b\u00e1sica","text":"<p>Crea un archivo de configuraci\u00f3n (por ejemplo, <code>src/utils/alova.js</code>):</p> <pre><code>import { createAlova } from 'alova'\nimport GlobalFetch from 'alova/GlobalFetch'\nimport VueHook from 'alova/vue'\n\nexport const alovaInstance = createAlova({\n  baseURL: 'https://api.example.com',\n  requestAdapter: GlobalFetch(),\n  statesHook: VueHook,\n\n  // Configuraci\u00f3n global de encabezados\n  headers: {\n    'Content-Type': 'application/json',\n  },\n\n  // Tiempo de espera predeterminado\n  timeout: 10000,\n\n  // Interceptores de petici\u00f3n\n  beforeRequest(method) {\n    const token = localStorage.getItem('auth_token')\n    if (token) {\n      method.config.headers.Authorization = `Bearer ${token}`\n    }\n  },\n\n  // Interceptores de respuesta\n  responded: {\n    onSuccess: async (response, method) =&gt; {\n      const data = await response.json()\n      if (response.status &gt;= 200 &amp;&amp; response.status &lt; 300) {\n        return data\n      }\n      throw new Error(data.message || 'Error en la petici\u00f3n')\n    },\n    onError: (err, method) =&gt; {\n      console.error('Error en la petici\u00f3n:', err)\n      throw err\n    }\n  }\n})\n\nexport default alovaInstance\n</code></pre>"},{"location":"http/alova/#uso-basico-con-composable","title":"Uso b\u00e1sico con Composable","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h2&gt;Lista de Productos (Alova)&lt;/h2&gt;\n    &lt;button @click=\"fetchProducts\" :disabled=\"loading\"&gt;\n      {{ loading ? 'Cargando...' : 'Cargar Productos' }}\n    &lt;/button&gt;\n\n    &lt;div v-if=\"error\" class=\"error\"&gt;\n      {{ error }}\n    &lt;/div&gt;\n\n    &lt;ul v-else-if=\"products.length &gt; 0\" class=\"product-list\"&gt;\n      &lt;li v-for=\"product in products\" :key=\"product.id\" class=\"product-item\"&gt;\n        &lt;h3&gt;{{ product.title }}&lt;/h3&gt;\n        &lt;p&gt;{{ product.description }}&lt;/p&gt;\n        &lt;span class=\"price\"&gt;${{ product.price }}&lt;/span&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue'\nimport { useRequest } from 'alova'\nimport { alovaInstance } from '@/utils/alova'\n\nconst products = ref([])\nconst loading = ref(false)\nconst error = ref(null)\n\nconst fetchProducts = async () =&gt; {\n  loading.value = true\n  error.value = null\n\n  try {\n    const response = await alovaInstance.Get('/products')\n    products.value = response\n  } catch (err) {\n    error.value = err.message || 'Error al cargar los productos'\n  } finally {\n    loading.value = false\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"http/alova/#caracteristicas-avanzadas","title":"Caracter\u00edsticas avanzadas","text":""},{"location":"http/alova/#1-cache-de-peticiones","title":"1. Cache de peticiones","text":"<pre><code>// Usar cach\u00e9 con tiempo de expiraci\u00f3n\nconst { data, loading, error } = useRequest(\n  alovaInstance.Get('/products', {\n    localCache: {\n      expire: 5 * 60 * 1000, // 5 minutos\n      mode: 'restore'\n    }\n  })\n)\n</code></pre>"},{"location":"http/alova/#2-peticiones-postputdelete","title":"2. Peticiones POST/PUT/DELETE","text":"<pre><code>// Crear un nuevo producto\nconst { send: createProduct } = useRequest(\n  (productData) =&gt; alovaInstance.Post('/products', productData),\n  { immediate: false }\n)\n\n// Uso\nconst handleSubmit = async () =&gt; {\n  try {\n    const newProduct = await createProduct({\n      title: 'Nuevo Producto',\n      price: 99.99,\n      description: 'Descripci\u00f3n del producto'\n    })\n    console.log('Producto creado:', newProduct)\n  } catch (err) {\n    console.error('Error al crear el producto:', err)\n  }\n}\n</code></pre>"},{"location":"http/alova/#3-paginacion","title":"3. Paginaci\u00f3n","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;ul&gt;\n      &lt;li v-for=\"item in list\" :key=\"item.id\"&gt;{{ item.name }}&lt;/li&gt;\n    &lt;/ul&gt;\n    &lt;button \n      @click=\"prevPage\" \n      :disabled=\"!hasPrevPage || loading\"\n    &gt;\n      Anterior\n    &lt;/button&gt;\n    &lt;span&gt;P\u00e1gina {{ currentPage }}&lt;/span&gt;\n    &lt;button \n      @click=\"nextPage\" \n      :disabled=\"!hasNextPage || loading\"\n    &gt;\n      Siguiente\n    &lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue'\nimport { usePagination } from 'alova'\nimport { alovaInstance } from '@/utils/alova'\n\nconst pageSize = 10\nconst currentPage = ref(1)\n\nconst {\n  loading,\n  data: list,\n  page: { total },\n  pageCount,\n  isLastPage,\n  isFirstPage,\n  hasNextPage,\n  hasPrevPage,\n  next,\n  prev,\n  go\n} = usePagination(\n  (page, pageSize) =&gt; alovaInstance.Get(`/items?page=${page}&amp;size=${pageSize}`),\n  {\n    initialPage: 1,\n    initialPageSize: pageSize,\n    initialData: []\n  }\n)\n\nconst nextPage = () =&gt; next()\nconst prevPage = () =&gt; prev()\n&lt;/script&gt;\n</code></pre>"},{"location":"http/alova/#ventajas-de-usar-alova","title":"Ventajas de usar Alova","text":"<ol> <li>Integraci\u00f3n con Vue 3: Dise\u00f1ado espec\u00edficamente para trabajar con la Composition API de Vue 3.</li> <li>Cach\u00e9 inteligente: Reduce peticiones innecesarias con un sistema de cach\u00e9 potente.</li> <li>Gesti\u00f3n de estado: Mantiene el estado de las peticiones de forma reactiva.</li> <li>Ligero: Tama\u00f1o reducido en comparaci\u00f3n con otras soluciones.</li> <li>Tipado TypeScript: Excelente soporte para TypeScript.</li> <li>Cancelaci\u00f3n de peticiones: F\u00e1cil cancelaci\u00f3n de peticiones en curso.</li> <li>Reintentos autom\u00e1ticos: Configuraci\u00f3n sencilla de reintentos para peticiones fallidas.</li> </ol>"},{"location":"http/alova/#conclusion","title":"Conclusi\u00f3n","text":"<p>Alova es una excelente opci\u00f3n para aplicaciones Vue 3 que requieren un manejo avanzado de peticiones HTTP con caracter\u00edsticas como cach\u00e9, paginaci\u00f3n y gesti\u00f3n de estado integradas. Su dise\u00f1o modular y su integraci\u00f3n con la Composition API de Vue lo convierten en una herramienta poderosa para el desarrollo de aplicaciones modernas.</p> <p>Para m\u00e1s informaci\u00f3n, consulta la documentaci\u00f3n oficial de Alova.</p>"},{"location":"http/alova/#siguientes-pasos","title":"Siguientes pasos","text":"<p>Ahora que has aprendido a usar Alova, en la siguiente secci\u00f3n encontrar\u00e1s ejercicios pr\u00e1cticos para poner en pr\u00e1ctica lo aprendido sobre peticiones HTTP en Vue 3.</p> <p>Ir a la siguiente secci\u00f3n: Ejercicios Pr\u00e1cticos</p>"},{"location":"http/axios/","title":"4.3 Uso de Axios en Vue 3","text":"<p>Axios es una biblioteca de cliente HTTP basada en promesas que simplifica el manejo de peticiones HTTP en aplicaciones JavaScript. Es especialmente \u00fatil en aplicaciones Vue 3 por su integraci\u00f3n sencilla y caracter\u00edsticas avanzadas.</p>"},{"location":"http/axios/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para instalar Axios en tu proyecto:</p> <pre><code>npm install axios\n# o\nyarn add axios\n</code></pre>"},{"location":"http/axios/#configuracion-basica","title":"Configuraci\u00f3n b\u00e1sica","text":"<p>Crea un archivo de configuraci\u00f3n para Axios (por ejemplo, <code>src/utils/api.js</code>):</p> <pre><code>import axios from 'axios'\n\nconst api = axios.create({\n  baseURL: 'https://api.example.com',\n  timeout: 10000,\n  headers: {\n    'Content-Type': 'application/json',\n  }\n})\n\nexport default api\n</code></pre>"},{"location":"http/axios/#ejemplo-de-componente-con-axios","title":"Ejemplo de componente con Axios","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"http-demo\"&gt;\n    &lt;h2&gt;Lista de Usuarios (Axios)&lt;/h2&gt;\n    &lt;button @click=\"fetchUsers\" :disabled=\"loading\"&gt;\n      {{ loading ? 'Cargando...' : 'Cargar Usuarios' }}\n    &lt;/button&gt;\n\n    &lt;div v-if=\"error\" class=\"error\"&gt;\n      {{ error }}\n    &lt;/div&gt;\n\n    &lt;ul v-else-if=\"users.length &gt; 0\" class=\"user-list\"&gt;\n      &lt;li v-for=\"user in users\" :key=\"user.id\" class=\"user-item\"&gt;\n        &lt;img :src=\"user.avatar\" :alt=\"user.first_name\" class=\"avatar\"&gt;\n        &lt;div class=\"user-info\"&gt;\n          &lt;h3&gt;{{ user.first_name }} {{ user.last_name }}&lt;/h3&gt;\n          &lt;p&gt;{{ user.email }}&lt;/p&gt;\n        &lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;p v-else-if=\"!loading\" class=\"no-data\"&gt;\n      No hay usuarios para mostrar. Haz clic en el bot\u00f3n para cargarlos.\n    &lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue'\nimport api from '@/utils/api'\n\nconst users = ref([])\nconst loading = ref(false)\nconst error = ref(null)\n\nasync function fetchUsers() {\n  loading.value = true\n  error.value = null\n\n  try {\n    const response = await api.get('/users')\n    users.value = response.data.data\n  } catch (err) {\n    console.error('Error al cargar usuarios:', err)\n    error.value = 'No se pudieron cargar los usuarios. Int\u00e9ntalo de nuevo m\u00e1s tarde.'\n  } finally {\n    loading.value = false\n  }\n}\n&lt;/script&gt;\n</code></pre>"},{"location":"http/axios/#metodos-http","title":"M\u00e9todos HTTP","text":""},{"location":"http/axios/#get","title":"GET","text":"<pre><code>// Obtener un recurso\nconst response = await api.get('/users')\n\n// Con par\u00e1metros\nconst response = await api.get('/users', {\n  params: {\n    page: 1,\n    limit: 10\n  }\n})\n</code></pre>"},{"location":"http/axios/#post","title":"POST","text":"<pre><code>// Crear un recurso\nconst response = await api.post('/users', {\n  name: 'Nuevo Usuario',\n  email: 'usuario@ejemplo.com'\n})\n</code></pre>"},{"location":"http/axios/#putpatch","title":"PUT/PATCH","text":"<pre><code>// Actualizar un recurso (PUT reemplaza, PATCH actualiza parcialmente)\nconst response = await api.put(`/users/${userId}`, {\n  name: 'Nombre Actualizado'\n})\n</code></pre>"},{"location":"http/axios/#delete","title":"DELETE","text":"<pre><code>// Eliminar un recurso\nawait api.delete(`/users/${userId}`)\n</code></pre>"},{"location":"http/axios/#interceptores","title":"Interceptores","text":"<p>Los interceptores permiten ejecutar c\u00f3digo antes de que una petici\u00f3n sea enviada o despu\u00e9s de que se reciba una respuesta.</p>"},{"location":"http/axios/#interceptor-de-peticion","title":"Interceptor de petici\u00f3n","text":"<pre><code>api.interceptors.request.use(\n  (config) =&gt; {\n    // Haz algo antes de enviar la petici\u00f3n\n    const token = localStorage.getItem('auth_token')\n    if (token) {\n      config.headers.Authorization = `Bearer ${token}`\n    }\n    return config\n  },\n  (error) =&gt; {\n    return Promise.reject(error)\n  }\n)\n</code></pre>"},{"location":"http/axios/#interceptor-de-respuesta","title":"Interceptor de respuesta","text":"<pre><code>api.interceptors.response.use(\n  (response) =&gt; {\n    // Cualquier c\u00f3digo de estado dentro del rango 2xx causa la ejecuci\u00f3n de esta funci\u00f3n\n    return response\n  },\n  (error) =&gt; {\n    // Cualquier c\u00f3digo de estado fuera del rango 2xx causa la ejecuci\u00f3n de esta funci\u00f3n\n    if (error.response.status === 401) {\n      // Redirigir a la p\u00e1gina de login\n      router.push('/login')\n    }\n    return Promise.reject(error)\n  }\n)\n</code></pre>"},{"location":"http/axios/#cancelacion-de-peticiones","title":"Cancelaci\u00f3n de peticiones","text":"<pre><code>import { CancelToken } from 'axios'\n\n// Crear un token de cancelaci\u00f3n\nconst source = CancelToken.source()\n\n// Realizar la petici\u00f3n\napi.get('/users', {\n  cancelToken: source.token\n}).catch(function(thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Petici\u00f3n cancelada:', thrown.message)\n  } else {\n    // Manejar error\n  }\n})\n\n// Cancelar la petici\u00f3n\nsource.cancel('Operaci\u00f3n cancelada por el usuario')\n</code></pre>"},{"location":"http/axios/#siguientes-pasos","title":"Siguientes pasos","text":"<p>En la siguiente secci\u00f3n, exploraremos Alova, una soluci\u00f3n ligera para manejar peticiones HTTP con caracter\u00edsticas avanzadas como cach\u00e9 y gesti\u00f3n de estado.</p> <p>Ir a la siguiente secci\u00f3n: Uso de Alova</p>"},{"location":"http/ejercicios/","title":"4.5 Ejercicios Pr\u00e1cticos de Peticiones HTTP","text":"<p>En esta secci\u00f3n, pondr\u00e1s en pr\u00e1ctica los conceptos aprendidos sobre peticiones HTTP en Vue 3. Los ejercicios est\u00e1n dise\u00f1ados para que apliques los diferentes m\u00e9todos de realizar peticiones HTTP que hemos visto.</p>"},{"location":"http/ejercicios/#ejercicio-1-lista-de-tareas-con-api-fetch","title":"Ejercicio 1: Lista de Tareas con API Fetch","text":"<p>Objetivo: Crear una aplicaci\u00f3n de lista de tareas que utilice la API Fetch para gestionar las tareas.</p>"},{"location":"http/ejercicios/#requisitos","title":"Requisitos:","text":"<ol> <li>Crea un componente <code>TaskList.vue</code> que muestre una lista de tareas</li> <li>Usa la API Fetch para realizar las siguientes operaciones:</li> <li>Obtener todas las tareas (GET)</li> <li>Agregar una nueva tarea (POST)</li> <li>Marcar una tarea como completada (PATCH)</li> <li>Eliminar una tarea (DELETE)</li> <li>Muestra un indicador de carga durante las peticiones</li> <li>Maneja los errores apropiadamente</li> </ol>"},{"location":"http/ejercicios/#api-a-utilizar","title":"API a utilizar:","text":"<pre><code>GET    /todos          - Obtener todas las tareas\nPOST   /todos          - Crear una nueva tarea\nPATCH  /todos/:id      - Actualizar una tarea\nDELETE /todos/:id      - Eliminar una tarea\n</code></pre>"},{"location":"http/ejercicios/#ejemplo-de-estructura-de-tarea","title":"Ejemplo de estructura de tarea:","text":"<pre><code>{\n  \"id\": 1,\n  \"title\": \"Aprender Vue 3\",\n  \"completed\": false,\n  \"createdAt\": \"2023-10-01T10:00:00Z\"\n}\n</code></pre>"},{"location":"http/ejercicios/#ejercicio-2-busqueda-en-tiempo-real-con-axios","title":"Ejercicio 2: B\u00fasqueda en Tiempo Real con Axios","text":"<p>Objetivo: Crear un buscador que realice peticiones a medida que el usuario escribe.</p>"},{"location":"http/ejercicios/#requisitos_1","title":"Requisitos:","text":"<ol> <li>Crea un componente <code>UserSearch.vue</code></li> <li>Implementa un campo de b\u00fasqueda que realice peticiones a medida que el usuario escribe</li> <li>Usa Axios para realizar las peticiones</li> <li>Implementa cancelaci\u00f3n de peticiones para evitar condiciones de carrera</li> <li>Muestra los resultados de la b\u00fasqueda en una lista</li> <li>Agrega debounce (retraso) a las peticiones (300ms)</li> </ol>"},{"location":"http/ejercicios/#api-a-utilizar_1","title":"API a utilizar:","text":"<pre><code>GET /users?q=:query\n</code></pre>"},{"location":"http/ejercicios/#ejemplo-de-respuesta","title":"Ejemplo de respuesta:","text":"<pre><code>[\n  {\n    \"id\": 1,\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"avatar\": \"https://i.pravatar.cc/150?img=1\"\n  }\n]\n</code></pre>"},{"location":"http/ejercicios/#ejercicio-3-gestor-de-productos-con-alova","title":"Ejercicio 3: Gestor de Productos con Alova","text":"<p>Objetivo: Crear un CRUD de productos utilizando Alova.</p>"},{"location":"http/ejercicios/#requisitos_2","title":"Requisitos:","text":"<ol> <li>Crea un componente <code>ProductManager.vue</code></li> <li>Implementa las siguientes funcionalidades:</li> <li>Lista de productos con paginaci\u00f3n</li> <li>Formulario para agregar/editar productos</li> <li>Botones para editar y eliminar productos</li> <li>Utiliza Alova para:</li> <li>Cachear las peticiones GET por 5 minutos</li> <li>Gestionar el estado de carga y errores</li> <li>Implementar actualizaci\u00f3n optimista de la interfaz</li> </ol>"},{"location":"http/ejercicios/#api-a-utilizar_2","title":"API a utilizar:","text":"<pre><code>GET    /products       - Lista de productos (con paginaci\u00f3n)\nPOST   /products       - Crear producto\nGET    /products/:id   - Obtener un producto\nPUT    /products/:id   - Actualizar producto\nDELETE /products/:id   - Eliminar producto\n</code></pre>"},{"location":"http/ejercicios/#ejemplo-de-estructura-de-producto","title":"Ejemplo de estructura de producto:","text":"<pre><code>{\n  \"id\": 1,\n  \"name\": \"Laptop\",\n  \"description\": \"Potente laptop para desarrolladores\",\n  \"price\": 1299.99,\n  \"stock\": 15,\n  \"category\": \"Electr\u00f3nica\"\n}\n</code></pre>"},{"location":"http/ejercicios/#ejercicio-4-autenticacion-con-interceptores","title":"Ejercicio 4: Autenticaci\u00f3n con Interceptores","text":"<p>Objetivo: Implementar un sistema de autenticaci\u00f3n con manejo de tokens.</p>"},{"location":"http/ejercicios/#requisitos_3","title":"Requisitos:","text":"<ol> <li>Crea un componente <code>Auth.vue</code> con formularios de login/registro</li> <li>Implementa la l\u00f3gica de autenticaci\u00f3n:</li> <li>Almacenar el token JWT en localStorage</li> <li>Redirigir al login cuando el token expire</li> <li>Mostrar el perfil del usuario autenticado</li> <li>Crea un servicio de API que:</li> <li>A\u00f1ada autom\u00e1ticamente el token a las peticiones</li> <li>Maneje la renovaci\u00f3n del token cuando expire</li> <li>Redirija al login cuando la autenticaci\u00f3n falle</li> </ol>"},{"location":"http/ejercicios/#endpoints-de-la-api","title":"Endpoints de la API:","text":"<pre><code>POST   /auth/register    - Registrar nuevo usuario\nPOST   /auth/login       - Iniciar sesi\u00f3n\nGET    /auth/me          - Obtener perfil del usuario\nPOST   /auth/refresh     - Renovar token\n</code></pre>"},{"location":"http/ejercicios/#soluciones-y-consejos","title":"Soluciones y Consejos","text":""},{"location":"http/ejercicios/#consejos-generales","title":"Consejos generales:","text":"<ol> <li>Siempre maneja los estados de carga y error</li> <li>Usa try/catch para capturar errores en las peticiones</li> <li>Considera crear servicios separados para las llamadas a la API</li> <li>Usa TypeScript para un mejor autocompletado y detecci\u00f3n de errores</li> </ol>"},{"location":"http/ejercicios/#recursos-adicionales","title":"Recursos adicionales:","text":"<ul> <li>Documentaci\u00f3n de la API Fetch</li> <li>Documentaci\u00f3n de Axios</li> <li>Documentaci\u00f3n de Alova</li> <li>Ejemplos de c\u00f3digo en GitHub</li> </ul>"},{"location":"http/ejercicios/#siguientes-pasos","title":"Siguientes pasos","text":"<p>\u00a1Felicidades por completar los ejercicios de peticiones HTTP! Ahora que has practicado con diferentes m\u00e9todos para realizar peticiones en Vue 3, est\u00e1s listo para explorar m\u00e1s caracter\u00edsticas avanzadas de Vue.</p> <p>Ir a la siguiente secci\u00f3n: Enrutamiento con Vue Router</p>"},{"location":"http/fetch/","title":"4.2 Uso de la API Fetch","text":"<p>La API Fetch es la forma nativa de realizar peticiones HTTP en JavaScript moderno. Es compatible con todos los navegadores actuales y no requiere dependencias adicionales.</p>"},{"location":"http/fetch/#peticion-get-basica","title":"Petici\u00f3n GET b\u00e1sica","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"http-demo\"&gt;\n    &lt;h2&gt;Lista de Usuarios (Fetch)&lt;/h2&gt;\n    &lt;button @click=\"fetchUsers\" :disabled=\"loading\"&gt;\n      {{ loading ? 'Cargando...' : 'Cargar Usuarios' }}\n    &lt;/button&gt;\n\n    &lt;div v-if=\"error\" class=\"error\"&gt;\n      {{ error }}\n    &lt;/div&gt;\n\n    &lt;ul v-else-if=\"users.length &gt; 0\" class=\"user-list\"&gt;\n      &lt;li v-for=\"user in users\" :key=\"user.id\" class=\"user-item\"&gt;\n        &lt;img :src=\"user.avatar\" :alt=\"user.first_name\" class=\"avatar\"&gt;\n        &lt;div class=\"user-info\"&gt;\n          &lt;h3&gt;{{ user.first_name }} {{ user.last_name }}&lt;/h3&gt;\n          &lt;p&gt;{{ user.email }}&lt;/p&gt;\n        &lt;/div&gt;\n      &lt;/li&gt;\n    &lt;/ul&gt;\n\n    &lt;p v-else-if=\"!loading\" class=\"no-data\"&gt;\n      No hay usuarios para mostrar. Haz clic en el bot\u00f3n para cargarlos.\n    &lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { ref } from 'vue'\n\nconst users = ref([])\nconst loading = ref(false)\nconst error = ref(null)\n\nasync function fetchUsers() {\n  loading.value = true\n  error.value = null\n\n  try {\n    const response = await fetch('https://reqres.in/api/users?delay=1')\n\n    if (!response.ok) {\n      throw new Error(`Error HTTP: ${response.status}`)\n    }\n\n    const data = await response.json()\n    users.value = data.data\n  } catch (err) {\n    console.error('Error al cargar usuarios:', err)\n    error.value = 'No se pudieron cargar los usuarios. Int\u00e9ntalo de nuevo m\u00e1s tarde.'\n  } finally {\n    loading.value = false\n  }\n}\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n/* Estilos para el componente */\n&lt;/style&gt;\n</code></pre>"},{"location":"http/fetch/#ventajas-de-usar-fetch","title":"Ventajas de usar Fetch","text":"<ul> <li>Nativo: No requiere dependencias adicionales</li> <li>Promesas: Usa promesas para un manejo as\u00edncrono m\u00e1s limpio</li> <li>Flexible: Permite un control detallado de las peticiones</li> <li>Streaming: Soporta la lectura de streams de datos</li> </ul>"},{"location":"http/fetch/#desventajas","title":"Desventajas","text":"<ul> <li>Sin soporte en navegadores antiguos: Necesita polyfill para IE11 y versiones anteriores</li> <li>Sin cancelaci\u00f3n nativa: No tiene soporte integrado para cancelar peticiones</li> <li>Manejo de errores manual: Requiere verificaci\u00f3n manual de c\u00f3digos de estado HTTP</li> </ul>"},{"location":"http/fetch/#uso-con-asyncawait","title":"Uso con async/await","text":"<pre><code>async function getData(url) {\n  try {\n    const response = await fetch(url)\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`)\n    }\n    return await response.json()\n  } catch (error) {\n    console.error('Error en la petici\u00f3n:', error)\n    throw error\n  }\n}\n</code></pre>"},{"location":"http/fetch/#envio-de-datos-post-put-delete","title":"Env\u00edo de datos (POST, PUT, DELETE)","text":"<pre><code>async function postData(url, data) {\n  try {\n    const response = await fetch(url, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(data)\n    })\n\n    if (!response.ok) {\n      throw new Error(`Error: ${response.status}`)\n    }\n\n    return await response.json()\n  } catch (error) {\n    console.error('Error al enviar datos:', error)\n    throw error\n  }\n}\n</code></pre>"},{"location":"http/fetch/#cabeceras-personalizadas","title":"Cabeceras personalizadas","text":"<pre><code>const response = await fetch(url, {\n  headers: {\n    'Authorization': 'Bearer tu-token',\n    'X-Custom-Header': 'valor-personalizado'\n  }\n})\n</code></pre>"},{"location":"http/fetch/#control-de-cache","title":"Control de cach\u00e9","text":"<pre><code>// Ignorar cach\u00e9\nconst response = await fetch(url, {\n  cache: 'no-store'\n})\n\n// Usar cach\u00e9 si est\u00e1 disponible\nconst response = await fetch(url, {\n  cache: 'force-cache'\n})\n</code></pre>"},{"location":"http/fetch/#siguientes-pasos","title":"Siguientes pasos","text":"<p>Ahora que has aprendido a usar la API Fetch, en la siguiente secci\u00f3n exploraremos c\u00f3mo usar Axios, que ofrece caracter\u00edsticas adicionales y un manejo de errores m\u00e1s robusto.</p> <p>Ir a la siguiente secci\u00f3n: Uso de Axios</p>"},{"location":"http/introduccion/","title":"4.1 Introducci\u00f3n a las Peticiones HTTP en Vue 3","text":"<p>En el desarrollo de aplicaciones web modernas, la comunicaci\u00f3n con servidores a trav\u00e9s de peticiones HTTP es esencial. Vue 3, junto con el ecosistema de JavaScript, ofrece m\u00faltiples formas de realizar estas peticiones de manera eficiente.</p>"},{"location":"http/introduccion/#por-que-son-importantes-las-peticiones-http","title":"\u00bfPor qu\u00e9 son importantes las peticiones HTTP?","text":"<p>Las peticiones HTTP permiten a nuestras aplicaciones: - Obtener datos de un servidor (GET) - Enviar datos para ser procesados (POST) - Actualizar datos existentes (PUT/PATCH) - Eliminar recursos (DELETE) - Mantener la interfaz de usuario sincronizada con los datos del servidor</p>"},{"location":"http/introduccion/#opciones-disponibles-en-vue-3","title":"Opciones disponibles en Vue 3","text":""},{"location":"http/introduccion/#1-api-fetch","title":"1. API Fetch","text":"<p>La API Fetch nativa del navegador proporciona una interfaz para recuperar recursos de forma as\u00edncrona a trav\u00e9s de la red.</p>"},{"location":"http/introduccion/#2-axios","title":"2. Axios","text":"<p>Una biblioteca de cliente HTTP basada en promesas que funciona tanto en el navegador como en Node.js.</p>"},{"location":"http/introduccion/#3-alova","title":"3. Alova","text":"<p>Una soluci\u00f3n ligera de solicitud de datos para Vue, React y Svelte con funciones avanzadas como cach\u00e9 y gesti\u00f3n de estado.</p>"},{"location":"http/introduccion/#que-aprenderas-en-esta-seccion","title":"\u00bfQu\u00e9 aprender\u00e1s en esta secci\u00f3n?","text":"<ol> <li>C\u00f3mo realizar peticiones HTTP usando diferentes m\u00e9todos</li> <li>Manejo de respuestas y errores</li> <li>Optimizaci\u00f3n de peticiones</li> <li>Mejores pr\u00e1cticas para la comunicaci\u00f3n con APIs</li> <li>Uso de interceptores para tareas comunes</li> </ol>"},{"location":"http/introduccion/#proximos-pasos","title":"Pr\u00f3ximos pasos","text":"<p>En las siguientes secciones, exploraremos en detalle cada una de estas opciones, comenzando con la API Fetch nativa.</p> <p>Ir a la siguiente secci\u00f3n: Uso de la API Fetch</p>"},{"location":"pinia/avanzado/","title":"Conceptos Avanzados de Pinia","text":""},{"location":"pinia/avanzado/#persistencia-de-estado","title":"Persistencia de Estado","text":"<p>Para mantener el estado entre recargas de p\u00e1gina, puedes usar <code>pinia-plugin-persistedstate</code>:</p> <pre><code>npm install pinia-plugin-persistedstate\n</code></pre> <p>Configuraci\u00f3n en tu aplicaci\u00f3n:</p> <pre><code>import { createPinia } from 'pinia'\nimport piniaPluginPersistedstate from 'pinia-plugin-persistedstate'\n\nconst pinia = createPinia()\npinia.use(piniaPluginPersistedstate)\n\napp.use(pinia)\n</code></pre> <p>Luego, en tu store:</p> <pre><code>export const useStore = defineStore('main', {\n  state: () =&gt; ({\n    user: null,\n    preferences: {},\n  }),\n  persist: true, // Persistir todo el estado\n  // O con m\u00e1s control:\n  persist: {\n    paths: ['user'], // Solo persistir el usuario\n    storage: sessionStorage, // Usar sessionStorage en lugar de localStorage\n  },\n})\n</code></pre>"},{"location":"pinia/avanzado/#modulos-y-stores-anidados","title":"M\u00f3dulos y Stores Anidados","text":"<p>Puedes organizar tu l\u00f3gica en m\u00faltiples stores y usarlos juntos:</p> <pre><code>// stores/user.js\nexport const useUserStore = defineStore('user', {\n  state: () =&gt; ({\n    name: 'Usuario',\n    isAuthenticated: false,\n  }),\n  actions: {\n    login() {\n      this.isAuthenticated = true\n    },\n  },\n})\n\n// stores/cart.js\nexport const useCartStore = defineStore('cart', {\n  state: () =&gt; ({\n    items: [],\n  }),\n  actions: {\n    addItem(item) {\n      this.items.push(item)\n    },\n  },\n})\n\n// En un componente\nimport { useUserStore } from '@/stores/user'\nimport { useCartStore } from '@/stores/cart'\n\nexport default {\n  setup() {\n    const user = useUserStore()\n    const cart = useCartStore()\n\n    // Usar ambos stores juntos\n    const checkout = () =&gt; {\n      if (user.isAuthenticated) {\n        // Procesar compra\n      } else {\n        // Redirigir a login\n      }\n    }\n\n    return { user, cart, checkout }\n  },\n}\n</code></pre>"},{"location":"pinia/avanzado/#testing-con-pinia","title":"Testing con Pinia","text":"<p>Para probar tus stores, puedes usar <code>@vue/test-utils</code> junto con Pinia:</p> <pre><code>npm install -D @vue/test-utils @vue/vue3-jest\n</code></pre> <p>Ejemplo de prueba:</p> <pre><code>import { setActivePinia, createPinia } from 'pinia'\nimport { useCounterStore } from '@/stores/counter'\n\ndescribe('Counter Store', () =&gt; {\n  beforeEach(() =&gt; {\n    // Crea una nueva instancia de Pinia antes de cada prueba\n    setActivePinia(createPinia())\n  })\n\n  it('incrementa el contador', () =&gt; {\n    const store = useCounterStore()\n    expect(store.count).toBe(0)\n    store.increment()\n    expect(store.count).toBe(1)\n  })\n})\n</code></pre>"},{"location":"pinia/avanzado/#integracion-con-vue-router","title":"Integraci\u00f3n con Vue Router","text":"<p>Puedes usar Pinia junto con Vue Router para la navegaci\u00f3n protegida:</p> <pre><code>// router/index.js\nimport { createRouter, createWebHistory } from 'vue-router'\nimport { useUserStore } from '@/stores/user'\n\nconst routes = [\n  {\n    path: '/dashboard',\n    component: () =&gt; import('@/views/Dashboard.vue'),\n    meta: { requiresAuth: true }\n  },\n  // Otras rutas...\n]\n\nconst router = createRouter({\n  history: createWebHistory(),\n  routes,\n})\n\nrouter.beforeEach((to, from, next) =&gt; {\n  const userStore = useUserStore()\n\n  if (to.meta.requiresAuth &amp;&amp; !userStore.isAuthenticated) {\n    next('/login')\n  } else {\n    next()\n  }\n})\n\nexport default router\n</code></pre>"},{"location":"pinia/avanzado/#uso-con-typescript","title":"Uso con TypeScript","text":"<p>Pinia tiene soporte de primera clase para TypeScript. Aqu\u00ed hay un ejemplo de un store tipado:</p> <pre><code>// types/user.ts\nexport interface User {\n  id: number\n  name: string\n  email: string\n}\n\n// stores/user.ts\nimport { defineStore } from 'pinia'\nimport type { User } from '@/types/user'\n\ninterface UserState {\n  user: User | null\n  loading: boolean\n  error: string | null\n}\n\nexport const useUserStore = defineStore('user', {\n  state: (): UserState =&gt; ({\n    user: null,\n    loading: false,\n    error: null,\n  }),\n\n  actions: {\n    async fetchUser(userId: number) {\n      this.loading = true\n      this.error = null\n\n      try {\n        const response = await fetch(`/api/users/${userId}`)\n        const data: User = await response.json()\n        this.user = data\n      } catch (error) {\n        this.error = error instanceof Error ? error.message : 'Error desconocido'\n      } finally {\n        this.loading = false\n      }\n    },\n  },\n\n  getters: {\n    isAdmin: (state): boolean =&gt; {\n      return state.user?.role === 'admin'\n    },\n  },\n})\n</code></pre> <p>Con estos conceptos avanzados, podr\u00e1s aprovechar al m\u00e1ximo Pinia en tus aplicaciones Vue 3.</p>"},{"location":"pinia/avanzado/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido conceptos avanzados de Pinia, el siguiente paso es explorar la Estructura de un Proyecto Pr\u00e1ctico, donde ver\u00e1s c\u00f3mo integrar todo lo aprendido en una aplicaci\u00f3n completa.</p>"},{"location":"pinia/introduccion/","title":"Gesti\u00f3n de Estado con Pinia","text":""},{"location":"pinia/introduccion/#introduccion-a-pinia","title":"Introducci\u00f3n a Pinia","text":"<p>Pinia es la soluci\u00f3n oficial de Vue para la gesti\u00f3n de estado. Es una biblioteca de gesti\u00f3n de estado que ofrece una API m\u00e1s simple y tipada que Vuex, el sistema de gesti\u00f3n de estado anterior de Vue.</p>"},{"location":"pinia/introduccion/#por-que-usar-pinia","title":"\u00bfPor qu\u00e9 usar Pinia?","text":"<ul> <li>Tipado mejorado: Soporte de TypeScript de primera clase</li> <li>API m\u00e1s simple: Menos c\u00f3digo repetitivo</li> <li>M\u00f3dulos por defecto: No necesita m\u00f3dulos anidados</li> <li>DevTools: Integraci\u00f3n con Vue DevTools</li> <li>Composable API: Dise\u00f1ado para trabajar con la Composition API</li> <li>Ligero: Muy peque\u00f1o en tama\u00f1o</li> </ul>"},{"location":"pinia/introduccion/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para instalar Pinia en tu proyecto Vue 3, ejecuta:</p> <pre><code>npm install pinia\n# o con yarn\n# yarn add pinia\n# o con pnpm\n# pnpm add pinia\n</code></pre>"},{"location":"pinia/introduccion/#configuracion-basica","title":"Configuraci\u00f3n b\u00e1sica","text":"<p>En tu archivo principal (generalmente <code>main.js</code> o <code>main.ts</code>):</p> <pre><code>import { createApp } from 'vue'\nimport { createPinia } from 'pinia'\nimport App from './App.vue'\n\nconst app = createApp(App)\n\napp.use(createPinia())\napp.mount('#app')\n</code></pre> <p>\u00a1Ahora est\u00e1s listo para comenzar a usar Pinia en tu aplicaci\u00f3n Vue 3! En las siguientes secciones, exploraremos c\u00f3mo crear y usar stores, actions, getters y m\u00e1s.</p>"},{"location":"pinia/introduccion/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que tienes una introducci\u00f3n a Pinia, el siguiente paso es aprender sobre Stores en Pinia, donde aprender\u00e1s a crear y utilizar stores para gestionar el estado de tu aplicaci\u00f3n.</p>"},{"location":"pinia/stores/","title":"Creaci\u00f3n y Uso de Stores en Pinia","text":""},{"location":"pinia/stores/#que-es-un-store","title":"\u00bfQu\u00e9 es un Store?","text":"<p>En Pinia, un store es una entidad que contiene estado y l\u00f3gica de negocio. A diferencia de Vuex, no necesitas mutaciones, solo acciones.</p>"},{"location":"pinia/stores/#creando-tu-primer-store","title":"Creando tu primer Store","text":"<ol> <li>Crea un archivo para el store, por ejemplo <code>stores/counter.js</code>:</li> </ol> <pre><code>import { defineStore } from 'pinia'\n\nexport const useCounterStore = defineStore('counter', {\n  // Estado reactivo\n  state: () =&gt; ({\n    count: 0,\n    name: 'Contador',\n  }),\n\n  // Getters (computadas)\n  getters: {\n    doubleCount: (state) =&gt; state.count * 2,\n    // Getters que usan otros getters\n    greeting: (state) =&gt; {\n      return `Hola, ${state.name}. El contador es ${state.count}`\n    },\n  },\n\n  // Acciones (m\u00e9todos)\n  actions: {\n    increment() {\n      this.count++\n    },\n    async fetchData() {\n      try {\n        const response = await fetch('https://api.example.com/data')\n        const data = await response.json()\n        // Actualizar el estado\n        this.data = data\n        return data\n      } catch (error) {\n        console.error('Error al cargar datos:', error)\n      }\n    },\n  },\n})\n</code></pre>"},{"location":"pinia/stores/#usando-el-store-en-un-componente","title":"Usando el Store en un Componente","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;{{ store.name }}&lt;/h1&gt;\n    &lt;p&gt;Contador: {{ store.count }}&lt;/p&gt;\n    &lt;p&gt;Doble: {{ store.doubleCount }}&lt;/p&gt;\n    &lt;p&gt;{{ store.greeting }}&lt;/p&gt;\n\n    &lt;button @click=\"store.increment()\"&gt;Incrementar&lt;/button&gt;\n    &lt;button @click=\"store.$reset()\"&gt;Reiniciar&lt;/button&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\nimport { useCounterStore } from '@/stores/counter'\n\nconst store = useCounterStore()\n\n// Acceder al estado\nconsole.log(store.count) // 0\n\n// Llamar a una acci\u00f3n\nstore.increment()\n\n// Acciones as\u00edncronas\nconst data = await store.fetchData()\n&lt;/script&gt;\n</code></pre>"},{"location":"pinia/stores/#desestructuracion-reactiva","title":"Desestructuraci\u00f3n Reactiva","text":"<p>Para mantener la reactividad al desestructurar, usa <code>storeToRefs</code>:</p> <pre><code>&lt;script setup&gt;\nimport { storeToRefs } from 'pinia'\nimport { useCounterStore } from '@/stores/counter'\n\nconst store = useCounterStore()\n// Esto mantendr\u00e1 la reactividad\nconst { count, name } = storeToRefs(store)\n// Las acciones pueden ser desestructuradas directamente\nconst { increment } = store\n&lt;/script&gt;\n</code></pre>"},{"location":"pinia/stores/#resetear-el-estado","title":"Resetear el estado","text":"<p>Puedes resetear el estado a sus valores iniciales en cualquier momento:</p> <pre><code>const store = useStore()\nstore.$reset()\n</code></pre>"},{"location":"pinia/stores/#suscripcion-a-cambios","title":"Suscripci\u00f3n a cambios","text":"<p>Puedes suscribirte a los cambios en el estado:</p> <pre><code>store.$subscribe((mutation, state) =&gt; {\n  // Se ejecuta despu\u00e9s de cada cambio\n  console.log('Cambio detectado:', mutation, state)\n})\n</code></pre> <p>Con estos conceptos b\u00e1sicos, ya puedes empezar a gestionar el estado de tu aplicaci\u00f3n Vue con Pinia de manera efectiva.</p>"},{"location":"pinia/stores/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que has aprendido los conceptos b\u00e1sicos de los stores en Pinia, el siguiente paso es explorar Conceptos Avanzados de Pinia, donde aprender\u00e1s sobre persistencia de estado, testing, integraci\u00f3n con Vue Router y m\u00e1s.</p>"},{"location":"proyecto/ejercicios/","title":"7.2 Ejercicios Pr\u00e1cticos","text":""},{"location":"proyecto/ejercicios/#ejercicio-1-lista-de-tareas-mejorada","title":"Ejercicio 1: Lista de Tareas Mejorada","text":"<p>Objetivo: Crear una aplicaci\u00f3n de lista de tareas con las siguientes caracter\u00edsticas:</p> <ol> <li>Agregar nuevas tareas</li> <li>Marcar tareas como completadas</li> <li>Filtrar tareas (todas, activas, completadas)</li> <li>Editar tareas existentes</li> <li>Eliminar tareas</li> <li>Persistencia en localStorage</li> </ol> <p>Requisitos T\u00e9cnicos: - Usar la Composition API - Implementar un store de Pinia - Usar componentes reutilizables - Dise\u00f1o responsivo</p> <p>Pasos Sugeridos: 1. Configura un nuevo proyecto con Vite + Vue 3 2. Crea los componentes necesarios 3. Implementa la l\u00f3gica del store 4. A\u00f1ade los estilos necesarios</p>"},{"location":"proyecto/ejercicios/#ejercicio-2-busqueda-de-usuarios-con-api","title":"Ejercicio 2: B\u00fasqueda de Usuarios con API","text":"<p>Objetivo: Crear una aplicaci\u00f3n que permita buscar usuarios de GitHub y ver sus perfiles.</p> <p>Caracter\u00edsticas: - Campo de b\u00fasqueda por nombre de usuario - Lista de resultados con avatar y nombre de usuario - Vista detallada al hacer clic en un usuario - Loading states y manejo de errores</p> <p>API a utilizar: <pre><code>GET https://api.github.com/search/users?q={query}\nGET https://api.github.com/users/{username}\n</code></pre></p> <p>Bonus: - Paginaci\u00f3n de resultados - Cache de b\u00fasquedas - Historial de b\u00fasquedas recientes</p>"},{"location":"proyecto/ejercicios/#ejercicio-3-tienda-en-linea","title":"Ejercicio 3: Tienda en L\u00ednea","text":"<p>Objetivo: Desarrollar un cat\u00e1logo de productos con carrito de compras.</p> <p>Requisitos: 1. Lista de productos con im\u00e1genes 2. Filtrado por categor\u00edas 3. B\u00fasqueda de productos 4. Carrito de compras funcional 5. Formulario de checkout (simulado)</p> <p>Estructura de Datos Ejemplo: <pre><code>const productos = [\n  {\n    id: 1,\n    nombre: 'Laptop Gamer',\n    precio: 1200,\n    categoria: 'tecnologia',\n    imagen: 'laptop.jpg',\n    descripcion: 'Potente laptop para gaming'\n  },\n  // m\u00e1s productos...\n];\n</code></pre></p>"},{"location":"proyecto/ejercicios/#ejercicio-4-panel-de-administracion","title":"Ejercicio 4: Panel de Administraci\u00f3n","text":"<p>Crea un panel de administraci\u00f3n con las siguientes secciones:</p> <ol> <li> <p>Dashboard:</p> <ul> <li>Estad\u00edsticas generales</li> <li>Gr\u00e1ficos con Chart.js</li> <li>Actividad reciente</li> </ul> </li> <li> <p>Gesti\u00f3n de Usuarios:</p> <ul> <li>Lista de usuarios</li> <li>Crear/editar/eliminar usuarios</li> <li>Filtros y b\u00fasqueda</li> </ul> </li> <li> <p>Gesti\u00f3n de Contenido:</p> <ul> <li>CRUD de art\u00edculos</li> <li>Subida de im\u00e1genes</li> <li>Editor de texto enriquecido (usando Tiptap o similar)</li> </ul> </li> </ol> <p>Tecnolog\u00edas Recomendadas</p> <ul> <li>Vue Router para la navegaci\u00f3n</li> <li>Pinia para el estado global</li> <li>Axios para peticiones HTTP</li> <li>Vuetify o PrimeVue para componentes UI</li> </ul>"},{"location":"proyecto/ejercicios/#ejercicio-5-juego-de-memoria","title":"Ejercicio 5: Juego de Memoria","text":"<p>Implementa un juego de memoria con las siguientes caracter\u00edsticas:</p> <ol> <li>Tablero de cartas (ej: 4x4, 6x6)</li> <li>Voltear cartas por turnos</li> <li>Encontrar parejas iguales</li> <li>Contador de movimientos</li> <li>Temporizador</li> <li>Mejores puntuaciones (guardadas en localStorage)</li> </ol> <p>Extras: - Diferentes niveles de dificultad - Efectos de sonido - Animaciones al voltear cartas - Modo multijugador</p>"},{"location":"proyecto/ejercicios/#proyecto-final-aplicacion-de-notas","title":"Proyecto Final: Aplicaci\u00f3n de Notas","text":"<p>Desarrolla una aplicaci\u00f3n completa de toma de notas con las siguientes caracter\u00edsticas:</p>"},{"location":"proyecto/ejercicios/#backend-simulado-con-json-server-o-similar","title":"Backend (simulado con JSON Server o similar):","text":"<ul> <li>Autenticaci\u00f3n de usuarios</li> <li>CRUD de notas</li> <li>Categor\u00edas/etiquetas</li> <li>B\u00fasqueda y filtrado</li> </ul>"},{"location":"proyecto/ejercicios/#frontend","title":"Frontend:","text":"<ol> <li>Autenticaci\u00f3n:</li> <li>Registro e inicio de sesi\u00f3n</li> <li>Recuperaci\u00f3n de contrase\u00f1a</li> <li> <p>Perfil de usuario</p> </li> <li> <p>Notas:</p> </li> <li>Lista de notas con vista previa</li> <li>Editor de notas enriquecido</li> <li>Organizaci\u00f3n por carpetas/etiquetas</li> <li>B\u00fasqueda y filtros</li> <li> <p>Exportar/importar notas</p> </li> <li> <p>Configuraci\u00f3n:</p> </li> <li>Tema claro/oscuro</li> <li>Tipograf\u00eda</li> <li>Notificaciones</li> </ol>"},{"location":"proyecto/ejercicios/#tecnologias-a-utilizar","title":"Tecnolog\u00edas a Utilizar:","text":"<ul> <li>Vue 3 + Composition API</li> <li>Vue Router</li> <li>Pinia para gesti\u00f3n de estado</li> <li>Vuetify/Quasar para UI</li> <li>Axios para peticiones HTTP</li> <li>Markdown para el formato de notas</li> <li>IndexedDB para almacenamiento offline</li> </ul>"},{"location":"proyecto/ejercicios/#evaluacion-de-proyectos","title":"Evaluaci\u00f3n de Proyectos","text":"<p>Cada proyecto ser\u00e1 evaluado seg\u00fan los siguientes criterios:</p> <ol> <li>Funcionalidad (40%):</li> <li>Cumplimiento de requisitos</li> <li>Correcci\u00f3n de errores</li> <li> <p>Rendimiento</p> </li> <li> <p>C\u00f3digo (30%):</p> </li> <li>Estructura y organizaci\u00f3n</li> <li>Legibilidad</li> <li>Buenas pr\u00e1cticas</li> <li> <p>Manejo de errores</p> </li> <li> <p>UI/UX (20%):</p> </li> <li>Dise\u00f1o atractivo</li> <li>Usabilidad</li> <li> <p>Responsive design</p> </li> <li> <p>Documentaci\u00f3n (10%):</p> </li> <li>README.md</li> <li>Comentarios en el c\u00f3digo</li> <li>Gu\u00eda de instalaci\u00f3n</li> </ol>"},{"location":"proyecto/ejercicios/#recursos-adicionales","title":"Recursos Adicionales","text":"<ol> <li>Vue 3 Documentation</li> <li>Pinia Documentation</li> <li>Vue Router</li> <li>VueUse - Colecci\u00f3n de utilidades para Vue 3</li> <li>Vite - Herramienta de construcci\u00f3n</li> </ol>"},{"location":"proyecto/ejercicios/#entregables","title":"Entregables","text":"<p>Para cada ejercicio, entrega: 1. C\u00f3digo fuente en un repositorio Git 2. Instrucciones de instalaci\u00f3n y ejecuci\u00f3n 3. Capturas de pantalla o demo en vivo (opcional)</p>"},{"location":"proyecto/ejercicios/#preguntas-frecuentes","title":"Preguntas Frecuentes","text":""},{"location":"proyecto/ejercicios/#como-manejo-el-estado-global-en-mi-aplicacion","title":"\u00bfC\u00f3mo manejo el estado global en mi aplicaci\u00f3n?","text":"<p>Usa Pinia para la gesti\u00f3n del estado global. Crea stores l\u00f3gicos (ej: <code>useAuthStore</code>, <code>useNotesStore</code>) y \u00fasalos en tus componentes.</p>"},{"location":"proyecto/ejercicios/#cual-es-la-mejor-forma-de-hacer-peticiones-http","title":"\u00bfCu\u00e1l es la mejor forma de hacer peticiones HTTP?","text":"<p>Puedes usar Axios o la Fetch API nativa. Crea un servicio o composable que maneje todas las llamadas a la API.</p>"},{"location":"proyecto/ejercicios/#como-implemento-la-autenticacion","title":"\u00bfC\u00f3mo implemento la autenticaci\u00f3n?","text":"<ol> <li>Crea un store de autenticaci\u00f3n con Pinia</li> <li>Usa JWT para manejar sesiones</li> <li>Protege rutas con guards del router</li> <li>Almacena el token en cookies seguras</li> </ol>"},{"location":"proyecto/ejercicios/#como-mejoro-el-rendimiento-de-mi-aplicacion","title":"\u00bfC\u00f3mo mejoro el rendimiento de mi aplicaci\u00f3n?","text":"<ul> <li>Usa <code>v-once</code> para contenido est\u00e1tico</li> <li>Implementa lazy loading para rutas</li> <li>Usa <code>v-memo</code> para listas grandes</li> <li>Aprovecha la composici\u00f3n para reutilizar l\u00f3gica</li> </ul>"},{"location":"proyecto/estructura/","title":"4.1 Estructura de un Proyecto Vue 3","text":""},{"location":"proyecto/estructura/#estructura-recomendada","title":"Estructura Recomendada","text":"<pre><code>mi-proyecto/\n\u251c\u2500\u2500 public/                  # Archivos est\u00e1ticos que se copian sin procesar\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u2514\u2500\u2500 index.html           # Plantilla HTML principal\n\u2502\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 assets/             # Recursos est\u00e1ticos (im\u00e1genes, fuentes, etc.)\n\u2502   \u2502   \u2514\u2500\u2500 logo.png\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 components/         # Componentes reutilizables\n\u2502   \u2502   \u251c\u2500\u2500 ui/              # Componentes de UI gen\u00e9ricos (botones, tarjetas, etc.)\n\u2502   \u2502   \u2514\u2500\u2500 shared/          # Componentes compartidos entre p\u00e1ginas\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 composables/        # Composable functions (l\u00f3gica reutilizable)\n\u2502   \u2502   \u251c\u2500\u2500 useApi.js       # L\u00f3gica para llamadas a API\n\u2502   \u2502   \u2514\u2500\u2500 useAuth.js       # L\u00f3gica de autenticaci\u00f3n\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 router/            # Configuraci\u00f3n del enrutador\n\u2502   \u2502   \u2514\u2500\u2500 index.js\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 stores/            # Almacenes Pinia\n\u2502   \u2502   \u251c\u2500\u2500 index.js         # Configuraci\u00f3n principal de Pinia\n\u2502   \u2502   \u251c\u2500\u2500 auth.store.js    # Store para autenticaci\u00f3n\n\u2502   \u2502   \u2514\u2500\u2500 tasks.store.js   # Store para tareas\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 styles/            # Estilos globales\n\u2502   \u2502   \u251c\u2500\u2500 _variables.scss  # Variables globales\n\u2502   \u2502   \u2514\u2500\u2500 main.scss        # Estilos principales\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 utils/             # Utilidades y helpers\n\u2502   \u2502   \u251c\u2500\u2500 validators.js    # Funciones de validaci\u00f3n\n\u2502   \u2502   \u2514\u2500\u2500 formatters.js    # Funciones de formateo\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 views/             # Componentes de p\u00e1gina (rutas)\n\u2502   \u2502   \u251c\u2500\u2500 HomeView.vue\n\u2502   \u2502   \u251c\u2500\u2500 LoginView.vue\n\u2502   \u2502   \u2514\u2500\u2500 DashboardView.vue\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 App.vue            # Componente ra\u00edz\n\u2502   \u251c\u2500\u2500 main.js             # Punto de entrada de la aplicaci\u00f3n\n\u2502   \u2514\u2500\u2500 registerServiceWorker.js  # Configuraci\u00f3n de PWA\n\u2502\n\u251c\u2500\u2500 .env                   # Variables de entorno\n\u251c\u2500\u2500 .gitignore\n\u251c\u2500\u2500 package.json\n\u2514\u2500\u2500 vite.config.js          # Configuraci\u00f3n de Vite\n</code></pre>"},{"location":"proyecto/estructura/#explicacion-de-carpetas-clave","title":"Explicaci\u00f3n de Carpetas Clave","text":""},{"location":"proyecto/estructura/#1-public","title":"1. <code>/public</code>","text":"<ul> <li>Contiene archivos est\u00e1ticos que se copian directamente al directorio de compilaci\u00f3n</li> <li><code>index.html</code> es la plantilla base de la aplicaci\u00f3n</li> </ul>"},{"location":"proyecto/estructura/#2-srccomponents","title":"2. <code>/src/components</code>","text":"<ul> <li>ui/: Componentes de interfaz de usuario gen\u00e9ricos y reutilizables</li> <li>Ejemplo: <code>Button.vue</code>, <code>Card.vue</code>, <code>Modal.vue</code></li> <li>shared/: Componentes compartidos entre p\u00e1ginas</li> <li>Ejemplo: <code>Layout.vue</code>, <code>Header.vue</code>, <code>Footer.vue</code></li> </ul>"},{"location":"proyecto/estructura/#3-srccomposables","title":"3. <code>/src/composables</code>","text":"<ul> <li>Funciones l\u00f3gicas reutilizables usando la Composition API</li> <li>Ejemplo: <code>useFormValidation.js</code>, <code>usePagination.js</code></li> </ul>"},{"location":"proyecto/estructura/#4-srcstores","title":"4. <code>/src/stores</code>","text":"<ul> <li>Almacenes de Pinia para la gesti\u00f3n del estado global</li> <li>Cada archivo representa un dominio l\u00f3gico de la aplicaci\u00f3n</li> </ul>"},{"location":"proyecto/estructura/#5-srcviews","title":"5. <code>/src/views</code>","text":"<ul> <li>Componentes que representan p\u00e1ginas completas</li> <li>Mapeados a rutas en el enrutador</li> </ul>"},{"location":"proyecto/estructura/#estructura-de-un-componente-vue","title":"Estructura de un Componente Vue","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"componente\"&gt;\n    &lt;!-- Contenido del componente --&gt;\n    &lt;h1&gt;{{ titulo }}&lt;/h1&gt;\n    &lt;slot&gt;&lt;/slot&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script setup&gt;\n// Importaciones\nimport { ref, computed, onMounted } from 'vue';\nimport { useStore } from '../stores';\n\n// Props\ndefineProps({\n  titulo: {\n    type: String,\n    required: true\n  }\n});\n\n// Estado reactivo\nconst contador = ref(0);\nconst store = useStore();\n\n// Computadas\nconst contadorDoble = computed(() =&gt; contador.value * 2);\n\n// M\u00e9todos\nfunction incrementar() {\n  contador.value++;\n}\n\n// Hooks del ciclo de vida\nonMounted(() =&gt; {\n  console.log('Componente montado');\n});\n\n// Exponer al template\n// En &lt;script setup&gt;, todo lo declarado est\u00e1 autom\u00e1ticamente disponible\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n.componente {\n  /* Estilos con \u00e1mbito local */\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"proyecto/estructura/#convenciones-de-nombrado","title":"Convenciones de Nombrado","text":"<ol> <li>Componentes: PascalCase (ej. <code>UserProfile.vue</code>)</li> <li>Archivos JS/CSS: kebab-case (ej. <code>user-service.js</code>)</li> <li>Variables y funciones: camelCase</li> <li>Constantes: UPPER_SNAKE_CASE</li> <li>Almacenes Pinia: <code>nombre.tipo.js</code> (ej. <code>user.store.js</code>)</li> </ol>"},{"location":"proyecto/estructura/#ejercicio-estructurar-un-proyecto","title":"Ejercicio: Estructurar un Proyecto","text":"<p>Crea una estructura de proyecto para una aplicaci\u00f3n de blog con las siguientes caracter\u00edsticas:</p> <ol> <li>P\u00e1gina de inicio con lista de publicaciones</li> <li>P\u00e1ginas de categor\u00edas</li> <li>Sistema de comentarios</li> <li>Panel de administraci\u00f3n</li> <li>Autenticaci\u00f3n de usuarios</li> </ol> <pre><code>blog-vue/\n\u251c\u2500\u2500 src/\n\u2502   \u251c\u2500\u2500 components/\n\u2502   \u2502   \u251c\u2500\u2500 ui/           # Componentes de UI reutilizables\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Button.vue\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 Card.vue\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 Modal.vue\n\u2502   \u2502   \u2514\u2500\u2500 shared/       # Componentes compartidos\n\u2502   \u2502       \u251c\u2500\u2500 Layout.vue\n\u2502   \u2502       \u251c\u2500\u2500 Header.vue\n\u2502   \u2502       \u2514\u2500\u2500 Footer.vue\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 composables/     # L\u00f3gica reutilizable\n\u2502   \u2502   \u251c\u2500\u2500 useApi.js\n\u2502   \u2502   \u251c\u2500\u2500 useAuth.js\n\u2502   \u2502   \u2514\u2500\u2500 useForm.js\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 router/          # Configuraci\u00f3n del enrutador\n\u2502   \u2502   \u2514\u2500\u2500 index.js\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 stores/          # Almacenes Pinia\n\u2502   \u2502   \u251c\u2500\u2500 index.js\n\u2502   \u2502   \u251c\u2500\u2500 posts.store.js\n\u2502   \u2502   \u251c\u2500\u2500 categories.store.js\n\u2502   \u2502   \u251c\u2500\u2500 comments.store.js\n\u2502   \u2502   \u2514\u2500\u2500 auth.store.js\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 views/           # Vistas/p\u00e1ginas\n\u2502   \u2502   \u251c\u2500\u2500 public/\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 HomeView.vue\n\u2502   \u2502   \u2502   \u251c\u2500\u2500 PostView.vue\n\u2502   \u2502   \u2502   \u2514\u2500\u2500 CategoryView.vue\n\u2502   \u2502   \u2514\u2500\u2500 admin/\n\u2502   \u2502       \u251c\u2500\u2500 DashboardView.vue\n\u2502   \u2502       \u251c\u2500\u2500 PostsView.vue\n\u2502   \u2502       \u2514\u2500\u2500 UsersView.vue\n\u2502   \u2502\n\u2502   \u251c\u2500\u2500 App.vue\n\u2502   \u2514\u2500\u2500 main.js\n\u2514\u2500\u2500 ...\n</code></pre>"},{"location":"proyecto/estructura/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfPor qu\u00e9 es importante organizar los componentes en subcarpetas como <code>ui/</code> y <code>shared/</code>?</li> <li>\u00bfCu\u00e1l es la ventaja de usar la carpeta <code>composables/</code>?</li> <li>\u00bfPor qu\u00e9 separar las vistas p\u00fablicas de las de administraci\u00f3n?</li> <li>\u00bfC\u00f3mo manejar\u00edas los estilos globales vs estilos de componente?</li> </ol> <p>En la siguiente secci\u00f3n trabajaremos en ejercicios pr\u00e1cticos para aplicar estos conceptos.</p>"},{"location":"routing/ejercicio-practico/","title":"4.4 Ejercicio Pr\u00e1ctico: Blog con Vue Router","text":"<p>En este ejercicio, crear\u00e1s un blog simple utilizando Vue Router. El blog tendr\u00e1 las siguientes caracter\u00edsticas:</p>"},{"location":"routing/ejercicio-practico/#requisitos","title":"Requisitos","text":"<ol> <li> <p>P\u00e1ginas requeridas:</p> <ul> <li>Inicio: Muestra una lista de publicaciones recientes</li> <li>Detalle de publicaci\u00f3n: Muestra una publicaci\u00f3n completa</li> <li>Perfil de usuario: Muestra informaci\u00f3n del autor</li> <li>Crear publicaci\u00f3n: Formulario para nueva publicaci\u00f3n (protegido)</li> <li>P\u00e1gina 404: Para rutas no encontradas</li> </ul> </li> <li> <p>Caracter\u00edsticas:</p> <ul> <li>Navegaci\u00f3n entre p\u00e1ginas</li> <li>Rutas con par\u00e1metros din\u00e1micos</li> <li>Rutas anidadas</li> <li>Protecci\u00f3n de rutas</li> <li>Carga perezosa de componentes</li> <li>Transiciones entre rutas</li> </ul> </li> </ol>"},{"location":"routing/ejercicio-practico/#estructura-del-proyecto","title":"Estructura del Proyecto","text":"<pre><code>src/\n  components/\n    NavBar.vue\n    PostList.vue\n    PostItem.vue\n  views/\n    HomeView.vue\n    PostView.vue\n    UserView.vue\n    CreatePostView.vue\n    LoginView.vue\n    NotFoundView.vue\n  router/\n    index.js\n  App.vue\n  main.js\n</code></pre>"},{"location":"routing/ejercicio-practico/#instrucciones-paso-a-paso","title":"Instrucciones Paso a Paso","text":""},{"location":"routing/ejercicio-practico/#1-configuracion-inicial","title":"1. Configuraci\u00f3n Inicial","text":"<ol> <li> <p>Crea un nuevo proyecto Vue con Vite:    <pre><code>npm create vite@latest vue-blog -- --template vue\ncd vue-blog\nnpm install vue-router@4\n</code></pre></p> </li> <li> <p>Crea la estructura de carpetas mostrada arriba.</p> </li> </ol>"},{"location":"routing/ejercicio-practico/#2-configura-el-router","title":"2. Configura el Router","text":"<p>En <code>router/index.js</code>:</p> <pre><code>import { createRouter, createWebHistory } from 'vue-router';\n\n// Vistas\nconst HomeView = () =&gt; import('@/views/HomeView.vue');\nconst PostView = () =&gt; import('@/views/PostView.vue');\nconst UserView = () =&gt; import('@/views/UserView.vue');\nconst CreatePostView = () =&gt; import('@/views/CreatePostView.vue');\nconst LoginView = () =&gt; import('@/views/LoginView.vue');\nconst NotFoundView = () =&gt; import('@/views/NotFoundView.vue');\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/post/:id',\n    name: 'post',\n    component: PostView,\n    props: true\n  },\n  {\n    path: '/user/:username',\n    name: 'user',\n    component: UserView,\n    props: true\n  },\n  {\n    path: '/create',\n    name: 'create',\n    component: CreatePostView,\n    meta: { requiresAuth: true }\n  },\n  {\n    path: '/login',\n    name: 'login',\n    component: LoginView\n  },\n  {\n    path: '/:pathMatch(.*)*',\n    name: 'not-found',\n    component: NotFoundView\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(import.meta.env.BASE_URL),\n  routes,\n  scrollBehavior(to, from, savedPosition) {\n    return savedPosition || { top: 0 };\n  }\n});\n\n// Guard de navegaci\u00f3n global\nrouter.beforeEach((to, from, next) =&gt; {\n  const isAuthenticated = localStorage.getItem('isAuthenticated');\n\n  if (to.matched.some(record =&gt; record.meta.requiresAuth)) {\n    if (!isAuthenticated) {\n      next({\n        name: 'login',\n        query: { redirect: to.fullPath }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n\nexport default router;\n</code></pre>"},{"location":"routing/ejercicio-practico/#3-crea-los-componentes","title":"3. Crea los Componentes","text":""},{"location":"routing/ejercicio-practico/#navbarvue","title":"NavBar.vue","text":"<pre><code>&lt;template&gt;\n  &lt;nav&gt;\n    &lt;router-link to=\"/\" class=\"logo\"&gt;Mi Blog&lt;/router-link&gt;\n    &lt;div class=\"nav-links\"&gt;\n      &lt;router-link to=\"/\"&gt;Inicio&lt;/router-link&gt;\n      &lt;router-link v-if=\"isAuthenticated\" to=\"/create\"&gt;Nuevo Post&lt;/router-link&gt;\n      &lt;router-link v-if=\"!isAuthenticated\" to=\"/login\"&gt;Iniciar Sesi\u00f3n&lt;/router-link&gt;\n      &lt;button v-else @click=\"logout\" class=\"logout-btn\"&gt;Cerrar Sesi\u00f3n&lt;/button&gt;\n    &lt;/div&gt;\n  &lt;/nav&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { computed } from 'vue';\nimport { useRouter } from 'vue-router';\n\nexport default {\n  name: 'NavBar',\n  setup() {\n    const router = useRouter();\n    const isAuthenticated = computed(() =&gt; localStorage.getItem('isAuthenticated'));\n\n    const logout = () =&gt; {\n      localStorage.removeItem('isAuthenticated');\n      router.push('/login');\n    };\n\n    return { isAuthenticated, logout };\n  }\n};\n&lt;/script&gt;\n\n&lt;style scoped&gt;\n/* Estilos para la barra de navegaci\u00f3n */\n&lt;/style&gt;\n</code></pre>"},{"location":"routing/ejercicio-practico/#4-crea-las-vistas","title":"4. Crea las Vistas","text":""},{"location":"routing/ejercicio-practico/#homeviewvue","title":"HomeView.vue","text":"<pre><code>&lt;template&gt;\n  &lt;div class=\"home\"&gt;\n    &lt;h1&gt;\u00daltimas Publicaciones&lt;/h1&gt;\n    &lt;PostList :posts=\"posts\" /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref } from 'vue';\nimport PostList from '@/components/PostList.vue';\n\nexport default {\n  name: 'HomeView',\n  components: { PostList },\n  setup() {\n    // Datos de ejemplo\n    const posts = ref([\n      { id: 1, title: 'Mi primer post', excerpt: 'Contenido de ejemplo...', author: 'usuario1' },\n      { id: 2, title: 'Segundo post', excerpt: 'M\u00e1s contenido...', author: 'usuario2' }\n    ]);\n\n    return { posts };\n  }\n};\n&lt;/script&gt;\n</code></pre>"},{"location":"routing/ejercicio-practico/#5-implementa-la-autenticacion","title":"5. Implementa la Autenticaci\u00f3n","text":"<p>En <code>LoginView.vue</code>: <pre><code>&lt;template&gt;\n  &lt;div class=\"login\"&gt;\n    &lt;h1&gt;Iniciar Sesi\u00f3n&lt;/h1&gt;\n    &lt;form @submit.prevent=\"handleLogin\"&gt;\n      &lt;input v-model=\"username\" type=\"text\" placeholder=\"Usuario\" required&gt;\n      &lt;input v-model=\"password\" type=\"password\" placeholder=\"Contrase\u00f1a\" required&gt;\n      &lt;button type=\"submit\"&gt;Entrar&lt;/button&gt;\n    &lt;/form&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { ref } from 'vue';\nimport { useRouter, useRoute } from 'vue-router';\n\nexport default {\n  name: 'LoginView',\n  setup() {\n    const username = ref('');\n    const password = ref('');\n    const router = useRouter();\n    const route = useRoute();\n\n    const handleLogin = () =&gt; {\n      // Validaci\u00f3n simple\n      if (username.value &amp;&amp; password.value) {\n        localStorage.setItem('isAuthenticated', 'true');\n        const redirect = route.query.redirect || '/';\n        router.push(redirect);\n      } else {\n        alert('Por favor ingresa usuario y contrase\u00f1a');\n      }\n    };\n\n    return { username, password, handleLogin };\n  }\n};\n&lt;/script&gt;\n</code></pre></p>"},{"location":"routing/ejercicio-practico/#ejercicios-adicionales","title":"Ejercicios Adicionales","text":"<ol> <li> <p>Mejora la autenticaci\u00f3n:</p> <ul> <li>Implementa autenticaci\u00f3n real con una API</li> <li>A\u00f1ade manejo de tokens JWT</li> <li>Implementa renovaci\u00f3n de tokens</li> </ul> </li> <li> <p>A\u00f1ade m\u00e1s caracter\u00edsticas:</p> <ul> <li>Sistema de comentarios</li> <li>B\u00fasqueda de publicaciones</li> <li>Categor\u00edas y etiquetas</li> <li>Paginaci\u00f3n de resultados</li> </ul> </li> <li> <p>Mejora la experiencia de usuario:</p> <ul> <li>A\u00f1ade carga esquel\u00e9tica (skeleton loading)</li> <li>Implementa manejo de errores</li> <li>A\u00f1ade notificaciones</li> </ul> </li> </ol>"},{"location":"routing/ejercicio-practico/#preguntas-de-repaso","title":"Preguntas de Repaso","text":"<ol> <li>\u00bfC\u00f3mo manejar\u00edas la protecci\u00f3n de rutas en una aplicaci\u00f3n real?</li> <li>\u00bfCu\u00e1l es la ventaja de usar lazy loading en las rutas?</li> <li>\u00bfC\u00f3mo implementar\u00edas un sistema de roles y permisos?</li> <li>\u00bfQu\u00e9 estrategias usar\u00edas para manejar el estado global de la aplicaci\u00f3n?</li> </ol>"},{"location":"routing/ejercicio-practico/#recursos-adicionales","title":"Recursos Adicionales","text":"<ul> <li>Documentaci\u00f3n Oficial de Vue Router</li> <li>Patrones de Navegaci\u00f3n Comunes</li> <li>Autenticaci\u00f3n con Vue Router</li> </ul>"},{"location":"routing/ejercicio-practico/#siguiente-paso","title":"Siguiente paso","text":"<p>\u00a1Felicidades por completar el ejercicio de enrutamiento! Ahora que has practicado con las caracter\u00edsticas principales de Vue Router, est\u00e1s listo para explorar la gesti\u00f3n de estado con Pinia.</p> <p>\u2192 Siguiente: Introducci\u00f3n a Pinia</p>"},{"location":"routing/introduccion/","title":"4.1 Introducci\u00f3n a Vue Router","text":"<p>Vue Router es la biblioteca oficial de enrutamiento para Vue.js. Permite crear aplicaciones de una sola p\u00e1gina (SPA) con m\u00faltiples vistas y navegaci\u00f3n entre ellas sin recargar la p\u00e1gina.</p>"},{"location":"routing/introduccion/#que-es-vue-router","title":"\u00bfQu\u00e9 es Vue Router?","text":"<p>Vue Router es un enrutador oficial de Vue.js que permite: - Crear una experiencia de navegaci\u00f3n fluida - Mantener el estado de la aplicaci\u00f3n entre cambios de vista - Implementar navegaci\u00f3n adelante/atr\u00e1s del navegador - Proteger rutas con autenticaci\u00f3n - Cargar componentes de forma din\u00e1mica</p>"},{"location":"routing/introduccion/#conceptos-clave","title":"Conceptos Clave","text":"<ul> <li>Rutas: Mapean URLs a componentes</li> <li>Vistas: Componentes que se muestran seg\u00fan la ruta</li> <li>Navegaci\u00f3n: Movimiento entre diferentes rutas</li> <li>Par\u00e1metros: Datos pasados a trav\u00e9s de la URL</li> <li>Anidaci\u00f3n: Jerarqu\u00eda de rutas</li> </ul>"},{"location":"routing/introduccion/#instalacion","title":"Instalaci\u00f3n","text":"<p>Para instalar Vue Router en tu proyecto:</p> <pre><code>npm install vue-router@4\n# o con yarn\nyarn add vue-router@4\n</code></pre>"},{"location":"routing/introduccion/#configuracion-basica","title":"Configuraci\u00f3n B\u00e1sica","text":"<ol> <li>Crea un archivo <code>router/index.js</code> en tu proyecto:</li> </ol> <pre><code>import { createRouter, createWebHistory } from 'vue-router';\nimport HomeView from '../views/HomeView.vue';\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: HomeView\n  },\n  {\n    path: '/about',\n    name: 'about',\n    // Carga perezosa del componente\n    component: () =&gt; import('../views/AboutView.vue')\n  }\n];\n\nconst router = createRouter({\n  history: createWebHistory(process.env.BASE_URL),\n  routes\n});\n\nexport default router;\n</code></pre> <ol> <li>Registra el router en <code>main.js</code>:</li> </ol> <pre><code>import { createApp } from 'vue';\nimport App from './App.vue';\nimport router from './router';\n\nconst app = createApp(App);\napp.use(router);\napp.mount('#app');\n</code></pre>"},{"location":"routing/introduccion/#componentes-basicos","title":"Componentes B\u00e1sicos","text":"<p>Vue Router proporciona dos componentes principales:</p> <ol> <li> <p><code>&lt;router-link&gt;</code>: Para la navegaci\u00f3n entre rutas    <pre><code>&lt;router-link to=\"/\"&gt;Inicio&lt;/router-link&gt;\n&lt;router-link :to=\"{ name: 'about' }\"&gt;Acerca de&lt;/router-link&gt;\n</code></pre></p> </li> <li> <p><code>&lt;router-view&gt;</code>: Muestra el componente correspondiente a la ruta actual    <pre><code>&lt;template&gt;\n  &lt;div id=\"app\"&gt;\n    &lt;nav&gt;\n      &lt;router-link to=\"/\"&gt;Inicio&lt;/router-link&gt; |\n      &lt;router-link to=\"/about\"&gt;Acerca de&lt;/router-link&gt;\n    &lt;/nav&gt;\n    &lt;router-view /&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre></p> </li> </ol>"},{"location":"routing/introduccion/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que tienes configurado Vue Router, puedes aprender sobre rutas b\u00e1sicas y navegaci\u00f3n.</p>"},{"location":"routing/navegacion-avanzada/","title":"4.3 Navegaci\u00f3n Avanzada con Vue Router","text":""},{"location":"routing/navegacion-avanzada/#guards-de-navegacion","title":"Guards de Navegaci\u00f3n","text":"<p>Los guards de navegaci\u00f3n permiten controlar el acceso a las rutas y realizar acciones antes o despu\u00e9s de la navegaci\u00f3n.</p>"},{"location":"routing/navegacion-avanzada/#guard-global","title":"Guard Global","text":"<p>Se ejecuta antes de cada navegaci\u00f3n:</p> <pre><code>// router/index.js\nrouter.beforeEach((to, from, next) =&gt; {\n  // to: Ruta a la que se quiere navegar\n  // from: Ruta de la que se viene\n  // next: Funci\u00f3n para continuar con la navegaci\u00f3n\n\n  if (to.matched.some(record =&gt; record.meta.requiresAuth)) {\n    if (!isAuthenticated()) {\n      next({\n        path: '/login',\n        query: { redirect: to.fullPath }\n      });\n    } else {\n      next();\n    }\n  } else {\n    next();\n  }\n});\n</code></pre>"},{"location":"routing/navegacion-avanzada/#guard-de-ruta","title":"Guard de Ruta","text":"<p>Se define en la configuraci\u00f3n de la ruta:</p> <pre><code>const routes = [\n  {\n    path: '/dashboard',\n    component: Dashboard,\n    meta: { requiresAuth: true },\n    beforeEnter: (to, from, next) =&gt; {\n      if (isAuthenticated()) {\n        next();\n      } else {\n        next('/login');\n      }\n    }\n  }\n];\n</code></pre>"},{"location":"routing/navegacion-avanzada/#guards-en-el-componente","title":"Guards en el Componente","text":"<p>Se definen dentro del componente:</p> <pre><code>export default {\n  beforeRouteEnter(to, from, next) {\n    // Se llama antes de que la ruta que renderiza este componente sea confirmada.\n    // NO tiene acceso a `this` porque el componente no ha sido creado a\u00fan.\n    next(vm =&gt; {\n      // Acceso a la instancia del componente a trav\u00e9s de `vm`\n      vm.loadUserData();\n    });\n  },\n\n  beforeRouteUpdate(to, from) {\n    // Se llama cuando la ruta cambia pero el componente se reutiliza\n    // Por ejemplo, cuando cambian los par\u00e1metros din\u00e1micos\n    this.userData = null;\n    this.fetchUserData(to.params.id);\n  },\n\n  beforeRouteLeave(to, from, next) {\n    // Se llama cuando la ruta que renderiza este componente est\u00e1 a punto de ser abandonada\n    if (this.unsavedChanges) {\n      if (confirm('\u00bfTienes cambios sin guardar. \u00bfSeguro que quieres salir?')) {\n        next();\n      } else {\n        next(false);\n      }\n    } else {\n      next();\n    }\n  }\n};\n</code></pre>"},{"location":"routing/navegacion-avanzada/#lazy-loading-de-rutas","title":"Lazy Loading de Rutas","text":"<p>Para mejorar el rendimiento, carga los componentes solo cuando sean necesarios:</p> <pre><code>const routes = [\n  {\n    path: '/about',\n    name: 'about',\n    component: () =&gt; import('../views/AboutView.vue')\n  },\n  {\n    path: '/contact',\n    name: 'contact',\n    // Agrupa componentes en el mismo chunk\n    component: () =&gt; import(/* webpackChunkName: \"contact\" */ '../views/ContactView.vue')\n  }\n];\n</code></pre>"},{"location":"routing/navegacion-avanzada/#scroll-behavior","title":"Scroll Behavior","text":"<p>Controla el comportamiento del scroll al navegar:</p> <pre><code>const router = createRouter({\n  // ...\n  scrollBehavior(to, from, savedPosition) {\n    // Retorna la posici\u00f3n deseada\n    if (savedPosition) {\n      return savedPosition;\n    } else if (to.hash) {\n      return {\n        el: to.hash,\n        behavior: 'smooth',\n      };\n    } else {\n      return { top: 0 };\n    }\n  },\n});\n</code></pre>"},{"location":"routing/navegacion-avanzada/#transiciones","title":"Transiciones","text":"<p>Agrega animaciones a las transiciones entre rutas:</p> <pre><code>&lt;template&gt;\n  &lt;router-view v-slot=\"{ Component }\"&gt;\n    &lt;transition name=\"fade\" mode=\"out-in\"&gt;\n      &lt;component :is=\"Component\" /&gt;\n    &lt;/transition&gt;\n  &lt;/router-view&gt;\n&lt;/template&gt;\n\n&lt;style&gt;\n.fade-enter-active,\n.fade-leave-active {\n  transition: opacity 0.3s ease;\n}\n\n.fade-enter-from,\n.fade-leave-to {\n  opacity: 0;\n}\n&lt;/style&gt;\n</code></pre>"},{"location":"routing/navegacion-avanzada/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que conoces la navegaci\u00f3n avanzada, puedes revisar el ejercicio pr\u00e1ctico para aplicar estos conceptos.</p>"},{"location":"routing/rutas-basicas/","title":"4.2 Rutas B\u00e1sicas y Navegaci\u00f3n","text":""},{"location":"routing/rutas-basicas/#rutas-basicas","title":"Rutas B\u00e1sicas","text":"<p>Una ruta b\u00e1sica en Vue Router se define como un objeto con las siguientes propiedades:</p> <pre><code>const routes = [\n  {\n    path: '/',              // Ruta en la URL\n    name: 'home',           // Nombre opcional para referenciar la ruta\n    component: HomeView,    // Componente a renderizar\n    meta: {                // Metadatos opcionales\n      requiresAuth: true\n    },\n    props: true           // Pasar par\u00e1metros de ruta como props\n  },\n  // Otras rutas...\n];\n</code></pre>"},{"location":"routing/rutas-basicas/#navegacion-con-router-link","title":"Navegaci\u00f3n con <code>&lt;router-link&gt;</code>","text":"<p>El componente <code>&lt;router-link&gt;</code> se utiliza para crear enlaces de navegaci\u00f3n:</p> <pre><code>&lt;!-- Navegaci\u00f3n b\u00e1sica --&gt;\n&lt;router-link to=\"/about\"&gt;Acerca de&lt;/router-link&gt;\n\n&lt;!-- Usando el nombre de la ruta --&gt;\n&lt;router-link :to=\"{ name: 'user', params: { id: 123 }}\"&gt;Usuario 123&lt;/router-link&gt;\n&lt;!-- Con clases personalizadas --&gt;\n&lt;router-link \n  to=\"/contact\"\n  class=\"nav-link\"\n  active-class=\"active-link\"\n  exact-active-class=\"exact-active-link\"\n&gt;\n  Contacto\n&lt;/router-link&gt;\n</code></pre>"},{"location":"routing/rutas-basicas/#navegacion-programatica","title":"Navegaci\u00f3n Program\u00e1tica","text":"<p>Puedes navegar mediante c\u00f3digo usando el objeto <code>router</code>:</p> <pre><code>// En m\u00e9todos de opciones\nexport default {\n  methods: {\n    goToAbout() {\n      this.$router.push('/about');\n      // O usando el nombre de la ruta\n      // this.$router.push({ name: 'about' });\n    },\n    goBack() {\n      this.$router.go(-1);\n    }\n  }\n};\n\n// En setup() (Composition API)\nimport { useRouter } from 'vue-router';\n\nexport default {\n  setup() {\n    const router = useRouter();\n\n    const goToAbout = () =&gt; {\n      router.push('/about');\n    };\n\n    return { goToAbout };\n  }\n};\n</code></pre>"},{"location":"routing/rutas-basicas/#rutas-con-parametros","title":"Rutas con Par\u00e1metros","text":""},{"location":"routing/rutas-basicas/#definicion-de-rutas-con-parametros","title":"Definici\u00f3n de rutas con par\u00e1metros","text":"<pre><code>const routes = [\n  {\n    path: '/user/:id',\n    name: 'user',\n    component: UserView,\n    props: true // Pasa los par\u00e1metros como props al componente\n  },\n  {\n    path: '/user/:username/post/:postId',\n    name: 'post',\n    component: PostView\n  }\n];\n</code></pre>"},{"location":"routing/rutas-basicas/#acceso-a-los-parametros","title":"Acceso a los par\u00e1metros","text":"<pre><code>&lt;template&gt;\n  &lt;div&gt;\n    &lt;h1&gt;Perfil de {{ $route.params.username }}&lt;/h1&gt;\n    &lt;!-- O usando Composition API --&gt;\n    &lt;p&gt;ID de usuario: {{ userId }}&lt;/p&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport { computed } from 'vue';\nimport { useRoute } from 'vue-router';\n\nexport default {\n  name: 'UserView',\n  props: {\n    // Si usas props: true en la ruta\n    id: {\n      type: String,\n      required: true\n    }\n  },\n  setup(props) {\n    const route = useRoute();\n    const userId = computed(() =&gt; route.params.id);\n\n    return { userId };\n  }\n};\n&lt;/script&gt;\n</code></pre>"},{"location":"routing/rutas-basicas/#rutas-anidadas","title":"Rutas Anidadas","text":"<p>Las rutas anidadas permiten crear jerarqu\u00edas de componentes:</p> <pre><code>const routes = [\n  {\n    path: '/settings',\n    component: SettingsLayout,\n    children: [\n      {\n        path: 'profile',\n        component: UserProfile\n      },\n      {\n        path: 'account',\n        component: UserAccount\n      },\n      {\n        path: 'privacy',\n        component: PrivacySettings\n      },\n      // Ruta vac\u00eda que coincide con /settings\n      { path: '', redirect: 'profile' }\n    ]\n  }\n];\n</code></pre> <p>En el componente <code>SettingsLayout.vue</code>:</p> <pre><code>&lt;template&gt;\n  &lt;div class=\"settings-layout\"&gt;\n    &lt;nav&gt;\n      &lt;router-link to=\"/settings/profile\"&gt;Perfil&lt;/router-link&gt;\n      &lt;router-link to=\"/settings/account\"&gt;Cuenta&lt;/router-link&gt;\n      &lt;router-link to=\"/settings/privacy\"&gt;Privacidad&lt;/router-link&gt;\n    &lt;/nav&gt;\n    &lt;div class=\"settings-content\"&gt;\n      &lt;router-view /&gt;\n    &lt;/div&gt;\n  &lt;/div&gt;\n&lt;/template&gt;\n</code></pre>"},{"location":"routing/rutas-basicas/#siguiente-paso","title":"Siguiente paso","text":"<p>Ahora que conoces las rutas b\u00e1sicas, puedes aprender sobre navegaci\u00f3n avanzada.</p>"}]}